<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InfragisticsWPF4.Controls.Grids.XamGrid.v21.2</name>
    </assembly>
    <members>
        <member name="T:Infragistics.Animation">
            <summary>
            An object that can help to animate anything that needs animating via events.
            </summary>
        </member>
        <member name="M:Infragistics.Animation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Animation"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Animation.Duration">
            <summary>
            Gets/sets how many steps should be taken for the Start value to reach the End value.
            </summary>
        </member>
        <member name="P:Infragistics.Animation.IsPlaying">
            <summary>
            Gets whether or not the Animation is currently running.
            </summary>
        </member>
        <member name="P:Infragistics.Animation.Time">
            <summary>
            Gets/ sets the current step the animation is in.
            </summary>
        </member>
        <member name="P:Infragistics.Animation.EasingFunction">
            <summary>
            Gets/ sets the easing function that will be used to calculate the animation.
            </summary>
        </member>
        <member name="M:Infragistics.Animation.Play">
            <summary>
            Resets the Time to 1 and starts the Animation.
            </summary>
        </member>
        <member name="M:Infragistics.Animation.Continue">
            <summary>
            Resumes the animation if it was stopped before finishing. 
            </summary>
        </member>
        <member name="M:Infragistics.Animation.Stop">
            <summary>
            Ends the currently running animation.
            </summary>
        </member>
        <member name="E:Infragistics.Animation.Tick">
            <summary>
            Fired for each step in the Animation.
            </summary>
        </member>
        <member name="M:Infragistics.Animation.OnTick">
            <summary>
            Called each step in the Animation.
            </summary>
        </member>
        <member name="E:Infragistics.Animation.Complete">
            <summary>
            Fired when the animation has reached the end.
            </summary>
        </member>
        <member name="M:Infragistics.Animation.OnComplete">
            <summary>
            Called when the animation has reached its end.
            </summary>
        </member>
        <member name="T:Infragistics.AnimationEventArgs">
            <summary>
            The EventArgs that are passed into the <see cref="E:Infragistics.Animation.Tick"/> event.
            </summary>
        </member>
        <member name="P:Infragistics.AnimationEventArgs.Value">
            <summary>
            The value for the next step in the <see cref="T:Infragistics.Animation"/>.
            </summary>
        </member>
        <member name="P:Infragistics.AnimationEventArgs.Difference">
            <summary>
            Difference in the animation.
            </summary>
        </member>
        <member name="T:Infragistics.AutomationPeers.CellControlBaseAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase" /> types to UI
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellControlBaseAutomationPeer.#ctor(Infragistics.Controls.Grids.Primitives.CellControlBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.AutomationPeers.CellControlBaseAutomationPeer"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellControlBaseAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>A value of the enumeration.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellControlBaseAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            The name of the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. See Remarks.
            </returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellControlBaseAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the <see cref="T:System.Windows.FrameworkElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/>.
            </summary>
            <returns>
            The text label of the element that is associated with this automation peer.
            </returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellControlBaseAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>See Remarks.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellControlBaseAutomationPeer.OwningCell_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the PropertyChanged event of the OwningCell property like Cell.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellControlBaseAutomationPeer.SetValue(System.String)">
            <summary>
            Sets the value of a control.
            </summary>
            <param name="value">The value to set. The provider is responsible for converting the value to the appropriate data type.</param>
        </member>
        <member name="P:Infragistics.AutomationPeers.CellControlBaseAutomationPeer.IsReadOnly">
            <summary>
            Gets a value indicating whether the value of a control is read-only.
            </summary>
            <value></value>
            <returns>true if the value is read-only; false if it can be modified. </returns>
        </member>
        <member name="P:Infragistics.AutomationPeers.CellControlBaseAutomationPeer.Value">
            <summary>
            Gets the value of the control.
            </summary>
            <value></value>
            <returns>The value of the control.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellControlBaseAutomationPeer.AddToSelection">
            <summary>
            Adds the current element to the collection of selected items.
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellControlBaseAutomationPeer.RemoveFromSelection">
            <summary>
            Removes the current element from the collection of selected items.
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellControlBaseAutomationPeer.Select">
            <summary>
            Clears any existing selection and then selects the current element.
            </summary>
        </member>
        <member name="P:Infragistics.AutomationPeers.CellControlBaseAutomationPeer.IsSelected">
            <summary>
            Gets a value indicating whether an item is selected.
            </summary>
            <value></value>
            <returns>true if the element is selected; otherwise, false.</returns>
        </member>
        <member name="P:Infragistics.AutomationPeers.CellControlBaseAutomationPeer.SelectionContainer">
            <summary>
            Gets the UI automation provider that implements <see cref="T:System.Windows.Automation.Provider.ISelectionProvider"/> and acts as the container for the calling object.
            </summary>
            <value></value>
            <returns>The UI automation provider.</returns>
        </member>
        <member name="T:Infragistics.AutomationPeers.CellsPanelAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Grids.Primitives.CellsPanel"/> types to UI
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellsPanelAutomationPeer.#ctor(Infragistics.Controls.Grids.Primitives.CellsPanel)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.AutomationPeers.CellsPanelAutomationPeer"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellsPanelAutomationPeer.RaiseCanSelectMultiplePropertyChangedEvent(System.Boolean,System.Boolean)">
            <summary>
            Raises the CanSelectMultiplePropertyChangedEvent.
            </summary>
            <param name="oldValue">if set to <c>true</c> The old value.</param>
            <param name="newValue">if set to <c>true</c> The new value.</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellsPanelAutomationPeer.RaiseExpandCollapseStatePropertyChangedEvent(System.Boolean,System.Boolean)">
            <summary>
            Raises the ExpandCollapseStatePropertyChangedEvent.
            </summary>
            <param name="oldValue">if set to <c>true</c> The old value.</param>
            <param name="newValue">if set to <c>true</c> The new value.</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellsPanelAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>A value of the enumeration.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellsPanelAutomationPeer.GetChildrenCore">
            <summary>
            Returns the collection of child elements of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"/>.
            </summary>
            <returns>
            A list of child <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> elements.
            </returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellsPanelAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            The name of the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. See Remarks.
            </returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellsPanelAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the <see cref="T:System.Windows.FrameworkElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/>.
            </summary>
            <returns>
            The text label of the element that is associated with this automation peer.
            </returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellsPanelAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>See Remarks.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellsPanelAutomationPeer.ExpandableRow_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the PropertyChanged event of the ExpandableRow property.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Infragistics.AutomationPeers.CellsPanelAutomationPeer.CanSelectMultiple">
            <summary>
            Gets a value indicating whether the UI automation provider allows more than one child element to be selected concurrently.
            </summary>
            <value></value>
            <returns>true if multiple selection is allowed; otherwise, false.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellsPanelAutomationPeer.GetSelection">
            <summary>
            Retrieves a UI automation provider for each child element that is selected.
            </summary>
            <returns>An array of UI automation providers.</returns>
        </member>
        <member name="P:Infragistics.AutomationPeers.CellsPanelAutomationPeer.IsSelectionRequired">
            <summary>
            Gets a value indicating whether the UI automation provider requires at least one child element to be selected.
            </summary>
            <value></value>
            <returns>true if selection is required; otherwise, false.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellsPanelAutomationPeer.AddToSelection">
            <summary>
            Selects the item this automation peer controls.
            </summary>
        </member>
        <member name="P:Infragistics.AutomationPeers.CellsPanelAutomationPeer.IsSelected">
            <summary>
            Gets a value indicating whether the item this automation peer controls is selected.
            </summary>
            <value></value>
            <returns>true if the element is selected; otherwise, false.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellsPanelAutomationPeer.RemoveFromSelection">
            <summary>
            Deselects the item this automation peer controls.
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellsPanelAutomationPeer.Select">
            <summary>
            Clears the current selection then selects the item this automation peer controls.
            </summary>
        </member>
        <member name="P:Infragistics.AutomationPeers.CellsPanelAutomationPeer.SelectionContainer">
            <summary>
            Gets the provider for this control.
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellsPanelAutomationPeer.Collapse">
            <summary>
            Hides all nodes, controls, or content that are descendants of the control.
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.CellsPanelAutomationPeer.Expand">
            <summary>
            Displays all child nodes, controls, or content of the control.
            </summary>
        </member>
        <member name="P:Infragistics.AutomationPeers.CellsPanelAutomationPeer.ExpandCollapseState">
            <summary>
            Gets the state (expanded or collapsed) of the control.
            </summary>
            <value></value>
            <returns>The state (expanded or collapsed) of the control.</returns>
        </member>
        <member name="T:Infragistics.AutomationPeers.XamGridAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Grids.XamGrid"/> types to UI
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamGridAutomationPeer.#ctor(Infragistics.Controls.Grids.XamGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.AutomationPeers.XamGridAutomationPeer"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamGridAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>A value of the enumeration.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamGridAutomationPeer.GetChildrenCore">
            <summary>
            Returns the collection of child elements of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"/>.
            </summary>
            <returns>
            A list of child <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> elements.
            </returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamGridAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            The name of the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. See Remarks.
            </returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamGridAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the <see cref="T:System.Windows.FrameworkElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/>.
            </summary>
            <returns>
            The text label of the element that is associated with this automation peer.
            </returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamGridAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>See Remarks.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamGridAutomationPeer.Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)">
            <summary>
            Scrolls the grid by the specified ammounts.
            </summary>
            <param name="horizontalAmount"></param>
            <param name="verticalAmount"></param>
        </member>
        <member name="P:Infragistics.AutomationPeers.XamGridAutomationPeer.HorizontallyScrollable">
            <summary>
            Gets a value indicating whether the control can scroll horizontally.
            </summary>
            <value></value>
            <returns>true if the control can scroll horizontally; otherwise, false.</returns>
        </member>
        <member name="P:Infragistics.AutomationPeers.XamGridAutomationPeer.VerticallyScrollable">
            <summary>
            Gets a value indicating whether the control can scroll vertically.
            </summary>
            <value></value>
            <returns>true if the control can scroll vertically; otherwise, false. </returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamGridAutomationPeer.SetScrollPercent(System.Double,System.Double)">
            <summary>
            Sets the horizontal and vertical scroll position as a percentage of the total content area within the control.
            </summary>
            <param name="horizontalPercent">The horizontal position as a percentage of the content area's total range. Pass <see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll"/> if the control cannot be scrolled in this direction.</param>
            <param name="verticalPercent">The vertical position as a percentage of the content area's total range. Pass <see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll"/> if the control cannot be scrolled in this direction.</param>
        </member>
        <member name="P:Infragistics.AutomationPeers.XamGridAutomationPeer.HorizontalScrollPercent">
            <summary>
            Gets the current horizontal scroll position.
            </summary>
            <value></value>
            <returns>The horizontal scroll position as a percentage of the total content area within the control.</returns>
        </member>
        <member name="P:Infragistics.AutomationPeers.XamGridAutomationPeer.HorizontalViewSize">
            <summary>
            Gets the current horizontal view size.
            </summary>
            <value></value>
            <returns>The horizontal size of the viewable region as a percentage of the total content area within the control. </returns>
        </member>
        <member name="P:Infragistics.AutomationPeers.XamGridAutomationPeer.VerticalScrollPercent">
            <summary>
            Gets the current vertical scroll position.
            </summary>
            <value></value>
            <returns>The vertical scroll position as a percentage of the total content area within the control. </returns>
        </member>
        <member name="P:Infragistics.AutomationPeers.XamGridAutomationPeer.VerticalViewSize">
            <summary>
            Gets the vertical view size.
            </summary>
            <value></value>
            <returns>The vertical size of the viewable region as a percentage of the total content area within the control. </returns>
        </member>
        <member name="P:Infragistics.AutomationPeers.XamGridAutomationPeer.CanSelectMultiple">
            <summary>
            Gets a value indicating whether the UI automation provider allows more than one child element to be selected concurrently.
            </summary>
            <value></value>
            <returns>true if multiple selection is allowed; otherwise, false.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamGridAutomationPeer.GetSelection">
            <summary>
            Retrieves a UI automation provider for each child element that is selected.
            </summary>
            <returns>An array of UI automation providers.</returns>
        </member>
        <member name="P:Infragistics.AutomationPeers.XamGridAutomationPeer.IsSelectionRequired">
            <summary>
            Gets a value indicating whether the UI automation provider requires at least one child element to be selected.
            </summary>
            <value></value>
            <returns>true if selection is required; otherwise, false.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamGridAutomationPeer.GetItem(System.Int32,System.Int32)">
            <summary>
            Retrieves the UI automation provider for the specified cell.
            </summary>
            <param name="row">The ordinal number of the row that contains the cell.</param>
            <param name="column">The ordinal number of the column that contains the cell.</param>
            <returns>
            The UI automation provider for the specified cell.
            </returns>
        </member>
        <member name="P:Infragistics.AutomationPeers.XamGridAutomationPeer.ColumnCount">
            <summary>
            Gets the total number of columns in a grid.
            </summary>
            <value></value>
            <returns>The total number of columns in a grid.</returns>
        </member>
        <member name="P:Infragistics.AutomationPeers.XamGridAutomationPeer.RowCount">
            <summary>
            Gets the total number of rows in a grid.
            </summary>
            <value></value>
            <returns>The total number of rows in a grid.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamGridAutomationPeer.GetColumnHeaders">
            <summary>
            Returns a collection of UI Automation providers that represents all the column headers in a table.
            </summary>
            <returns>An array of UI automation providers.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamGridAutomationPeer.GetRowHeaders">
            <summary>
            Returns a collection of UI Automation providers that represents all row headers in the table.
            </summary>
            <returns>An array of UI automation providers.</returns>
        </member>
        <member name="P:Infragistics.AutomationPeers.XamGridAutomationPeer.RowOrColumnMajor">
            <summary>
            Gets the primary direction of traversal for the table.
            </summary>
            <value></value>
            <returns>The primary direction of traversal, as a value of the enumeration. </returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CellsPanel">
            <summary>
            A panel that organizes the <see cref="T:Infragistics.Controls.Grids.CellBase"/>s of a <see cref="T:Infragistics.Controls.Grids.RowBase"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.CellsPanel"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellsPanel.Row">
            <summary>
            Gets a refernce to the <see cref="T:Infragistics.Controls.Grids.RowBase"/> that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.CellsPanel"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellsPanel.Owner">
            <summary>
            Gets/sets the RowsPanel that owns this control.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellsPanel.VisibleCells">
            <summary>
            Gets a list of <see cref="T:Infragistics.Controls.Grids.CellBase"/> objects thats are currently visible.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellsPanel.VisibleFixedLeftCells">
            <summary>
            Gets a list of <see cref="T:Infragistics.Controls.Grids.CellBase"/> objects that are fixed to the left.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellsPanel.VisibleFixedRightCells">
            <summary>
            Gets a list of <see cref="T:Infragistics.Controls.Grids.CellBase"/> objects that are fixed to the right. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellsPanel.PreviousInvalidateHeight">
            <summary>
            Used to store off the last height that was passed into the MeasuerOverride method of this panel.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellsPanel.HorizontalScrollValueSafe">
            <summary>
            Get the horizontal scroll value
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.OnAttached(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.RowBase"/> is attached to the <see cref="T:Infragistics.Controls.Grids.Primitives.CellsPanel"/>.
            </summary>
            <param n="row">The row that is being attached to the <see cref="T:Infragistics.Controls.Grids.Primitives.CellsPanel"/></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.OnReleased">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.RowBase"/> releases the <see cref="T:Infragistics.Controls.Grids.Primitives.CellsPanel"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.RenderCells(System.Double)">
            <summary>
            Lays out which cells will be displayed in the given viewport. 
            </summary>
            <param propertyName="availableWidth">The total width that the cells have to work with.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.RenderCell(Infragistics.Controls.Grids.Column,System.Collections.ObjectModel.Collection{Infragistics.Controls.Grids.CellBase},System.Double@,System.Boolean,System.Collections.ObjectModel.Collection{Infragistics.Controls.Grids.CellBase},System.Boolean)">
            <summary>
            Displays the <see cref="T:Infragistics.Controls.Grids.CellBase"/> for the specified <see cref="T:Infragistics.Controls.Grids.ColumnBase"/>.
            </summary>
            <param name="column">The <see cref="T:Infragistics.Controls.Grids.Column"/></param>
            <param name="starColumns">A list of cells that have a width of type star.</param>
            <param name="maxHeight">The height of the largest cell, if the cell's height that is being rendered is larger, maxHeight should be adjusted.</param>
            <param name="insert">Whether or not the cell should be added, or inserted at the first position of the specified visible cells.</param>
            <param name="visibleCells">The collection of cells that rendered cell should be added to.</param>
            <param name="isInfinite">Lets the method know if the available width is infinite.</param>
            <returns>The width that that <see cref="T:Infragistics.Controls.Grids.CellBase"/> is consuming.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.RenderCell(Infragistics.Controls.Grids.Column,System.Collections.ObjectModel.Collection{Infragistics.Controls.Grids.CellBase},System.Double@,System.Boolean,System.Collections.ObjectModel.Collection{Infragistics.Controls.Grids.CellBase},System.Boolean,System.Boolean)">
            <summary>
            Displays the <see cref="T:Infragistics.Controls.Grids.CellBase"/> for the specified <see cref="T:Infragistics.Controls.Grids.ColumnBase"/>.
            </summary>
            <param name="column">The <see cref="T:Infragistics.Controls.Grids.Column"/></param>
            <param name="starColumns">A list of cells that have a width of type star.</param>
            <param name="maxHeight">The height of the largest cell, if the cell's height that is being rendered is larger, maxHeight should be adjusted.</param>
            <param name="insert">Whether or not the cell should be added, or inserted at the first position of the specified visible cells.</param>
            <param name="visibleCells">The collection of cells that rendered cell should be added to.</param>
            <param name="isInfinite">Lets the method know if the available width is infinite.</param>
            <param name="suppressCellControlAttached">Whether or not the CellControlAttached event should be fired when the CellControl is attached.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.RenderCell(Infragistics.Controls.Grids.Column,System.Collections.ObjectModel.Collection{Infragistics.Controls.Grids.CellBase},System.Double@,System.Boolean,System.Collections.ObjectModel.Collection{Infragistics.Controls.Grids.CellBase},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Displays the <see cref="T:Infragistics.Controls.Grids.CellBase"/> for the specified <see cref="T:Infragistics.Controls.Grids.ColumnBase"/>.
            </summary>
            <param name="column">The <see cref="T:Infragistics.Controls.Grids.Column"/></param>
            <param name="starColumns">A list of cells that have a width of type star.</param>
            <param name="maxHeight">The height of the largest cell, if the cell's height that is being rendered is larger, maxHeight should be adjusted.</param>
            <param name="insert">Whether or not the cell should be added, or inserted at the first position of the specified visible cells.</param>
            <param name="visibleCells">The collection of cells that rendered cell should be added to.</param>
            <param name="isInfinite">Lets the method know if the available width is infinite.</param>
            <param name="suppressCellControlAttached">Whether or not the CellControlAttached event should be fired when the CellControl is attached.</param>
            <param name="suppressRemeasure">Whether or not a remeasure should occur when the column's width is changed.</param>
            <returns>The width that that <see cref="T:Infragistics.Controls.Grids.CellBase"/> is consuming.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.OnCellMouseOver(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Called when a <see cref="T:Infragistics.Controls.Grids.CellBase"/> is moused over.
            All Cells of the <see cref="T:Infragistics.Controls.Grids.RowBase"/> will then go to it's "MouseOver" VisualState.
            </summary>
            <param name="cell">The cell that was moused over.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.OnCellMouseLeave(Infragistics.Controls.Grids.CellBase,Infragistics.Controls.Grids.CellBase)">
            <summary>
            Called when the mouse leaves a <see cref="T:Infragistics.Controls.Grids.CellBase"/>.
            All Cells of the <see cref="T:Infragistics.Controls.Grids.RowBase"/> will then go to it's "Normal" VisualState.
            </summary>
            <param name="cell">The cell that was moused over.</param>
            <param name="newCell">The new cell that is moused over.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.SetupStarCells(System.Double,System.Double,System.Double@,System.Collections.ObjectModel.Collection{Infragistics.Controls.Grids.CellBase})">
            <summary>
            Loops through the start columns and updates their width appropriately. 
            </summary>
            <param propertyName="availableWidth"></param>
            <param propertyName="currentWidth"></param>
            <param propertyName="maxHeight"></param>
            <param propertyName="starColumns"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.SupportsCommand(System.Windows.Input.ICommand)">
            <summary>
            Returns if the object will support a given command type.
            </summary>
            <param propertyName="command">The command to be validated.</param>
            <returns>True if the object recognizes the command as actionable against it.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.GetParameter(Infragistics.Controls.CommandSource)">
            <summary>
            Returns the object that defines the parameters necessary to execute the command.
            </summary>
            <param propertyName="source">The CommandSource object which defines the command to be executed.</param>
            <returns>The object necessary for the command to complete.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.ResolveScrollLeft">
            <summary>
            Gets the position of the horizontal scrollbar as a number indicating the first visible column index and column's visible portion
            </summary>
            <returns>Double number which integral part indicates the index of the first visible column and the fraction part indicates the percentage of the visible part</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.GetHorizontalScrollValuePercentage(System.Double,System.Double)">
            <summary>
            Gets the horizontal scroll position as persentage
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.GetHorizontalScrollValueFromHorizontalMax(System.Double)">
            <summary>
            Gets the horizontal scrollbar value according to the currently rendered column layout maximal scrollbar value
            </summary>
            <returns>Scrollbar value relative to the currently rendered column layout maximal scrollbar value</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.GetColumnIndexFromScrollValue">
            <summary>
            Gets the position of the horizontal scrollbar relative to the visible column
            </summary>
            <returns>Integral part of the returned value represents the index of the column and the fraction represents the percentage of the column's visible part</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.GetScrollValueFromColumnIndex(System.Double)">
            <summary>
            Gets the scroll value calculated from a given scroll percentage.
            </summary>
            <param name="scrollColumnIndex">Decimal part of represents the index of the column and the fraction represents the percentage of the column's visible part</param>
            <returns>The value of scroll bar</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.GetIndexOfLastColumnInDesiredView(System.Collections.ObjectModel.ReadOnlyCollection{Infragistics.Controls.Grids.Column},System.Double,System.Double)">
            <summary>
            Gets the index of the last column visible in view.
            </summary>
            <param name="allVisibleColumns">The list of all columns to be used in calculation.</param>
            <param name="scrollPosition">Number which integral part points to the index of the first column in view and the fraction part shows how much of the column should be visible (in percentage).</param>
            <param name="availableWidth">Available width in the view.</param>
            <returns>The index of the last column which fits (even partially) in the desired view size.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.VerifyColumnsActualWidths(Infragistics.Controls.Grids.GroupColumn)">
            <summary>
            Verifies the actual width of the columns.
            </summary>
            <param name="groupColumn">The group column.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.InvalidateHorizontalMax(System.Double,System.Double@,System.Boolean)">
            <summary>
            Invalidates the horizontal maximum.
            </summary>
            <param name="availWidth">Width of the avail.</param>
            <param name="maxHeight">The maximum height.</param>
            <param name="isInfinite">if set to <c>true</c> [is infinite].</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.GetColumnWidthForHorizontalScrolling(Infragistics.Controls.Grids.Column)">
            <summary>
            Get the width of a given column depending on whether the column is already rendered, if there is a minimal width set or using average cell width if not yet rendered.
            </summary>
            <returns>Returns the average cell width of the all rendered cells if the cell is not yet rendered. If rendered returns the cell's actual width. Returns column's minimal width (if set) in case the actual/average width is lower.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.IsHeaderOrFirstVisibleRowInParentLayout">
            <summary>
            Check whether the current panel represents a header row of the first of visible rows.
            </summary>
            <returns>Returns whether the presented row is a header row or the first visible row.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "measure" pass of the <see cref="T:Infragistics.Controls.Grids.Primitives.CellsPanel"/>.
            </summary>
            <param propertyName="availableSize">The available size that this object can give to child objects. Infinity can be specified
            as a value to indicate the object will size to whatever content is available.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges each <see cref="T:Infragistics.Controls.Grids.CellBase"/> that should be visible, one next to  the other, similar to a 
            Horizontal <see cref="T:System.Windows.Controls.StackPanel"/>.
            </summary>
            <param propertyName="finalSize">
            The final area within the parent that this object 
            should use to arrange itself and its children.
            </param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellsPanel.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Silverlight automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CellsPanel.ChildColumnInfo">
            <summary>
            Information about a <see cref="T:Infragistics.Controls.Grids.Column"/> that's a child of a <see cref="T:Infragistics.Controls.Grids.GroupColumn"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellsPanel.ChildColumnInfo.ChildColumnIndexOffset">
            <summary>
            The position of the column relative to the GroupColumn
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellsPanel.ChildColumnInfo.ChildColumnScrollPercentage">
            <summary>
            Calculated scroll percentage. A value between 0.0 and 1.0
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ClipboardSortColumnComparer">
            <summary>
            For internal use only.  It compares 2 columns, to determine which column should by displayed first when copying to the clipboard.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ClipboardSortColumnComparer.Compare(Infragistics.Controls.Grids.Column,Infragistics.Controls.Grids.Column)">
            <summary>
            Compares two columns, based on their index in the AllColumns collections.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ClipboardSortRowComparer">
            <summary>
            For internal use only.  It compares 2 row, to determine which column should by displayed first when copying to the clipboard.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ClipboardSortRowComparer.Compare(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.RowBase)">
            <summary>
            Compares two rows, based on their index in the internal rows collection.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog">
            <summary>
            A control used to display all the <see cref="P:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.Column"/> objects of a particular <see cref="P:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.ColumnLayout"/> in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> that allows
            and end user to toggle the Visibility of each Column.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.IsOpenProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.IsOpen"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.IsOpen">
            <summary>
            Gets/Sets whether the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog"/> is open. 
            </summary>
            <remarks>
            When the Dialog is opened, it will center itself to the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.ColumnLayoutProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.ColumnLayout"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.ColumnLayout">
            <summary>
            Gets/Sets the current <see cref="P:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.ColumnLayout"/> that the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog"/> is representing.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.ColumnProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.Column"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.Column">
            <summary>
            The Column, whose subcolumns should be displayed in the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.Columns">
            <summary>
            Gets a list of <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> objects that should be displayed in the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.ViewLabelTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.ViewLabelText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.ViewLabelText">
            <summary>
            Gets/Sets the Text that is displayed for the view header of the ColumnChooserDialog.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.ColumnLabelTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.ColumnLabelText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.ColumnLabelText">
            <summary>
            Gets/Sets the Text that is displayed for the column name header of the ColumnChooserDialog.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.IsSortableProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.IsSortable"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.IsSortable">
            <summary>
            Gets/sets whether columns within the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog"/> should be movable.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.SupportsCommand(System.Windows.Input.ICommand)">
            <summary>
            Returns if the object will support a given command type.
            </summary>
            <param propertyName="command">The command to be validated.</param>
            <returns>True if the object recognizes the command as actionable against it.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.GetParameter(Infragistics.Controls.CommandSource)">
            <summary>
            Returns the object that defines the parameters necessary to execute the command.
            </summary>
            <param propertyName="source">The CommandSource object which defines the command to be executed.</param>
            <returns>The object necessary for the command to complete.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.EndDrag">
            <summary>
            Ends the current drag operation of the ColumnChooser
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.OnApplyTemplate">
            <summary>
            Initializes Template parts for the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog"/>
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.PropertyChanged">
            <summary>
            Fired when a property changes on the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog.OnPropertyChanged(System.String)">
            <summary>
            Invoked when a property changes on the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog"/> object.
            </summary>
            <param name="name">The name of the property that has changed.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.MovingIndicator">
            <summary>
            A control that shows a visual indication of where an object will be moved. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.MovingIndicator.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Grids.Primitives.MovingIndicator"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.MovingIndicator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.MovingIndicator"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.MovingIndicator.HorizontalOffsetProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.MovingIndicator.HorizontalOffset"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.MovingIndicator.HorizontalOffset">
            <summary>
            Gets/Sets the additional offset that the indicator should be positioned by. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.MovingIndicator.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.Primitives.MovingIndicator"/> when a new template is applied. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.MovingIndicator.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the 3 indicators specified in the control template. 
            </summary>
            <param propertyName="finalSize">
            The final area within the parent that this object 
            should use to arrange itself and its children.
            </param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ResizingIndicator">
            <summary>
            A control that shows a visual indication of where an object will be resized. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ResizingIndicator.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Grids.Primitives.ResizingIndicator"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ResizingIndicator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.ResizingIndicator"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.DataBarControl">
            <summary>
            A <see cref="T:System.Windows.Controls.ContentControl"/> which is used during conditional formatting to display data bars.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DataBarControl.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Grids.Primitives.DataBarControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DataBarControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.DataBarControl"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.DataBarControl.DataBarDirectionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.DataBarControl.DataBarDirection"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.DataBarControl.DataBarDirection">
            <summary>
            Gets / sets the <see cref="P:Infragistics.Controls.Grids.Primitives.DataBarControl.DataBarDirection"/> for the databars displayed by this control.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.DataBarControl.NegativeValueBarBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.DataBarControl.NegativeValueBarBrush"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.DataBarControl.NegativeValueBarBrush">
            <summary>
            Gets / sets the <see cref="T:System.Windows.Media.Brush"/> that will be used to color the negative data bar.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.DataBarControl.PositiveValueBarBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.DataBarControl.PositiveValueBarBrush"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.DataBarControl.PositiveValueBarBrush">
            <summary>
            Gets / sets the <see cref="T:System.Windows.Media.Brush"/> that will be used to color the positive data bar.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.DataBarControl.BarHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.DataBarControl.BarHeight"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.DataBarControl.BarHeight">
            <summary>
            Gets / sets the height of the databar. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.DataBarControl.BarPercentageProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.DataBarControl.BarPercentage"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.DataBarControl.BarPercentage">
            <summary>
            Gets / sets the value of the data bar.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.DataBarControl.DataBarPositiveNegativeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.DataBarControl.DataBarPositiveNegative"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.DataBarControl.DataBarPositiveNegative">
            <summary>
            Gets / sets which data bar to use to display.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.DataBarControl.UnidirectionalDataBarBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.DataBarControl.UnidirectionalDataBarBrush"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.DataBarControl.UnidirectionalDataBarBrush">
            <summary>
            Gets / sets the <see cref="T:System.Windows.Media.Brush"/> which is used when only a single databar is being used.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DataBarControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.Primitives.DataBarControl"/>.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Grids.Primitives.DataBarControl.PropertyChanged">
            <summary>
            Fired when a property changes on the <see cref="T:Infragistics.Controls.Grids.Primitives.DataBarControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DataBarControl.OnPropertyChanged(System.String)">
            <summary>
            Invoked when a property changes on the <see cref="T:Infragistics.Controls.Grids.Primitives.DataBarControl"/> object.
            </summary>
            <param name="name">The name of the property that has changed.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl">
            <summary>
            A control that allows end users to build complex filters over a single column.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.InfoObjects">
            <summary>
            A list of objects that describes how the filter should be built.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.FilterGrid">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.XamGrid"/> that will display the <see cref="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.InfoObjects"/> list.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.MasterParentGroup">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.XamGridConditionInfoGroup"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.Cell">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.CellBase"/> object which hosts the <see cref="T:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.CancelButtonTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.CancelButtonText"/> dependency property. 
            </summary>                
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.CancelButtonText">
            <summary>
            Gets / sets the text for the cancel buttom.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.OKButtonTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.OKButtonText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.OKButtonText">
            <summary>
            Gets / sets the text for the OK Button.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.SelectedGroupTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.SelectedGroupText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.SelectedGroupText">
            <summary>
            Gets / sets the text for the "Selected Group" string.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.AndButtonTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.AndButtonText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.AndButtonText">
            <summary>
            Gets / sets the text for the "And" string.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.OrButtonTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.OrButtonText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.OrButtonText">
            <summary>
            Gets / sets the text for the "Or" string.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.AddConditionButtonTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.AddConditionButtonText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.AddConditionButtonText">
            <summary>
            Gets / sets the text for the OK Button.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.RemoveConditionButtonTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.RemoveConditionButtonText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.RemoveConditionButtonText">
            <summary>
            Gets / sets the text for the OK Button.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.ToggleButtonTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.ToggleButtonText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.ToggleButtonText">
            <summary>
            Gets / sets the text for the "Toggle" string.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.UngroupButtonTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.UngroupButtonText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.UngroupButtonText">
            <summary>
            Gets / sets the text for the "Ungroup" string.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.AndColorLabelTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.AndColorLabelText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.AndColorLabelText">
            <summary>
            Gets / sets the text for the "And" string.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.OrColorLabelTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.OrColorLabelText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.OrColorLabelText">
            <summary>
            Gets / sets the text for the "Or" string.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.FilterDescriptionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.FilterDescription"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.FilterDescription">
            <summary>
            Gets or sets the filter description.
            </summary>
            <value>
            The filter description.
            </value>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.KeyDownHandler(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.KeyDown"/> event occurs.
            </summary>
            <param propertyName="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.Show(System.Collections.Generic.List{Infragistics.Controls.Grids.FilterOperand})">
            <summary>
            Shows the popup
            </summary>
            <param name="initialOperands">A List of <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> objects which this control will attempt to use to prepopulate
            the operand dropdowns with.
            </param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.Show">
            <summary>
            Shows the popup
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.Hide">
            <summary>
            Hides the popup.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.GetParameter(Infragistics.Controls.CommandSource)">
            <summary>
            Returns the object that defines the parameters necessary to execute the command.
            </summary>
            <param propertyName="source">The CommandSource object which defines the command to be executed.</param>
            <returns>The object necessary for the command to complete.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.CheckButtonState">
            <summary>
            Calls to the CommandSourceManager to update the UI so that the controls that are going to be doing the commanding are updated appropriately.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.PropertyChanged">
            <summary>
            Event raised when a property on this object changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControlCommand">
            <summary>
            An enum describing the commands which can be executed on the <see cref="T:Infragistics.Controls.Grids.Primitives.CompoundFilteringDialogControlCommandSource"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControlCommand.Accept">
            <summary>
            Accepts the changes made by the dialog.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControlCommand.Close">
            <summary>
            Closes the dialog.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControlCommand.AddToCurrent">
            <summary>
            Adds condition.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControlCommand.DeleteCondition">
            <summary>
            Deletes condition.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControlCommand.CreateAndGroup">
            <summary>
            Creates AND group.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControlCommand.CreateOrGroup">
            <summary>
            Creates OR group.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControlCommand.Ungroup">
            <summary>
            Removes grouping.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControlCommand.ToggleGroup">
            <summary>
            Toggles grouping.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CompoundFilteringDialogControlCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CompoundFilteringDialogControlCommandSource.CommandType">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControlCommand"/> which is to be executed by the command.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CompoundFilteringDialogControlCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogCommand">
            <summary>
            A command that is used with the <see cref="T:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ShowCompoundFilterDialogCommand">
            <summary>
            A command which will show the <see cref="T:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ShowCompoundFilterDialogCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ShowCompoundFilterDialogCommand.ExecuteCommand(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Executes the specific command on the specified <see cref="T:Infragistics.Controls.Grids.CellBase"/>
            </summary>
            <param propertyName="col"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CompoundFilteringDialogCommand">
            <summary>
            An enum describing the commands which can be executed on the <see cref="T:Infragistics.Controls.Grids.Primitives.CompoundFilteringDialogCommandSource"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CompoundFilteringDialogCommand.ShowCompoundFilterDialog">
            <summary>
            Shows the custome filter dialog.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CompoundFilteringDialogCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CompoundFilteringDialogCommandSource.CommandType">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.Primitives.CompoundFilteringDialogCommand"/> which is to be executed by the command.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CompoundFilteringDialogCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.AcceptCompoundFilterDialogChangesCommand">
            <summary>
            A command which will be used for the Accept action on the <see cref="T:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.AcceptCompoundFilterDialogChangesCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.AcceptCompoundFilterDialogChangesCommand.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CloseCompoundFilterDialogCommand">
            <summary>
            A command that will close the <see cref="T:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CloseCompoundFilterDialogCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CloseCompoundFilterDialogCommand.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.AddToCurrentCompoundFilterDialogCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that will add new filter condition.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.AddToCurrentCompoundFilterDialogCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.AddToCurrentCompoundFilterDialogCommand.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.RemoveConditionsCompoundFilterDialogCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that will remove filter condition.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RemoveConditionsCompoundFilterDialogCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RemoveConditionsCompoundFilterDialogCommand.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogCommandBase">
            <summary>
            Base class for <see cref="T:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl"/> commands.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CreateLogicalOperatorCompoundFilterDialogCommand">
            <summary>
            Base class for filter commands which encapsulates shared logic.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CreateLogicalOperatorCompoundFilterDialogCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CreateAndGroupCompoundFilterDialogCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that will create AND group.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CreateAndGroupCompoundFilterDialogCommand.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CreateOrGroupCompoundFilterDialogCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that will create OR group.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CreateOrGroupCompoundFilterDialogCommand.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.UngroupCompoundFilterDialogCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that will ungroup filter conditions.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.UngroupCompoundFilterDialogCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.UngroupCompoundFilterDialogCommand.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ToggleGroupCompoundFilterDialogCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that will toggle the state of the grouping (AND/OR).
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ToggleGroupCompoundFilterDialogCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ToggleGroupCompoundFilterDialogCommand.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl">
            <summary>
            This control is allows the end user to make a simple range compound filter via the UI.  
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.KeyDownHandler(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.KeyDown"/> event occurs.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.AcceptChanges">
            <summary>
            Processes the elements in the control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.Show(System.Collections.Generic.List{Infragistics.Controls.Grids.FilterOperand})">
            <summary>
            Shows the popup
            </summary>
            <param name="initialOperands">A List of <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> objects which this control will attempt to use to prepopulate
            the operand dropdowns with.
            </param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.Show">
            <summary>
            Shows the popup
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.Hide">
            <summary>
            Hides the popup.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.SupportsCommand(System.Windows.Input.ICommand)">
            <summary>
            Returns if the object will support a given command type.
            </summary>
            <param name="command">The command to be validated.</param>
            <returns>True if the object recognizes the command as actionable against it.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.GetParameter(Infragistics.Controls.CommandSource)">
            <summary>
            Returns the object that defines the parameters necessary to execute the command.
            </summary>
            <param name="source">The CommandSource object which defines the command to be executed.</param>
            <returns>The object necessary for the command to complete.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.ProcessOperatorOperand(System.Windows.Controls.ComboBox,System.Windows.Controls.ContentControl,System.Object,Infragistics.Controls.Grids.RowsManager,Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase)">
            <summary>
            Builds a filter from the operator operand pair
            </summary>
            <param name="filterOperator"></param>
            <param name="operand"></param>
            <param name="proxyValue"></param>
            <param name="rowsManager" />
            <param name="contentProvider"></param>        
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.Cell">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.CellBase"/> object which hosts the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.CancelButtonTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.CancelButtonText"/> dependency property. 
            </summary>                
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.CancelButtonText">
            <summary>
            Gets / sets the text for the cancel buttom.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.OKButtonTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.OKButtonText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.OKButtonText">
            <summary>
            Gets / sets the text for the OK Button.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.AndRadioButtonTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.AndRadioButtonText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.AndRadioButtonText">
            <summary>
            Gets / sets the text for the "And" string.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.OrRadioButtonTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.OrRadioButtonText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.OrRadioButtonText">
            <summary>
            Gets / sets the text for the "Or" string.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.GetEditorForOperand(System.String,Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase@,Infragistics.Controls.Grids.Cell@)">
            <summary>
            Gets the control that would act as the editor for this cell so that we can use it in the dialog.
            </summary>
            <param name="operandToLinkTo"></param>
            <param name="cellOutput"></param>
            <param name="contentProviderControl"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.ResolveEditorBinding(Infragistics.Controls.Grids.CellBase,System.Object,System.String)">
            <summary>
            Get the binding object that should be applied to the editors.
            </summary>
            <param name="cell"></param>
            <param name="data"></param>
            <param name="objectToLinkTo"></param>
            <returns></returns>
        </member>
        <member name="E:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.PropertyChanged">
            <summary>
            Event raised when a property on this object changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ProxyValueContainer">
            <summary>
            Class designed to hold two object types for databinding purposes.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ProxyValueContainer.ProxyValue1">
            <summary>
            Get / set the first object
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ProxyValueContainer.ProxyValue2">
            <summary>
            Get / set the second object
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Grids.Primitives.ProxyValueContainer.PropertyChanged">
            <summary>
            Fired when a property changes on the <see cref="T:Infragistics.Controls.Grids.Primitives.ProxyValueContainer"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ProxyValueContainer.OnPropertyChanged(System.String)">
            <summary>
            Invoked when a property changes on the <see cref="T:Infragistics.Controls.Grids.Primitives.ProxyValueContainer"/> object.
            </summary>
            <param name="name">The name of the property that has changed.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CustomFilterDialogFilteringDataContext">
            <summary>
            Classed derived from <see cref="T:Infragistics.FilteringDataContext"/> used by <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl"/> for filtering.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CustomFilterDialogFilteringDataContext.#ctor(Infragistics.Controls.Grids.Primitives.FilterRowCell,Infragistics.Controls.Grids.Primitives.ProxyValueContainer,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.CustomFilterDialogFilteringDataContext"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CustomFilterDialogFilteringDataContext.OnValueChanged">
            <summary>
            Method called when the value is modified so that the underlying object can be updated as well.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl"/> is displayed when when FilterMenu filtering is used. 
            </summary>    
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl.DateFilterObjectTypeItemProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl.DateFilterObjectTypeItem"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl.DateFilterObjectTypeItem">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.Primitives.DateFilterListDisplayObject"/> that will be used by the control when filtering options in the selection box.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl.DateFilterTypeList">
            <summary>
            Gets / sets the list of <see cref="T:Infragistics.Controls.Grids.DateFilterObjectType"/> which can be filtered on.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl.DateFilterHierarchicalDataTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl.DateFilterHierarchicalDataTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl.DateFilterHierarchicalDataTemplate">
            <summary>
            Gets / sets the <see cref="P:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl.DateFilterHierarchicalDataTemplate"/> that will be assigned to the <see cref="T:Infragistics.Controls.Grids.Primitives.DateFilterTreeView"/> which displays the date information.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl.FilterableUniqueValues">
            <summary>
            Gets a list of unique values which are filterable.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl.OnRawValuesSet">
            <summary>
            Method called after raw data is pulled from the data manager so that any manipulation that needs to take place can.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl.AcceptChanges">
            <summary>
            Processes the elements in the <see cref="T:System.Windows.Controls.Panel"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl.GetCollection">
            <summary>
            Creates the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterItemCollection"/> which will be used to store the unique values.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl.OnSelectAllCheckBoxChecked(System.Windows.Controls.CheckBox)">
            <summary>
            Called when the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.SelectAllCheckBox"/> is checked.
            </summary>
            <param name="cbSender"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl.ClearExistingFilters">
            <summary>
            Resets the existing filter
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl.ControlLoaded">
            <summary>
            Method called when the control is loaded.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl.CanHaveCheckedItemsOutsideList">
            <summary>
            Whether or no this type of filter can have items that are checked (through the filter textbox, for example),
            but aren't shown in the filter UI due to the limit on the number of items shown (10 000)
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl.GenerateUniqueList(System.Collections.IList,System.Collections.Generic.List{System.Object},System.Boolean)">
            <summary>
            Given a list of objects builds the UniqueValue list of the control.
            </summary>
            <param name="items"></param>
            <param name="values"></param>
            <param name="shouldCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl.CreateAllCheckBoxes(System.Collections.IList,System.Boolean)">
            <summary>
            Creates the list that will be used to populate the selection control.
            </summary>
            <param name="items"></param>
            <param name="shouldCheck"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl.AddUniqueValue(System.Object,System.Boolean,System.Type)">
            <summary>
            Creates an object for UniqueList and adds it to the list.
            </summary>
            <param name="value"></param>
            <param name="isChecked"></param>
            <param name="type"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl.OnUniqueValuesCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when the collection of UniqueValues is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.DateFilterListDisplayObject">
            <summary>
            A class that will allow by the <see cref="T:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl"/> for it's <see cref="P:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl.DateFilterTypeList"/> collection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.DateFilterListDisplayObject.DateFilterObjectType">
            <summary>
            Gets / sets the <see cref="P:Infragistics.Controls.Grids.Primitives.DateFilterListDisplayObject.DateFilterObjectType"/> which should be set for the control.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.DateFilterListDisplayObject.Name">
            <summary>
            Gets / sets the text that will be displayed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.DateFilterTreeView">
            <summary>
            A derived <see cref="T:System.Windows.Controls.TreeView"/> control to bring the control under the Infragistics namespace
            </summary>
            <remarks>This is a derived control to make generic.xaml cleaner.</remarks>    
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DateFilterTreeView.GetContainerForItemOverride">
            <summary>
             Creates a System.Windows.Controls.TreeViewItem to display content.
            </summary>
            
             <returns>A System.Windows.Controls.TreeViewItem to use as a container for content.
             </returns>        
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DateFilterTreeView.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>Prepares the container element to display the specified item.
            </summary>
            <param name="element">The container element used to display the specified item.</param>
            <param name="item">The item to display.</param>        
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.DateFilterTreeViewItem">
            <summary>
            A derived <see cref="T:System.Windows.Controls.TreeViewItem"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DateFilterTreeViewItem.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Grids.Primitives.DateFilterTreeViewItem"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DateFilterTreeViewItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.DateFilterTreeViewItem"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DateFilterTreeViewItem.GetContainerForItemOverride">
            <summary>
             Creates a <see cref="T:System.Windows.Controls.TreeViewItem"/> to display content.
            </summary>
            
             <returns>A <see cref="T:System.Windows.Controls.TreeViewItem"/> to use as a container for content.
             </returns>    
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DateFilterTreeViewItem.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.Primitives.DateFilterTreeViewItem"/> when a new template is applied. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.DateFilterHierarchicalDataTemplate">
            <summary>
            A derived <see cref="T:System.Windows.HierarchicalDataTemplate"/> control to bring the control under the Infragistics namespace
            </summary>
            <remarks>This is a derived control to make generic.xaml cleaner.</remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FilterTextBox">
            <summary>
            An inherited <see cref="T:System.Windows.Controls.TextBox"/> which acts as a command target.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterTextBox.SupportsCommand(System.Windows.Input.ICommand)">
            <summary>
            Returns if the object will support a given command type.
            </summary>
            <param propertyName="command">The command to be validated.</param>
            <returns>True if the object recognizes the command as actionable against it.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterTextBox.GetParameter(Infragistics.Controls.CommandSource)">
            <summary>
            Returns the object that defines the parameters necessary to execute the command.
            </summary>
            <param propertyName="source">The CommandSource object which defines the command to be executed.</param>
            <returns>The object necessary for the command to complete.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FilterTextBoxWatermarked">
            <summary>
            A control that hosts a FilterTextBox and makes it appear watermarked.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterTextBoxWatermarked.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterTextBoxWatermarked"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterTextBoxWatermarked.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterTextBoxWatermarked"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterTextBoxWatermarked.OnApplyTemplate">
            <summary>
                When overridden in a derived class, is invoked whenever application code
                or internal processes (such as a rebuilding layout pass) call System.Windows.Controls.Control.ApplyTemplate().
                In simplest terms, this means the method is called just before a UI element
                displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterTextBoxWatermarked.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called before the System.Windows.UIElement.LostFocus event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterTextBoxWatermarked.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called before the System.Windows.UIElement.GotFocus event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.FilterTextBoxWatermarked.FilterSelectionControlProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterTextBoxWatermarked.FilterSelectionControl"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterTextBoxWatermarked.FilterSelectionControl">
            <summary>
            Gets / sets the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterTextBoxWatermarked.FilterSelectionControl"/> associated with this control.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.FilterTextBoxWatermarked.WatermarkProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterTextBoxWatermarked.Watermark"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterTextBoxWatermarked.Watermark">
            <summary>
            Gets / sets the string that will be displayed as the watermark.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterTextBoxWatermarked.EnsureVisualState">
            <summary>
            Ensures that <see cref="T:Infragistics.Controls.Grids.Primitives.FilterTextBoxWatermarked"/> is in the correct state.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Grids.Primitives.FilterTextBoxWatermarked.PropertyChanged">
            <summary>
            Fired when a property changes on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterTextBoxWatermarked.OnPropertyChanged(System.String)">
            <summary>
            Invoked when a property changes on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> object.
            </summary>
            <param propertyName="propertyName">The propertyName of the property that has changed.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterTextBoxWatermarked.SupportsCommand(System.Windows.Input.ICommand)">
            <summary>
            Returns if the object will support a given command type.
            </summary>
            <param propertyName="command">The command to be validated.</param>
            <returns>True if the object recognizes the command as actionable against it.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterTextBoxWatermarked.GetParameter(Infragistics.Controls.CommandSource)">
            <summary>
            Returns the object that defines the parameters necessary to execute the command.
            </summary>
            <param propertyName="source">The CommandSource object which defines the command to be executed.</param>
            <returns>The object necessary for the command to complete.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.DateFilterTypeConverter">
            <summary>
            A value converter which will take the enum value for the DateFilterType and return the assocatied string.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DateFilterTypeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Takes a <see cref="T:Infragistics.Controls.Grids.Primitives.DateFilterListDisplayObject"/>, and returns the <see cref="P:Infragistics.Controls.Grids.Primitives.DateFilterListDisplayObject.DateFilterObjectType"/>.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DateFilterTypeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            This is not currently used.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CustomFilterDialogContentControl">
            <summary>
            A derived <see cref="T:System.Windows.Controls.ContentControl"/> used by the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CustomFilterDialogContentControl.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Grids.Primitives.CustomFilterDialogContentControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CustomFilterDialogContentControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.CustomFilterDialogContentControl"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FilterControlBase">
            <summary>
            Abstract base class for controls which will be used inside of the FilterRow
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterControlBase.Cell">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowCell"/> which is associated with the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterControlBase"/>.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Grids.Primitives.FilterControlBase.PropertyChanged">
            <summary>
            Fired when a property changes on the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterControlBase"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterControlBase.OnPropertyChanged(System.String)">
            <summary>
            Invoked when a property changes on the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterControlBase"/> object.
            </summary>
            <param propertyName="propertyName">The propertyName of the property that has changed.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterControlBase.EnsureContent">
            <summary>
            This will get called every time the control is measured, and allows the control to adjust it's content if necessary.
            </summary>	
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FilterControl">
            <summary>
            A control for the FilterRowCell which contains the column editor and a drop down for picking the filter mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterControl.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterControl"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterControl.Cell">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowCell"/> which is associated with the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterControlBase"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.FilterControl.SelectedItemIconProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterControl.SelectedItemIcon"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterControl.SelectedItemIcon">
            <summary>
            Gets / set the DataTemplate that will be use as the Icon for options in the filtering menu.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterControl.PopulateMenuItems">
            <summary>
            Populates the combo with the values of the available row filter operands.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterControl"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterControl.EnsureContent">
            <summary>
            This will get called every time the control is measured, and allows the control to adjust it's content if necessary.
            </summary>			
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FilterTextBoxCommand">
            <summary>
            Enum describing commands available on the filter text box.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.FilterTextBoxCommand.Filter">
            <summary>
            Filter the data.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.FilterTextBoxCommand.ClearFilterText">
            <summary>
            Clear the filter text box.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.RowFilteringCommandBase">
            <summary>
            Base class for all commands that deal with a <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowFilteringCommandBase.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowFilteringCommandBase.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param propertyName="parameter">The <see cref="T:Infragistics.Controls.Grids.CellBase"/> object that will be executed against.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowFilteringCommandBase.ExecuteCommand(Infragistics.Controls.Grids.Primitives.FilterRowCell)">
            <summary>
            Executes the specific command on the specified <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowCell"/>
            </summary>
            <param name="filterRowCell"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ClearFilters">
            <summary>
            A Command which will clear the filters on a FilterRowCell
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ClearFilters.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ClearFilters.ExecuteCommand(Infragistics.Controls.Grids.Primitives.FilterRowCell)">
            <summary>
            Executes the specific command on the specified <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowCell"/>
            </summary>
            <param name="filterRowCell"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FilterMenuCommands">
            <summary>
            A Command which allows control over the filter menu.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterMenuCommands.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterMenuCommands.Execute(System.Object)">
            <summary>
            Runs the command with the given parameter.
            </summary>
            <param name="parameter">An object containing any parameters for the command.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterMenuCommands.ExcecuteCommand(System.Collections.Generic.List{Infragistics.Controls.Grids.FilterOperand},Infragistics.Controls.Grids.CellBase)">
            <summary>
            Executes the specific command on the specified <see cref="T:Infragistics.Controls.Grids.CellBase"/>
            </summary>
            <param name="cell"></param>
            <param name="filterOperand"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FilterMenuFilterTextBoxCommand">
            <summary>
            A command to be used on the textbox that will filter the filter menu options
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterMenuFilterTextBoxCommand.FilterSelectionControl">
            <summary>
            Get / sets the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterMenuFilterTextBoxCommand.FilterSelectionControl"/> which this control is associate with.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterMenuFilterTextBoxCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterMenuFilterTextBoxCommand.Execute(System.Object)">
            <summary>
            Runs the command with the given parameter.
            </summary>
            <param name="parameter">An object containing any parameters for the command.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterMenuFilterTextBoxCommand.ExecuteCommand(System.Object)">
            <summary>
            Executes the given command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FilterMenuFilterTextBoxFilterTextCommand">
            <summary>
            A command to be used by the filter text box to filter the text.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterMenuFilterTextBoxFilterTextCommand.ExecuteCommand(System.Object)">
            <summary>
            Executes the given command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FilterMenuFilterTextBoxClearFilterTextCommand">
            <summary>
            A command to be used by the filter text box to set the filter text to string.Empty.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterMenuFilterTextBoxClearFilterTextCommand.ExecuteCommand(System.Object)">
            <summary>
            Executes the given command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FilterMenuXamMenuItem">
            <summary>
            A specialized <see cref="T:Infragistics.Controls.Menus.XamMenuItem"/> which contains elements necessary for the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterSelectionControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterMenuXamMenuItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterMenuXamMenuItem"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterMenuXamMenuItem.GetContainerForItemOverride">
            <summary>
            Creates a new XamMenuItem to use to display the object.
            </summary>
            <returns>A new XamMenuItem.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterMenuXamMenuItem.ChangeVisualState(System.Boolean)">
            <summary>
            Sets the VisualStates on the control to represent the current settings.
            </summary>
            <param name="useTransitions"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterMenuXamMenuItem.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterMenuXamMenuItem.UpdateRoleState">
            <summary>
            Based on the Role of the <see cref="T:Infragistics.Controls.Menus.XamMenuItem"/> sets up the visual states of the control.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.FilterMenuXamMenuItem.IsSeparatorProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterMenuXamMenuItem.IsSeparator"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterMenuXamMenuItem.IsSeparator">
            <summary>
            Gets / sets if this <see cref="T:Infragistics.Controls.Grids.Primitives.FilterMenuXamMenuItem"/> is a visual separator.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.FilterMenuXamMenuItem.CellProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterMenuXamMenuItem.Cell"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterMenuXamMenuItem.Cell">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.CellBase"/> that this <see cref="T:Infragistics.Controls.Grids.Primitives.FilterMenuXamMenuItem"/> will associate against.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterMenuXamMenuItem.ParentMenu">
            <summary>
            Gets a reference to the parent XamMenu of the XamMenuItem.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FilterSelectionControl">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.Primitives.FilterSelectionControl"/> is displayed when when FilterMenu filtering is used. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterSelectionControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterSelectionControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.GetUnderlyingNonNullableType(System.Type)">
            <summary>
            Gets the underlying type of a Nullable Type.
            </summary>
            <param name="dataType"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.IsBusy">
            <summary>
            Gets or sets a value indicating whether the control is busy loding the items.
            </summary>
            <value>
              <c>true</c> if busy; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.IsLimited">
            <summary>
            Gets or sets a value indicating whether this list is limited.
            </summary>
            <value>
            <c>true</c> if the list is limited; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.ItemSourceSet">
            <summary>
            Gets / sets if the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterSelectionControl"/> is attached to a <see cref="T:Infragistics.Controls.Grids.XamGrid"/> that has it's ItemSource set.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.ClearFiltersTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.ClearFiltersText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.ClearFiltersText">
            <summary>
            Gets / sets the text that will be used for the ClearFilters button.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.TypeSpecificFiltersTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.TypeSpecificFiltersText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.TypeSpecificFiltersText">
            <summary>
            Gets / sets the text that will be use for the type specific filter button.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.CancelButtonTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.CancelButtonText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.CancelButtonText">
            <summary>
            Gets/Sets the text that will be displayed in the Cancel button of the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterSelectionControl"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.OKButtonTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.OKButtonText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.OKButtonText">
            <summary>
            Gets/Sets the text that will be displayed in the OK button of the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterSelectionControl"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.BusyText">
            <summary>
            Gets the text that will be displayed when <see cref="T:Infragistics.Controls.Grids.Primitives.FilterSelectionControl"/> is loading its items.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.NotAllItemsShowingTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.NotAllItemsShowingText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.NotAllItemsShowingText">
            <summary>
            Gets or sets the text that will be dipsplayed when the items in the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterSelectionControl"/> are limited.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.NotAllItemsShowingTooltipTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.NotAllItemsShowingTooltipText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.NotAllItemsShowingTooltipText">
            <summary>
            Gets or sets the tooltip text describing why the items are limited.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.SelectAllCheckBox">
            <summary>
            Gets / sets the select all checkbox in the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterSelectionControl"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.UniqueValues">
            <summary>
            Gets a list of UniqueValues for the FilterSelectionControl.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.FilterableUniqueValues">
            <summary>
            Gets a list of unique values which are filterable.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.ClearFiltersTextResolvedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.ClearFiltersTextResolved"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.ClearFiltersTextResolved">
            <summary>
            Gets/Sets the text for the <see cref="T:Infragistics.Controls.Grids.Primitives.ClearFilters"/> in the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterSelectionControl"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.TypeSpecificFiltersTextResolvedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.TypeSpecificFiltersTextResolved"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.TypeSpecificFiltersTextResolved">
            <summary>
            Gets/Sets the Text used for types in the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterSelectionControl"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.CheckedCount">
            <summary>
            Gets / sets the number of elements which were checked.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.UncheckedCount">
            <summary>
            Gets / sets the number of elements which were unchecked.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.RawValues">
            <summary>
            Gets / sets the list of values retrieved from the InformationContext.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.FilterText">
            <summary>
            Gets / sets the text that will be used to filter the selections.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.FilterBoxNoDataAvailable">
            <summary>
            Gets the string that will display in the selection box when there is no data due to a search.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.ShowAppendFiltersCheckBox">
            <summary>
            Gets / sets if the checkbox that allows you to append filters should be shown or not.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.AppendFilterTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.AppendFilterText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.AppendFilterText">
            <summary>
            Gets / sets the text that will show for the append filters item.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.AppendFiltersProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.AppendFilters"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.AppendFilters">
            <summary>
            Gets / sets when the AcceptChanges is called if the filters will be appended or if they will be added clean to the collection.  
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.HasFilters">
            <summary>
            Gets if the FilterMenu has any checked filters.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.HasCheckedItems">
            <summary>
            Gets if the checkbox selection area has items checked and unchecked.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.AllowFiltering">
            <summary>
            Gets or sets a value indicating whether the selected filter can be applied.
            </summary>
            <value>
            	<c>true</c> if the selected filter can be applied; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.CanFilter">
            <summary>
            Gets value indicating whether the selected filter can be applied.
            </summary>
            <value>
            	<c>true</c> if the selected filter can be applied; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.CanHaveCheckedItemsOutsideList">
            <summary>
            Whether or not this type of filter can have items that are checked (through the filter textbox, for example),
            but aren't shown in the filter UI due to the limit on the number of items shown (10 000)
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterSelectionControl"/> when a new template is applied. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.SupportsCommand(System.Windows.Input.ICommand)">
            <summary>
            Returns if the object will support a given command type.
            </summary>
            <param name="command">The command to be validated.</param>
            <returns>True if the object recognizes the command as actionable against it.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.AcceptChanges">
            <summary>
            Processes the elements in the selected filters.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.OnCellAssigned">
            <summary>
            Raised when a Cell is assigned to the control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.OnRawValuesSet">
            <summary>
            Method called after raw data is pulled from the data manager so that any manipulation that needs to take place can.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.EnsureCurrentState">
            <summary>
            Ensures that <see cref="T:Infragistics.Controls.Grids.Primitives.FilterSelectionControl"/> is in the correct state.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.SetupSelectionBox">
            <summary>
            Used to set up the the controls which will go into the <see cref="T:System.Windows.Controls.Panel"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.OnSelectAllCheckBoxChecked(System.Windows.Controls.CheckBox)">
            <summary>
            Called when the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.SelectAllCheckBox"/> is checked.
            </summary>
            <param name="checkBoxSender"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.GetCollection">
            <summary>
            Creates the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterItemCollection"/> which will be used to store the unique values.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.ClearExistingFilters">
            <summary>
            Resets the existing filter
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.ControlLoaded">
            <summary>
            Method called when the control is loaded.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.EnsureMenuCheckedState">
            <summary>
            This method is called to ensure that the menu options of the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterSelectionControl"/> are correctly checked.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.SetSelectAllCheckBox(System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Sets the select all checkbox value to the given value without doing the action of selecting all the other checkboxes.
            </summary>
            <param name="value"></param>
            <param name="changeDetected">Whether or not we should set the changeDetected flag to true.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.GenerateUniqueList(System.Collections.IList,System.Collections.Generic.List{System.Object},System.Boolean)">
            <summary>
            Given a list of objects builds the UniqueValue list of the control.
            </summary>
            <param name="items"></param>
            <param name="values"></param>
            <param name="shouldCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.CreateAllCheckBoxes(System.Collections.IList,System.Boolean)">
            <summary>
            Creates the list that will be used to populate the selection control.
            </summary>
            <param name="items"></param>
            <param name="shouldCheck"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.AttachSelectAllCheckBoxEvents">
            <summary>
            Attaches the events to the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.SelectAllCheckBox"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.DetachSelectAllCheckBoxEvents">
            <summary>
            Detaches the events to the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.SelectAllCheckBox"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.AddUniqueValue(System.Object,System.Boolean,System.Type)">
            <summary>
            Creates an object for UniqueList and adds it to the list.
            </summary>
            <param name="value"></param>
            <param name="isChecked"></param>
            <param name="type"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.AddUniqueValue(System.Object,System.Boolean,System.Type,System.Boolean)">
            <summary>
            Creates an object for UniqueList and adds it to the list.
            </summary>
            <param name="value">The value.</param>
            <param name="isChecked">if set to <c>true</c> the item is marked as checked.</param>
            <param name="type">The type.</param>
            <param name="limitUniqueValues">if set to <c>true</c> the list is limited.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.InvalidateShowAppendFilterButton(System.String)">
            <summary>
            Determines if the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.ShowAppendFiltersCheckBox"/> should be set.
            </summary>
            <param name="filterValue"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.FilterUniqueValue(System.String)">
            <summary>
            This method is exposed to allow for doing a filtering based on an inputted string.
            </summary>
            <param name="filterValue"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectionControl.OnUniqueValuesCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when the collection of UniqueValues is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CustomFilterDialogControlCommand">
            <summary>
            An enum describing the commands which can be executed on the <see cref="T:Infragistics.Controls.Grids.Primitives.CustomFilteringDialogControlCommandSource"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CustomFilterDialogControlCommand.Accept">
            <summary>
            Accepts the changes made by the dialog.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CustomFilterDialogControlCommand.Close">
            <summary>
            Closes the dialog.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CustomFilteringDialogControlCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CustomFilteringDialogControlCommandSource.CommandType">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.Primitives.CustomFilterDialogControlCommand"/> which is to be executed by the command.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CustomFilteringDialogControlCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CustomFilterDialogCommand">
            <summary>
            A command that is used with the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CustomFilterDialogCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ShowCustomFilterDialogCommand">
            <summary>
            A command which will show the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ShowCustomFilterDialogCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ShowCustomFilterDialogCommand.ExecuteCommand(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Executes the specific command on the specified <see cref="T:Infragistics.Controls.Grids.CellBase"/>
            </summary>
            <param name="cell"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FilterSelectorControl">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.Primitives.FilterSelectorControl"/> controls which <see cref="T:Infragistics.Controls.Grids.Primitives.SelectionControl"/> will be displayed in the FilterMenu.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectorControl.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterSelectorControl"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.FilterSelectorControl.CellProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterSelectorControl.Cell"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterSelectorControl.Cell">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.CellBase"/> object which hosts the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterSelectorControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterSelectorControl.OnCellAssigned">
            <summary>
            Raised when a Cell is assigned to the control.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FilterValueProxy">
            <summary>
            For internal use only. This is used for Unique values in the FilterMen.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterValueProxy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.FilterValueProxyRowsFilter"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterValueProxy.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.FilterValueProxyRowsFilter"/> class.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterValueProxy.#ctor(System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.FilterValueProxyRowsFilter"/> class.
            </summary>
            <param name="value"></param>
            <param name="isChecked"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterValueProxy.Value">
            <summary>
            The Value that the FilterValueProxy represents.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterValueProxy.ContentString">
            <summary>
            The string used for display purposes.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterValueProxy.IsChecked">
            <summary>
            Whether or not the FilterValue is selected in the FilterSelectionControl.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterValueProxy.Column">
            <summary>
            Gets/Sets the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterValueProxy.Column"/> that this object is associated with.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Grids.Primitives.FilterValueProxy.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterValueProxy.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.Primitives.FilterValueProxy.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FilterValueProxyCollection">
            <summary>
             For Internal use only. Used for managing the Unique list of items for the FilterMenu.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FilterItemCollection">
            <summary>
            A base class for the collection which is used by the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterSelectionControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterItemCollection.AddSilently(System.Object)">
            <summary>
            Adds the specified item to the list without raising collection changed events.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterItemCollection.RaiseCollectionChanged">
            <summary>
            Raises the CollectionChanged event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterItemCollection.OnPropertyChanged(System.String)">
            <summary>
            Occurs when a property changes.
            </summary>
            <param name="propertyName">The name of the changed property.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterItemCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.Primitives.FilterItemCollection.CollectionChanged"/> event with the provided arguments.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterItemCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>The number of elements contained in the <see cref="T:System.Collections.ICollection" />.</returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterItemCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
            <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterItemCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterItemCollection.Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The object to add to the <see cref="T:System.Collections.IList" />.</param>
            <returns>
            The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection,
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterItemCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.IList" />.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterItemCollection.Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.
            </summary>
            <param name="value">The object to locate in the <see cref="T:System.Collections.IList" />.</param>
            <returns>
            true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterItemCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The object to locate in the <see cref="T:System.Collections.IList" />.</param>
            <returns>
            The index of <paramref name="value" /> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterItemCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:System.Collections.IList" />.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterItemCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The object to remove from the <see cref="T:System.Collections.IList" />.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.IList" /> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterItemCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.
            </summary>
            <returns>true if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, false.</returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterItemCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.
            </summary>
            <returns>true if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, false.</returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="E:Infragistics.Controls.Grids.Primitives.FilterItemCollection.CollectionChanged">
            <summary>
            Occurs when an item is added, removed, changed, moved, or the entire list is refreshed.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Grids.Primitives.FilterItemCollection.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FilterItemCollection`1">
            <summary>
             For Internal use only. Used for managing the Unique list of items for the FilterMenu.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterItemCollection`1.AddSilently(System.Object)">
            <summary>
            Adds the silently.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterItemCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterItemCollection`1.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterItemCollection`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>The number of elements contained in the <see cref="T:System.Collections.ICollection" />.</returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterItemCollection`1.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
            <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterItemCollection`1.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterItemCollection`1.Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The object to add to the <see cref="T:System.Collections.IList" />.</param>
            <returns>
            The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection,
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterItemCollection`1.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.IList" />.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterItemCollection`1.Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.
            </summary>
            <param name="value">The object to locate in the <see cref="T:System.Collections.IList" />.</param>
            <returns>
            true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterItemCollection`1.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The object to locate in the <see cref="T:System.Collections.IList" />.</param>
            <returns>
            The index of <paramref name="value" /> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterItemCollection`1.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:System.Collections.IList" />.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterItemCollection`1.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The object to remove from the <see cref="T:System.Collections.IList" />.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterItemCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.IList" /> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterItemCollection`1.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.
            </summary>
            <returns>true if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, false.</returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterItemCollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.
            </summary>
            <returns>true if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, false.</returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterItemCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterItemCollection`1.List">
            <summary>
            Gets the list of items
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.DropAreaIndicator">
            <summary>
            An object that exposes visual states for Displaying, hiding and hovering, to indicate a droppable area. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DropAreaIndicator.#cctor">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.DropAreaIndicator"/> object. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DropAreaIndicator.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.DropAreaIndicator"/> object. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.DropAreaIndicator.CurrentState">
            <summary>
            Gets the current state that the DropAreaIndicator is in.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DropAreaIndicator.DisplayFromLeft">
            <summary>
            Triggers the "DisplayFromLeft" VisualState.
            </summary>
            <returns>True if the VisualState took effect.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DropAreaIndicator.DisplayFromRight">
            <summary>
            Triggers the "DisplayFromRight" VisualState.
            </summary>
            <returns>True if the VisualState took effect.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DropAreaIndicator.Hide">
            <summary>
            Triggers the "Hide" VisualState.
            </summary>
            <returns>True if the VisualState took effect.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.DropAreaIndicator.DisplayMouseOver">
            <summary>
            Triggers the "DisplayMouseOver" VisualState.
            </summary>
            <returns>True if the VisualState took effect.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FixColumnCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that will lock a <see cref="T:Infragistics.Controls.Grids.Column"/> to the left or right based on the <see cref="P:Infragistics.Controls.Grids.Column.FixedIndicatorDirection"/> property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FixColumnCommand.ExecuteCommand(Infragistics.Controls.Grids.Column)">
            <summary>
            Locks a <see cref="T:Infragistics.Controls.Grids.Column"/> to a side of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
            <param propertyName="col"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FixColumnLeftCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that will lock a <see cref="T:Infragistics.Controls.Grids.Column"/> to the left side of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FixColumnLeftCommand.ExecuteCommand(Infragistics.Controls.Grids.Column)">
            <summary>
            Locks a <see cref="T:Infragistics.Controls.Grids.Column"/> to the left side of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
            <param propertyName="col"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FixColumnRightCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that will lock a <see cref="T:Infragistics.Controls.Grids.Column"/> to the right side of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FixColumnRightCommand.ExecuteCommand(Infragistics.Controls.Grids.Column)">
            <summary>
            Locks a <see cref="T:Infragistics.Controls.Grids.Column"/> to the right side of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
            <param propertyName="col"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.UnfixColumnCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that will unlock a <see cref="T:Infragistics.Controls.Grids.Column"/> that was previously fixed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.UnfixColumnCommand.ExecuteCommand(Infragistics.Controls.Grids.Column)">
            <summary>
            Unlocks a <see cref="T:Infragistics.Controls.Grids.Column"/> that was previously fixed.
            </summary>
            <param propertyName="col"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCommandBase">
            <summary>
            A base class used to react to commands that relate to the GroupByArea of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaCommandBase.Execute(System.Object)">
            <summary>
            Executes the command with the specified parameter.
            </summary>
            <param propertyName="parameter"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaCommandBase.CanExecute(System.Object)">
            <summary>
            Determines if this command can be run.
            </summary>
            <param propertyName="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaCommandBase.Execute(Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl)">
            <summary>
            Executes the command on the specifed <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl"/>.
            </summary>
            <param propertyName="groupByArea"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ToggleGroupByAreaCommand">
            <summary>
            A GroupByArea command that toggles the expansion of a <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ToggleGroupByAreaCommand.Execute(Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl)">
            <summary>
            Toggles the expansion on the specifed <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl"/>.
            </summary>
            <param propertyName="groupByArea"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ExpandGroupByAreaCommand">
            <summary>
            A GroupByArea command that expands a <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ExpandGroupByAreaCommand.Execute(Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl)">
            <summary>
            Expands the specifed <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl"/>.
            </summary>
            <param propertyName="groupByArea"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CollapseGroupByAreaCommand">
            <summary>
            A GroupByArea command that collapses a <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CollapseGroupByAreaCommand.Execute(Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl)">
            <summary>
            Collapses the specifed <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl"/>.
            </summary>
            <param propertyName="groupByArea"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupByAreaPanel">
            <summary>
            A panel used to arrange <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaPanel"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "measure" pass of Silverlight layout. Classes can override this method to define their own measure pass behavior.
            </summary>
            <param propertyName="availableSize">The available size that this object can give to child objects. Infinity can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>The size that this object determines it needs during layout, based on its calculations of child object allotted sizes.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "arrange" pass of Silverlight layout. Classes can override this method to define their own arrange pass behavior.
            </summary>
            <param propertyName="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.GroupByAreaPanel.LevelKeyProperty">
            <summary>
            An attached property that Gets/Sets the LevelKey of the element that is being Grouped.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaPanel.GetLevelKey(System.Windows.UIElement)">
            <summary>
            Gets the level key that element should be arranged by.
            </summary>
            <param propertyName="element"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaPanel.SetLevelKey(System.Windows.UIElement,System.String)">
            <summary>
            Sets the level key that an element should be arranged by.
            </summary>
            <param propertyName="element"></param>
            <param propertyName="key"></param>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.GroupByAreaPanel.LevelProperty">
            <summary>
            An attached property that Gets/Sets the Level of the element that is being Grouped.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaPanel.GetLevel(System.Windows.UIElement)">
            <summary>
            Gets the level an element should be arranged at.
            </summary>
            <param propertyName="element"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaPanel.SetLevel(System.Windows.UIElement,System.Int32)">
            <summary>
            Sets the level an element should be arranged at.
            </summary>
            <param propertyName="element"></param>
            <param propertyName="level"></param>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.GroupByAreaPanel.IndexProperty">
            <summary>
            An attached property that Gets/Sets the Index of the element that is being Grouped.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaPanel.GetIndex(System.Windows.UIElement)">
            <summary>
            Gets the index an element should be arranged by.
            </summary>
            <param propertyName="element"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaPanel.SetIndex(System.Windows.UIElement,System.Int32)">
            <summary>
            Sets the index an element should be arranged by.
            </summary>
            <param propertyName="element"></param>
            <param propertyName="index"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupByAreaPanel.GroupByChildInfoComparer">
            <summary>
            A comparer used to Sort both GroupByChildInfo and GroupByKey objects.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupByAreaPanel.GroupByKey">
            <summary>
            An object used to organize data by it's keys.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupByAreaPanel.GroupByChildInfo">
            <summary>
            An object used store infomration about an element in this panel
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupByColumnCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that groups the data of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByColumnCommand.ExecuteCommand(Infragistics.Controls.Grids.Column)">
            <summary>
            Groups the data of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> by the specified <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
            <param propertyName="col"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.RemoveGroupByColumnCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that will remove the grouping of data of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RemoveGroupByColumnCommand.ExecuteCommand(Infragistics.Controls.Grids.Column)">
            <summary>
            Ungroups the data of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> for the specified <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
            <param propertyName="col"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupByToggleCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that groups or ungroups the data of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByToggleCommand.ExecuteCommand(Infragistics.Controls.Grids.Column)">
            <summary>
            Groups or Ungroups the data of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> for the specified <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
            <param name="col"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupByMovingIndicator">
            <summary>
            A control that shows a visual indication of where an object will be moved for a GroupByColumn.
            </summary>	
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByMovingIndicator.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByMovingIndicator"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByMovingIndicator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByMovingIndicator"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.MergedCellsRenderAdorner">
            <summary>
            An object uesed to add elements to the <see cref="T:Infragistics.Controls.Grids.Primitives.RowsPanel"/> specifically revoling around Merged Cells.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.MergedCellsRenderAdorner.#ctor(Infragistics.Controls.Grids.XamGrid)">
            <summary>
            Initializs a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.MergedCellsRenderAdorner"/>
            </summary>
            <param name="grid"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.MergedCellsRenderAdorner.Reset">
            <summary>
            Releases all elements that this specific <see cref="T:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner"/> has added to the <see cref="T:Infragistics.Controls.Grids.Primitives.RowsPanel"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.MergedCellsRenderAdorner.Initialize">
            <summary>
            Allows the <see cref="T:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner"/> to prepare itself for a new Layout phase
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.MergedCellsRenderAdorner.MeasureAfterRow(Infragistics.Controls.Grids.RowBase)">
            <summary>
            If additional content is going to added after the row, this is where its measured
            </summary>
            <param name="row"></param>
            <returns>The additional height that will be appended to the row. </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.MergedCellsRenderAdorner.MeasureAdorners(System.Windows.Size)">
            <summary>
            Measures MergedContentControls, SummaryRows and separators for the merged cells feature.
            </summary>
            <param name="availableSize"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.MergedCellsRenderAdorner.ArrangeAfterRow(Infragistics.Controls.Grids.RowBase,System.Double,System.Windows.Size)">
            <summary>
            If needed, SummaryRows and Separators are appended to a <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
            <param name="row"></param>
            <param name="top"></param>
            <param name="finalSize"></param>
            <returns>The total height of the elements after the row.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.MergedCellsRenderAdorner.ArrangeAdornments(System.Windows.Size,System.Double)">
            <summary>
            Arranges MergedContentcontrols over the <see cref="T:Infragistics.Controls.Grids.Primitives.RowsPanel"/>
            </summary>
            <param name="finalSize"></param>
            <param name="dataRowTop"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.MergedContentControl">
            <summary>
            A ContentControl used to display the Merged content for a <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.MergedContentControl.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Grids.Primitives.MergedContentControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.MergedContentControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.MergedContentControl"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.PagerControlBase">
            <summary>
            Base class for controls that will be used for paging.  
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerControlBase.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControlBase"/> object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.PagerControlBase.CurrentPageIndex">
            <summary>
            Gets / sets which page of data is currently visible.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.PagerControlBase.TotalPagesProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.PagerControlBase.TotalPages"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.PagerControlBase.TotalPages">
            <summary>
            Gets the count of pages that this <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControlBase"/> represents.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerControlBase.SetCurrentPageIndexSilent(System.Int32)">
            <summary>
            Sets the CurrentPageIndex without doing all the EnsureContent calls.
            </summary>
            <param propertyName="value"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerControlBase.SetRowsManagerMaximumPagesSilent(System.Int32)">
            <summary>
            Sets the RowsManagerMaximumPages without doiong the EnsureContent call.
            </summary>
            <param propertyName="value"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerControlBase.EnsureContent">
            <summary>
            This will get called every time the control is measured, and allows the control to adjust it's content if necessary.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerControlBase.CheckButtonState">
            <summary>
            Calls to the CommandSourceManager to update the UI so that the controls that are going to be doing the commanding are updated appropriately.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerControlBase.InvalidateItems">
            <summary>
            Recreates the Items list <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControl"/>
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Grids.Primitives.PagerControlBase.FirstPage">
            <summary>
            Event raised when the control wants to naviage to the first page.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerControlBase.OnFirstPage">
            <summary>
            Raises the FirstPage event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Grids.Primitives.PagerControlBase.LastPage">
            <summary>
            Event raised when the control wants to naviage to the last page.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerControlBase.OnLastPage">
            <summary>
            Raises the LastPage event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Grids.Primitives.PagerControlBase.PreviousPage">
            <summary>
            Event raised when the control wants to naviage to the previous page.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerControlBase.OnPreviousPage">
            <summary>
            Raises the PreviousPage event
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Grids.Primitives.PagerControlBase.NextPage">
            <summary>
            Event raised when the control wants to naviage to the next page.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerControlBase.OnNextPage">
            <summary>
            Raises the NextPage event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Grids.Primitives.PagerControlBase.GoToPage">
            <summary>
            Event raised when the control wants to naviage to a particular page.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerControlBase.OnGoToPage(System.Int32)">
            <summary>
            Raises the GoToPage event.
            </summary>
            <param propertyName="nextPage">The 1 based index of the page to be navigated to.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.PagerControl">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControlBase"/> implementation that has control buttons for paging along with a <see cref="T:System.Windows.Controls.ListBox"/> showing a window of available pages that can be naviagated to.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerControl.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControl"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.PagerControl.MaximumAvailablePagerValuesProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.PagerControl.MaximumAvailablePagerValues"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.PagerControl.MaximumAvailablePagerValues">
            <summary>
            Gets / sets the maxiumum number of page indicators that will be visible in the Selector.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerControl.AddItemsToList(System.Int32,System.Int32)">
            <summary>
            Sets the ItemSource of the ListBox to a list of values from the starting index to the ending index.
            </summary>
            <param propertyName="startPage">The first value that should appear in the ListBox.</param>
            <param propertyName="endPage">The last value that should appear in the ListBox.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerControl.InvalidateItems">
            <summary>
            Recreates the Items list for the Selector control
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerControl.EnsureContent">
            <summary>
            This will get called every time the control is measured, and allows the control to adjust it's content if necessary.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerControl.SupportsCommand(System.Windows.Input.ICommand)">
            <summary>
            Returns if the object will support a given command type.
            </summary>
            <param propertyName="command">The command to be validated.</param>
            <returns>True if the object recognizes the command as actionable against it.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerControl.GetParameter(Infragistics.Controls.CommandSource)">
            <summary>
            Returns the object that defines the parameters necessary to execute the command.
            </summary>
            <param propertyName="source">The CommandSource object which defines the command to be executed.</param>
            <returns>The object necessary for the command to complete.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControl"/> when a new template is applied. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.PagerItemsControl">
            <summary>
            A control used in <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControl"/> for showing of the available pages.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerItemsControl.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerItemsControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerItemsControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerItemsControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerItemsControl.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element used to display a specified item.
            </summary>
            <returns>
            A <see cref="T:System.Windows.Controls.ListBoxItem"/>.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerItemsControl.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when a <see cref="T:System.Windows.Controls.ListBox"/> reports a mouse move.
            </summary>
            <param name="e">Provides data for <see cref="T:System.Windows.Input.MouseEventArgs"/>.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.PagerItem">
            <summary>
            Represents a selectable item in a <see cref="T:Infragistics.Controls.Grids.Primitives.PagerItemsControl"/>. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.PagingEventArgs">
            <summary>
            Event argument used for the PagingLocation commanding structure that will carry event information to the
            commands.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.PagingEventArgs.NextPage">
            <summary>
            Gets / sets the index of the next page of data to be displayed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.PagingBaseCommand">
            <summary>
            Base class for PagingLocation commands which encapsulates shared logic.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagingBaseCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagingBaseCommand.Execute(System.Object)">
            <summary>
            Execute the command 
            </summary>
            <param propertyName="parameter">The <see cref="T:Infragistics.Controls.Grids.CellBase"/> object that will be executed against.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagingBaseCommand.ExecutePaging(Infragistics.Controls.Grids.RowsManager)">
            <summary>
            Applies a paging action to the inputted <see cref="T:Infragistics.Controls.Grids.RowsManager"/>
            </summary>
            <param propertyName="rowsBase">The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> which will be paged.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagingBaseCommand.ExecutePaging(Infragistics.Controls.Grids.RowsManager,System.Int32)">
            <summary>
            Applies a paging action to the inputted <see cref="T:Infragistics.Controls.Grids.RowsManager"/>
            </summary>
            <param propertyName="rowsBase">The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> which will be paged.</param>
            <param propertyName="pageIndex">The page index that the pager should navigate to.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagingBaseCommand.CanExecutePaging(Infragistics.Controls.Grids.RowsManager)">
            <summary>
            Determines if the command can execute it's paging action
            </summary>
            <param propertyName="rowsBase">The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> that contains the rows to be paged.</param>
            <returns>True if paging can can be executed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagingBaseCommand.CanExecutePaging(Infragistics.Controls.Grids.RowsManager,System.Int32)">
            <summary>
            Determines if the command can execute it's paging action
            </summary>
            <param propertyName="rowsBase">The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> that contains the rows to be paged.</param>
            <param propertyName="rowIndex">The page to navigate to.</param>
            <returns>True if paging can can be executed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FirstPageCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object which will move to the first page.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FirstPageCommand.ExecutePaging(Infragistics.Controls.Grids.RowsManager)">
            <summary>
            Applies a paging action to the inputted <see cref="T:Infragistics.Controls.Grids.RowsManager"/> 
            </summary>
            <param propertyName="rowsBase">The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> which will be paged.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FirstPageCommand.CanExecutePaging(Infragistics.Controls.Grids.RowsManager)">
            <summary>
            Determines if the command can execute it's paging action
            </summary>
            <param propertyName="rowsBase">The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> that contains the rows to be paged.</param>
            <returns>True if paging can can be executed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.PreviousPageCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object which will move to the previous page.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PreviousPageCommand.ExecutePaging(Infragistics.Controls.Grids.RowsManager)">
            <summary>
            Applies a paging action to the inputted <see cref="T:Infragistics.Controls.Grids.RowsManager"/>
            </summary>
            <param propertyName="rowsBase">The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> which will be paged.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PreviousPageCommand.CanExecutePaging(Infragistics.Controls.Grids.RowsManager)">
            <summary>
            Determines if the command can execute it's paging action
            </summary>
            <param propertyName="rowsBase">The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> that contains the rows to be paged.</param>
            <returns>True if paging can can be executed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.LastPageCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object which will move to the last page.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.LastPageCommand.ExecutePaging(Infragistics.Controls.Grids.RowsManager)">
            <summary>
            Applies a paging action to the inputted <see cref="T:Infragistics.Controls.Grids.RowsManager"/>
            </summary>
            <param propertyName="rowsBase">The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> which will be paged.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.LastPageCommand.CanExecutePaging(Infragistics.Controls.Grids.RowsManager)">
            <summary>
            Determines if the command can execute it's paging action
            </summary>
            <param propertyName="rowsBase">The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> that contains the rows to be paged.</param>
            <returns>True if paging can can be executed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.NextPageCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object which will move to the next page.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.NextPageCommand.ExecutePaging(Infragistics.Controls.Grids.RowsManager)">
            <summary>
            Applies a paging action to the inputted <see cref="T:Infragistics.Controls.Grids.RowsManager"/>
            </summary>
            <param propertyName="rowsBase">The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> which will be paged.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.NextPageCommand.CanExecutePaging(Infragistics.Controls.Grids.RowsManager)">
            <summary>
            Determines if the command can execute it's paging action
            </summary>
            <param propertyName="rowsBase">The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> that contains the rows to be paged.</param>
            <returns>True if paging can can be executed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GoToPageCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object which will move to a page determined by the parameter.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GoToPageCommand.ExecutePaging(Infragistics.Controls.Grids.RowsManager,System.Int32)">
            <summary>
            Applies a paging action to the inputted <see cref="T:Infragistics.Controls.Grids.RowsManager"/>
            </summary>
            <param propertyName="rowsBase">The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> which will be paged.</param>
            <param propertyName="pageIndex">The page index that the pager should navigate to.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GoToPageCommand.CanExecutePaging(Infragistics.Controls.Grids.RowsManager,System.Int32)">
            <summary>
            Determines if the command can execute it's paging action
            </summary>
            <param propertyName="rowsBase">The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> that contains the rows to be paged.</param>
            <param propertyName="rowIndex">The page to navigate to.</param>
            <returns>True if paging can can be executed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.PagingControlCommandBase">
            <summary>
            Base class for PagingControls 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagingControlCommandBase.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagingControlCommandBase.Execute(System.Object)">
            <summary>
            Execute the command 
            </summary>
            <param propertyName="parameter">The <see cref="T:Infragistics.Controls.Grids.CellBase"/> object that will be executed against.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagingControlCommandBase.ExecutePagingCommand(Infragistics.Controls.Grids.Primitives.PagerControlBase)">
            <summary>
            Applies the paging command to the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControlBase"/>
            </summary>
            <param propertyName="pager"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagingControlCommandBase.ExecutePagingCommand(Infragistics.Controls.Grids.Primitives.PagerControlBase,System.Int32)">
            <summary>
            Applies the paging command to the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControlBase"/>
            </summary>
            <param propertyName="pager"></param>
            <param propertyName="rowIndex"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagingControlCommandBase.CanExecutePagingControl(Infragistics.Controls.Grids.Primitives.PagerControlBase)">
            <summary>
            Determines if the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControlBase"/> object would allow this operation to execute.
            </summary>
            <param propertyName="pager"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagingControlCommandBase.CanExecutePagingControl(Infragistics.Controls.Grids.Primitives.PagerControlBase,System.Int32)">
            <summary>
            Determines if the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControlBase"/> object would allow this operation to execute.
            </summary>
            <param propertyName="pager"></param>
            <param propertyName="nextPage"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FirstPageControlCommand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.PagingControlCommandBase"/> which signals the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControl"/> to navigate to the first page.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FirstPageControlCommand.CanExecutePagingControl(Infragistics.Controls.Grids.Primitives.PagerControlBase)">
            <summary>
            Determines if the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControlBase"/> object would allow this operation to execute.
            </summary>
            <param propertyName="pager"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FirstPageControlCommand.ExecutePagingCommand(Infragistics.Controls.Grids.Primitives.PagerControlBase)">
            <summary>
            Applies the paging command to the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControlBase"/>
            </summary>
            <param propertyName="pager"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.PreviousPageControlCommand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.PagingControlCommandBase"/> which signals the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControl"/> to navigate to the previous page.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PreviousPageControlCommand.ExecutePagingCommand(Infragistics.Controls.Grids.Primitives.PagerControlBase)">
            <summary>
            Applies the paging command to the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControlBase"/>
            </summary>
            <param propertyName="pager"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PreviousPageControlCommand.CanExecutePagingControl(Infragistics.Controls.Grids.Primitives.PagerControlBase)">
            <summary>
            Determines if the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControlBase"/> object would allow this operation to execute.
            </summary>
            <param propertyName="pager"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.NextPageControlCommand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.PagingControlCommandBase"/> which signals the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControl"/> to navigate to the next page.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.NextPageControlCommand.ExecutePagingCommand(Infragistics.Controls.Grids.Primitives.PagerControlBase)">
            <summary>
            Applies the paging command to the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControlBase"/>
            </summary>
            <param propertyName="pager"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.NextPageControlCommand.CanExecutePagingControl(Infragistics.Controls.Grids.Primitives.PagerControlBase)">
            <summary>
            Determines if the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControlBase"/> object would allow this operation to execute.
            </summary>
            <param propertyName="pager"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.LastPageControlCommand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.PagingControlCommandBase"/> which signals the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControl"/> to navigate to the last page.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.LastPageControlCommand.CanExecutePagingControl(Infragistics.Controls.Grids.Primitives.PagerControlBase)">
            <summary>
            Determines if the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControlBase"/> object would allow this operation to execute.
            </summary>
            <param propertyName="pager"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.LastPageControlCommand.ExecutePagingCommand(Infragistics.Controls.Grids.Primitives.PagerControlBase)">
            <summary>
            Applies the paging command to the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControlBase"/>
            </summary>
            <param propertyName="pager"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GoToPageControlCommand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.PagingControlCommandBase"/> which signals the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControl"/> to navigate to a particular.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GoToPageControlCommand.ExecutePagingCommand(Infragistics.Controls.Grids.Primitives.PagerControlBase,System.Int32)">
            <summary>
            Applies the paging command to the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerControlBase"/>
            </summary>
            <param propertyName="pager"></param>
            <param propertyName="rowIndex"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.SelectionControl">
            <summary>
            A base class for controls in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> which will allow selection of multiple entries.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.SelectionControl.Panel">
            <summary>
            Gets / sets the Panel which will contain the controls do the action against.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.SelectionControl.CellProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.SelectionControl.Cell"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.SelectionControl.Cell">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.CellBase"/> object which hosts the <see cref="T:Infragistics.Controls.Grids.Primitives.SummarySelectionControl"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.SelectionControl.CheckBoxStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.SelectionControl.CheckBoxStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.SelectionControl.CheckBoxStyle">
            <summary>
            Gets/Sets the style that will be applied to all CheckBoxes in this control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SelectionControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.Primitives.SelectionControl"/> when a new template is applied. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SelectionControl.SetupSelectionBox">
            <summary>
            Used to set up the the controls which will go into the <see cref="P:Infragistics.Controls.Grids.Primitives.SelectionControl.Panel"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SelectionControl.AcceptChanges">
            <summary>
            Processes the elements in the <see cref="P:Infragistics.Controls.Grids.Primitives.SelectionControl.Panel"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SelectionControl.SupportsCommand(System.Windows.Input.ICommand)">
            <summary>
            Returns if the object will support a given command type.
            </summary>
            <param propertyName="command">The command to be validated.</param>
            <returns>True if the object recognizes the command as actionable against it.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SelectionControl.GetParameter(Infragistics.Controls.CommandSource)">
            <summary>
            Returns the object that defines the parameters necessary to execute the command.
            </summary>
            <param propertyName="source">The CommandSource object which defines the command to be executed.</param>
            <returns>The object necessary for the command to complete.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SelectionControl.OnCellAssigned">
            <summary>
            Raised when a Cell is assigned to the control.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Grids.Primitives.SelectionControl.PropertyChanged">
            <summary>
            Event raised when a property on this object changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SelectionControl.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.SelectColumnCommand">
            <summary>
            Command that will select a <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SelectColumnCommand.ExecuteCommand(Infragistics.Controls.Grids.Column)">
            <summary>
            Selects the specified <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
            <param propertyName="col"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SelectColumnCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.UnselectColumnCommand">
            <summary>
            Command that will select a <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.UnselectColumnCommand.ExecuteCommand(Infragistics.Controls.Grids.Column)">
            <summary>
            Unselects the specified <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
            <param propertyName="col"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.SortingBaseCommand">
            <summary>
            Base class for Sorting commands which encapsulates shared logic.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SortingBaseCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SortingBaseCommand.ExecuteCommandHelper(Infragistics.Controls.Grids.SortDirection,Infragistics.Controls.Grids.Column)">
            <summary>
             Method designed to combine similar code into a single path.
            </summary>
            <param name="sortDirection"></param>
            <param name="col"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.SortAscendingCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that will sort in an ascending manner.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SortAscendingCommand.ExecuteCommand(Infragistics.Controls.Grids.Column)">
            <summary>
            Applies a sort to the column.
            </summary>
            <param name="col">A <see cref="T:Infragistics.Controls.Grids.Column"/> object that will be sorted.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.SortDescendingCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that will sort in an descending manner.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SortDescendingCommand.ExecuteCommand(Infragistics.Controls.Grids.Column)">
            <summary>
            Applies a sort to the column.
            </summary>
            <param name="col">A <see cref="T:Infragistics.Controls.Grids.Column"/> object that will be sorted.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.SortToggleCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that will change the sort order.
            </summary>
            <remarks>
            The sort order will go from unsorted to ascending, from ascending to descending, and from descending to ascending.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SortToggleCommand.ExecuteCommand(Infragistics.Controls.Grids.Column)">
            <summary>
            Applies a sort to the column.
            </summary>
            <param name="col">A <see cref="T:Infragistics.Controls.Grids.Column"/> object that will be sorted.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.UnsortCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that will unsort.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.UnsortCommand.ExecuteCommand(Infragistics.Controls.Grids.Column)">
            <summary>
            Removes a sort from the column.
            </summary>
            <param name="col">A <see cref="T:Infragistics.Controls.Grids.Column"/> object that will be unsorted.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.SortAscendingToggleCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that will change the sort order.
            </summary>
            <remarks>
            The sort order will go from unsorted to ascending, from ascending to unsorted.
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.SortDescendingToggleCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that will change the sort order.
            </summary>
            <remarks>
            The sort order will go from unsorted to descending, from descending to unsorted.
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl">
            <summary>
            A control which contains a popup and shows a content.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl.IsOpenProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl.IsOpen"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl.IsOpen">
            <summary>
            Gets / sets if the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl"/> should open it's <see cref="T:System.Windows.Controls.Primitives.Popup"/> control.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl.Cell">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.CellBase"/> associated with this control.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl.AllowResizingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl.AllowResizing"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl.AllowResizing">
            <summary>
            Gets/sets whether a resizer appears at the bottom of the HeaderDropDownControl
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl.SupportsCommand(System.Windows.Input.ICommand)">
            <summary>
            Returns if the object will support a given command type.
            </summary>
            <param propertyName="command">The command to be validated.</param>
            <returns>True if the object recognizes the command as actionable against it.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl.GetParameter(Infragistics.Controls.CommandSource)">
            <summary>
            Returns the object that defines the parameters necessary to execute the command.
            </summary>
            <param propertyName="source">The CommandSource object which defines the command to be executed.</param>
            <returns>The object necessary for the command to complete.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl.InvalidateElementOutofPopup">
            <summary>
            Invalidates the the underlying width/height of the element underneath the popup used to capture mouse clicks
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl.KeyDownHandler(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.KeyDown"/> event occurs.
            </summary>
            <param propertyName="e">The data for the event.</param>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl.OpenButtonContentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl.OpenButtonContent"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl.OpenButtonContent">
            <summary>
            Gets / sets the content that will be applied to the OpenButton on the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.HeaderDropDownContentRootPanel">
            <summary>
            Defines an area within which the content of the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl"/> will be placed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.XamGridPopupCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.XamGridPopupCommandSource.CommandType">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.Primitives.XamGridPopupCommand"/> which is to be executed by the command.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.XamGridPopupCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.XamGridPopupCommand">
            <summary>
            An enum describing the commands which can be executed on the <see cref="T:Infragistics.Controls.Grids.Primitives.XamGridPopupCommandSource"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.XamGridPopupCommand.TogglePopup">
            <summary>
            Switches the popup from open to closed, or closed to open.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.XamGridPopupCommand.OpenPopup">
            <summary>
            Opens the Popup.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.XamGridPopupCommand.ClosePopup">
            <summary>
            Closes the Popup.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.PopupCommandBase">
            <summary>
            A base class for actions which are executed on <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderDropDownControl"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PopupCommandBase.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.OpenPopupCommand">
            <summary>
            A command which will open the popup.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.OpenPopupCommand.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.TogglePopupCommand">
            <summary>
            A command which will toggle the popup.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TogglePopupCommand.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ClosePopupCommand">
            <summary>
            A command which will close the popup.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ClosePopupCommand.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.XamGridPopupFilterMenuConditionalCommandSource">
            <summary>
            A <see cref="T:Infragistics.Controls.CommandSource"/> controlling the popup for the filter menu.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.XamGridPopupFilterMenuConditionalCommandSource.ConditionalCommandParameterProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.XamGridPopupFilterMenuConditionalCommandSource.ConditionalCommandParameter"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.XamGridPopupFilterMenuConditionalCommandSource.ConditionalCommandParameter">
            <summary>
            A list of <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> objects which make up the parameters.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.XamGridPopupFilterMenuConditionalCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ClosePopupConditionalCommand">
            <summary>
            A command which will close the popup.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ClosePopupConditionalCommand.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CustomFilteringDialogFilterMenuCommandSource">
            <summary>
            A <see cref="T:Infragistics.Controls.CommandSource"/> object which controls the custom filter dialog.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CustomFilteringDialogFilterMenuCommandSource.ConditionalCommandParameterProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.CustomFilteringDialogFilterMenuCommandSource.ConditionalCommandParameter"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CustomFilteringDialogFilterMenuCommandSource.ConditionalCommandParameter">
            <summary>
            A list of <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> objects which make up the parameters.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CustomFilteringDialogFilterMenuCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ShowCustomFilterDialogFilterMenuConditionalCommand">
            <summary>
            A command which will show the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ShowCustomFilterDialogFilterMenuConditionalCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ShowCustomFilterDialogFilterMenuConditionalCommand.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ShowCustomFilterDialogFilterMenuConditionalCommand.ExecuteCommand(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Executes the specific command on the specified <see cref="T:Infragistics.Controls.Grids.CellBase"/>
            </summary>
            <param propertyName="col"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CompoundFilteringDialogFilterMenuCommandSource">
            <summary>
            A <see cref="T:Infragistics.Controls.CommandSource"/> object which controls the Compound filter dialog.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CompoundFilteringDialogFilterMenuCommandSource.ConditionalCommandParameterProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.CompoundFilteringDialogFilterMenuCommandSource.ConditionalCommandParameter"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CompoundFilteringDialogFilterMenuCommandSource.ConditionalCommandParameter">
            <summary>
            A list of <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> objects which make up the parameters.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CompoundFilteringDialogFilterMenuCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ShowCompoundFilterDialogFilterMenuConditionalCommand">
            <summary>
            A command which will show the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ShowCompoundFilterDialogFilterMenuConditionalCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ShowCompoundFilterDialogFilterMenuConditionalCommand.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ShowCompoundFilterDialogFilterMenuConditionalCommand.ExecuteCommand(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Executes the specific command on the specified <see cref="T:Infragistics.Controls.Grids.CellBase"/>
            </summary>
            <param propertyName="col"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.SummaryResultFormatStringValueConverter">
            <summary>
            Takes a <see cref="T:Infragistics.SummaryDefinition"/>, and returns the <see cref="P:Infragistics.SummaryResult.Value"/> with a FormatString applied to it.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummaryResultFormatStringValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Takes a <see cref="T:Infragistics.SummaryDefinition"/>, and returns the <see cref="P:Infragistics.SummaryResult.Value"/> with a FormatString applied to it.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummaryResultFormatStringValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not Implemented
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.SummaryBaseCommand">
            <summary>
            Base class for Summary commands which encapsulates shared logic.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummaryBaseCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.SummarySelectionControl">
            <summary>
            A control which will allows the user to select which summaries should be applied to the column.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummarySelectionControl.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Grids.Primitives.SummarySelectionControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummarySelectionControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.SummarySelectionControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummarySelectionControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.Primitives.SummarySelectionControl"/> when a new template is applied. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummarySelectionControl.AcceptChanges">
            <summary>
            Processes the elements in the <see cref="T:System.Windows.Controls.Panel"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummarySelectionControl.SetupSelectionBox">
            <summary>
            Used to set up the the controls which will go into the <see cref="T:System.Windows.Controls.Panel"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.SummarySelectionControl.OKCaptionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.SummarySelectionControl.OKCaption"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.SummarySelectionControl.OKCaption">
            <summary>
            Gets / sets the text that will be displayed on the accept button
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.SummarySelectionControl.CancelCaptionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.SummarySelectionControl.CancelCaption"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.SummarySelectionControl.CancelCaption">
            <summary>
            Gets / set the text that will be displayed on the cancel button.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CultureValueConverter">
            <summary>
            A <see cref="T:System.Windows.Data.IValueConverter"/> that will convert the value to the CurrentCulture.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CultureValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the value to the system's current culture. 
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CultureValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FixedRowSeparator">
            <summary>
            A visual object that indicates the seperation between fixed rows and normal rows of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FixedRowSeparator.#cctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedRowSeparator"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FixedRowSeparator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedRowSeparator"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GridSortableListBox">
            <summary>
            A <see cref="T:System.Windows.Controls.ListBox"/> made of <see cref="T:Infragistics.Controls.Grids.Primitives.GridSortableListBoxItem"/> objects, that can be reorderd.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GridSortableListBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GridSortableListBox"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.GridSortableListBox.IsSortableProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.GridSortableListBox.IsSortable"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GridSortableListBox.IsSortable">
            <summary>
            Gets/Sets whether items in the <see cref="T:Infragistics.Controls.Grids.Primitives.GridSortableListBox"/> can be re-ordered via the UI.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GridSortableListBox.OnApplyTemplate">
            <summary>
            Retrieves the ScrollViewer TemplatePart for scrolling logic.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GridSortableListBox.GetContainerForItemOverride">
            <summary>
            Returns a new <see cref="T:Infragistics.Controls.Grids.Primitives.GridSortableListBoxItem"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GridSortableListBox.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raised before the MouseLeftButtonUp event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GridSortableListBox.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Raised before the MouseMove event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GridSortableListBox.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the LostMouseCapture event is raised.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GridSortableListBoxItem">
            <summary>
            An draggable item generated in the <see cref="T:Infragistics.Controls.Grids.Primitives.GridSortableListBox"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GridSortableListBoxItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GridSortableListBoxItem"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.GridSortableListBoxItem.IsMovableProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.GridSortableListBoxItem.IsMovable"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GridSortableListBoxItem.IsMovable">
            <summary>
            Gets/Sets whether the particular item can be re-ordered.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GridSortableListBoxItem.OnApplyTemplate">
            <summary>
            Retrieves the DragHandle element for a <see cref="T:Infragistics.Controls.Grids.Primitives.GridSortableListBoxItem"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.RenderMergeInfo">
            <summary>
            An object used to store information about a particular merged column
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RenderMergeInfo.Key">
            <summary>
            The unique key that this object represents
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RenderMergeInfo.Cell">
            <summary>
            The current top most cell in the viewport for this column
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RenderMergeInfo.LastVisibleCell">
            <summary>
            The last cell in the viewport for this grouping for the column
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RenderMergeInfo.LastCellIsExpanded">
            <summary>
            Whether the last cell checked was expanded or not. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RenderMergeInfo.MergedColumnInfo">
            <summary>
            The MergedColumnInfo that this object represents.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RenderMergeInfo.ParentMergedColumnInfo">
            <summary>
            The ParentMergedColumnInfo that owned the previous cell.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RenderMergeInfo.CellsAlreadyAccountedFor">
            <summary>
            keeps track of all cells that have been checked for this object already.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.SimpleClickableContainer">
            <summary>
            A container control that has an event that fires a <see cref="E:Infragistics.Controls.Grids.Primitives.SimpleClickableContainer.SimpleClick"/> when a MouseDown and MouseUp event
            have been triggered without the mouse moving.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SimpleClickableContainer.#cctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.SimpleClickableContainer"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SimpleClickableContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.SimpleClickableContainer"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.SimpleClickableContainer.ChildProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.SimpleClickableContainer.Child"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.SimpleClickableContainer.Child">
            <summary>
            Gets/Sets the child element that will be the content of this control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SimpleClickableContainer.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event occurs.
            </summary>
            <param propertyName="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SimpleClickableContainer.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.Primitives.SimpleClickableContainer"/> when a new template is applied. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SimpleClickableContainer.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseMove"/> event occurs.
            </summary>
            <param propertyName="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SimpleClickableContainer.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> event occurs.
            </summary>
            <param propertyName="e">The data for the event.</param>
        </member>
        <member name="E:Infragistics.Controls.Grids.Primitives.SimpleClickableContainer.SimpleClick">
            <summary>
            An event that is triggered when a MouseDown and MouseUp occur without the mouse moving.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SimpleClickableContainer.OnSimpleClick">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.Primitives.SimpleClickableContainer.SimpleClick"/> event.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.VisibilityToBoolValueConverter">
            <summary>
            Represents the converter that converts a Visibility value to a bool.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.VisibilityToBoolValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="culture">The culture of the conversion.</param>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.VisibilityToBoolValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="culture">The culture of the conversion.</param>
            <returns>
            The value to be passed to the source object.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner">
            <summary>
            An object that can be used to add additional elements to the RowsPanel of the XamGrid.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.#ctor(Infragistics.Controls.Grids.XamGrid)">
            <summary>
            Initializs a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner"/>
            </summary>
            <param name="grid"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.RegisterRowsPanel(Infragistics.Controls.Grids.Primitives.RowsPanel)">
            <summary>
            Registers the <see cref="P:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.RowsPanel"/> that this <see cref="T:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner"/> will insert elements into.
            </summary>
            <param name="panel"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.UnregisterRowsPanel">
            <summary>
            Unregisters the <see cref="P:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.RowsPanel"/> that this <see cref="T:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner"/> inserted elements into.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.Reset">
            <summary>
            Releases all elements that this specific <see cref="T:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner"/> has added to the <see cref="P:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.RowsPanel"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.Measure(System.Windows.Size)">
            <summary>
            Performs a measure for all elements that should be added to the <see cref="P:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.RowsPanel"/>
            </summary>
            <param name="availableSize"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.Initialize">
            <summary>
            Allows the <see cref="T:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner"/> to prepare itself for a new Layout phase
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.MeasureAfterRow(Infragistics.Controls.Grids.RowBase)">
            <summary>
            If additional content is going to added after the row, this is where its measured
            </summary>
            <param name="row"></param>
            <returns>The additional height that will be appended to the row. </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.MeasureAdorners(System.Windows.Size)">
            <summary>
            When overriden on a dervied class it measures all elements that will be displayed in the <see cref="P:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.RowsPanel"/>
            </summary>
            <param name="availableSize"></param>
            <returns>The total height of all additional elements that will be rendered inline.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.ArrangeAfterRow(Infragistics.Controls.Grids.RowBase,System.Double,System.Windows.Size)">
            <summary>
            For each row, additional elements can be arranged after.
            </summary>
            <param name="row"></param>
            <param name="top"></param>
            <param name="finalSize"></param>
            <returns>The total height of the elements after the row.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.ArrangeAdornments(System.Windows.Size,System.Double)">
            <summary>
            Occurs after all rows have been arranged, it allows the object to render additional elements on top of the <see cref="P:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.RowsPanel"/>
            </summary>
            <param name="finalSize"></param>
            <param name="dataRowTop"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.RegisterObjectUsed(System.Object)">
            <summary>
            Registers a particualr object as being used. 
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.UnregisterObject(System.Object)">
            <summary>
            Unregisters the specific object, and removes its element from the <see cref="P:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.RowsPanel"/>
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.UnregisterElement(System.Object,System.String)">
            <summary>
            Given the the obj and key to look up this object by, the UIElement that it represents its removed from <see cref="P:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.RowsPanel"/>
            </summary>
            <param name="obj"></param>
            <param name="key"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.UnregisterElement(System.Windows.UIElement)">
            <summary>
            Removes the specified <see cref="T:System.Windows.UIElement"/> fromt he <see cref="P:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.RowsPanel"/>
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.GetElement(System.Object,System.String)">
            <summary>
            If an element actually exists for the specified keys it is returned, otherwise null is returned. 
            </summary>
            <param name="obj"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.AddElement(System.Object,System.String,System.Windows.UIElement)">
            <summary>
            If GetElement returned null, then AddElement should be used to register that element with <see cref="P:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.RowsPanel"/>
            </summary>
            <param name="row"></param>
            <param name="key"></param>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.RowsPanel">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.RowsPanel"/> that this object will append to.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.XamGrid">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner.XamGrid"/> that this <see cref="T:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner"/> belongs to. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.RowsPanel">
            <summary>
            A custom Panel that Virtualizes the rows of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowsPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.RowsPanel"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowsPanel.Grid">
            <summary>
            Gets a reference to the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> that owns the panel.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowsPanel.VisibleRows">
            <summary>
            Gets the rows that are currently visible in the Viewport.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowsPanel.VisibleManagers">
            <summary>
            Gets the list of currently visible RowsManagers
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowsPanel.FixedRowsBottom">
            <summary>
            Gets the rows that are currently fixed to the bottom of the Viewport.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowsPanel.FixedRowsTop">
            <summary>
            Gets the rows that are currently fixed to the top of the Viewport.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowsPanel.CustomFilterDialogControl">
            <summary>
            Gets / sets the <see cref="P:Infragistics.Controls.Grids.Primitives.RowsPanel.CustomFilterDialogControl"/> which will be used to allow for custom UI based filtering.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowsPanel.CompoundFilterDialogControl">
            <summary>
            Gets or sets the <see cref="P:Infragistics.Controls.Grids.Primitives.RowsPanel.CompoundFilterDialogControl"/> used by the filter menu to set and edit complex filter expressions.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowsPanel.ScrollInfo">
            <summary>
            A reference to the ScrollInfo object that relates to the <see cref="T:Infragistics.Controls.Grids.Primitives.RowsPanel"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowsPanel.IsWndResizing">
            <summary>
            Flag set to <c>true</c> when the window is being resizied.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowsPanel.ShouldInvalidateCellMeasure">
            <summary>
            Flag set to <c>true</c> when the window is maximized/restored in order to remeasure CellControls.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowsPanel.RegisterFixedRow(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.FixedRowAlignment)">
            <summary>
            Registers a Fixed Row with the panel, so that the row is displayed.
            </summary>
            <param name="row">The row that should be displayed.</param>
            <param name="alignment">Whether the info should be aligned to the Top or the Bottom of the XamGrid.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowsPanel.UnregisterFixedRow(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Unregisters the specified fixed row from the panel, so that it no longer gets displayed.
            </summary>
            <param name="row">The row that should no longer be displayed.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowsPanel.ResetCachedScrollInfo(System.Boolean)">
            <summary>
            Resets any information that is being cached to stop the scrollbar from jumping around while scrolling. 
            Reasons for reseting can be the addition/removal of new rows, or the expansion/collapsing of child rows. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowsPanel.ResetRows">
            <summary>
            Releases all Rows from the VisualTree. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowsPanel.ResetRows(System.Boolean)">
            <summary>
            Releases all Rows from the VisualTree. 
            </summary>
            <param name="releaseAll">True if the CellsPanels should be released by the RecyclingManager.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowsPanel.ScrollCellIntoView(Infragistics.Controls.Grids.CellBase,Infragistics.Controls.Grids.CellAlignment,Infragistics.Controls.Grids.EmptyDelegate)">
            <summary>
            Scrolls the specified cell into the Viewport. 
            </summary>
            <param name="cell"></param>
            <param name="alignment">Whether the cell should be aligned to the top or bottom of the panel.</param>
            <param name="callback">The function that should be called after the panel updates it's layout.</param>
            <remarks>If alignTop and alignBottom are both set, alignTop will win.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowsPanel.RenderRow(Infragistics.Controls.Grids.RowBase,System.Double)">
            <summary>
            Creates a control for the row, and adds it as child of the panel. 
            </summary>
            <param name="row">The row which is now in View. </param>
            <param name="availableWidth">The amount of width the row has to work with.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowsPanel.UpdateVerticalScrollInfo(System.Int32)">
            <summary>
            Updates the ScrollInfo of the <see cref="T:Infragistics.Controls.Grids.Primitives.RowsPanel"/>.
            Such as changing the vertical scrollbar visibility, or its viewport size.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowsPanel.UpdateHorizontalScrollInfo">
            <summary>
            Updates the ScrollInfo of the <see cref="T:Infragistics.Controls.Grids.Primitives.RowsPanel"/>.
            Such as changing the horizontal scrollbar visibility, or its viewport size.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowsPanel.ArrangeRow(Infragistics.Controls.Grids.RowBase,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calls Arrange on the specified row. 
            </summary>
            <param name="row">The row that should be arranged.</param>
            <param name="left">The left value the row should be positioned at.</param>
            <param name="top">The top value the row should be positioned at.</param>
            <param name="width">The width the row should be.</param>
            <param name="height">The height the row should be.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowsPanel.ResetDataRows">
            <summary>
            Removes all Rows from the Panel.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowsPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Determines how what rows can fit given the available size and scroll information.
            </summary>
            <param name="availableSize">
            The available size that this object can give to child objects. Infinity can be 
            specified as a value to indicate that All rows should be displayed.
            </param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowsPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges each row that should be visible, one on top of the other, similar to a 
            Vertical <see cref="T:System.Windows.Controls.StackPanel"/>.
            </summary>
            <param name="finalSize">
            The final area within the parent that this object 
            should use to arrange itself and its children.
            </param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowsPanel.Infragistics#IRecyclableElementHost#OnElementAttached(Infragistics.ISupportRecycling,System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Invoked when an element is associated with an item in the panel
            </summary>
            <param name="element">The element being associated with an item</param>
            <param name="item">The item represented by the specified element</param>
            <param name="isNewlyRealized">True if the element is new; false if the element is being recycled</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowsPanel.Infragistics#IRecyclableElementHost#OnElementReleased(Infragistics.ISupportRecycling,System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Invoked when an element is detached from an item.
            </summary>
            <param name="element">The element being released</param>
            <param name="item">The item that was represented by the element</param>
            <param name="isRemoved">True if the element is being removed from the children; otherwise false if the element is being kept for potential recycling later</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowsPanel.Infragistics#IRecyclableElementHost#ShouldRemove(Infragistics.ISupportRecycling,System.Windows.FrameworkElement)">
            <summary>
            Invoked when an element being released is to be considered for recycling.
            </summary>
            <param name="element">The element being released</param>
            <param name="item">The item that was represented by the element</param>
            <returns>Return true to indicate that the element should be removed from the panel; otherwise return false to allow the element to be recyled.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.AddNewRowCell">
            <summary>
            A cell that represents a <see cref="T:Infragistics.Controls.Grids.Cell"/> in a <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.AddNewRowCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowCell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowCell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Column"/> object that the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowCell"/> represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.AddNewRowCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.AddNewRowCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.AddNewRowCell.EditingSettings">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.EditingSettingsBaseOverride"/> object that controls the settings for this object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.AddNewRowCell.ResolveIsCellEditable">
            <summary>
            Gets if the particular Cell has a field attribute that says it can edit.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.AddNewRowCell.IsEditable">
            <summary>
            Gets whether a particular <see cref="T:Infragistics.Controls.Grids.Cell"/> can enter edit mode.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.AddNewRowCell.EnableCustomEditorBehaviors">
            <summary>
            Allows a Cell to disable Editor Behavior Support if they choose to.
            </summary>
            <remarks>
            See <see cref="P:Infragistics.Controls.Grids.CellBase.EnableCustomEditorBehaviors"/> for more information.
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.AddNewRowCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.AddNewRowCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowCellControl"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.AddNewRowExpansionIndicatorCell">
            <summary>
            An object that represents the particular expansion indicator area for a row.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.AddNewRowExpansionIndicatorCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowExpansionIndicatorCell"/> class.
            </summary>
            <param propertyName="row">The row that owns this particular cell.</param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn"/> that this cell represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.AddNewRowExpansionIndicatorCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowExpansionIndicatorCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.AddNewRowExpansionIndicatorCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowExpansionIndicatorCell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.AddNewRowExpansionIndicatorCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowExpansionIndicatorCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowExpansionIndicatorCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.AddNewRowExpansionIndicatorCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowExpansionIndicatorCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.AddNewRowExpansionIndicatorCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowExpansionIndicatorCellControl"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.AddNewRowSelectorCell">
            <summary>
            A cell that represents the add new row selector of a <see cref="T:Infragistics.Controls.Grids.RowBase"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.AddNewRowSelectorCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowSelectorCell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.RowBase"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowSelectorCell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Column"/> object that the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowSelectorCell"/> represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.AddNewRowSelectorCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.AddNewRowSelectorCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.AddNewRowSelectorCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.AddNewRowSelectorCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowSelectorCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.AddNewRowSelectorCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowSelectorCellControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.AddNewRowSelectorCellControl.EnsureContent">
            <summary>
            This will get called every time the control is measured, and allows the control to adjust it's content if necessary.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CellBaseCollection">
            <summary>
            A Collection of <see cref="T:Infragistics.Controls.Grids.CellBase"/> objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellBaseCollection.#ctor(Infragistics.Controls.Grids.ColumnBaseCollection,Infragistics.Controls.Grids.RowBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.CellBaseCollection"/> class.
            </summary>
            <param propertyName="columns">The <see cref="T:Infragistics.Controls.Grids.ColumnBaseCollection"/> associated with the <see cref="T:Infragistics.Controls.Grids.Primitives.CellBaseCollection"/></param>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.RowBase"/> that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.CellBaseCollection"/></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellBaseCollection.GetCount">
            <summary>
            Returns the total number of <see cref="T:Infragistics.Controls.Grids.CellBase"/>s in the <see cref="T:Infragistics.Controls.Grids.Primitives.CellBaseCollection"/>
            </summary>
            <returns>The total number of cells.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellBaseCollection.IndexOf(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Gets the index of the specified <see cref="T:Infragistics.Controls.Grids.CellBase"/>.
            </summary>
            <param propertyName="item"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellBaseCollection.GetItem(System.Int32)">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Grids.CellBase"/>  item at the index given.  
            </summary>
            <param propertyName="index">The index of the cell to be retrieved</param>
            <returns>The CellBase object at the given index.</returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellBaseCollection.Item(Infragistics.Controls.Grids.Column)">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Grids.CellBase"/> for the corresponding <see cref="T:Infragistics.Controls.Grids.ColumnBase"/>.
            </summary>
            <param propertyName="column">The column that should be used for reference.</param>
            <returns>
            The <see cref="T:Infragistics.Controls.Grids.CellBase"/> for the corresponding <see cref="T:Infragistics.Controls.Grids.ColumnBase"/>.
            If no Cell exists, one is created.
            If the column doesn't exist, null is returned. 
            </returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellBaseCollection.Item(System.String)">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Grids.CellBase"/> for the corresponding <see cref="T:Infragistics.Controls.Grids.ColumnBase"/>.
            </summary>
            <param propertyName="key">The key of the column that should be used for reference.</param>
            <returns>
            The <see cref="T:Infragistics.Controls.Grids.CellBase"/> for the corresponding <see cref="T:Infragistics.Controls.Grids.ColumnBase"/>.
            If no Cell exists, one is created.
            If the column doesn't exist, null is returned. 
            </returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellBaseCollection.Row">
            <summary>
            Gets the Row this collection represents.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CellControlBase">
            <summary>
            The base control class for all <see cref="T:Infragistics.Controls.Grids.CellBase"/> objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellControlBase.ContentProvider">
            <summary>
            Resolves the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase"/> for this <see cref="T:Infragistics.Controls.Grids.CellControl"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellControlBase.Cell">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.CellBase"/> that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellControlBase.Column">
            <summary>
             Gets the Column that this <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> represents. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellControlBase.KeepContentInLogicalTree">
            <summary>
            Determines if the Content of the CellControlBase should be allowed to be made to be a logical child of the element.
            </summary>
            <remarks>
            <p class="body">By default, the Content of a ContentControl is made to be a logical child of the ContentControl. By default the 
            CellControlBase overrides this and prevents the Content from being made a logical child so that inherited properties will follow 
            the visual tree and therefore properties like Foreground can be manipulated within the ControlTemplate (e.g. using VSM). However this 
            property may be set to true prior to any CellControlBase instances being created (e.g. in a static constructor of the main application) 
            to allow the default behavior of the ContentControl.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.CellControlBase.ResizingThresholdProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.CellControlBase.ResizingThreshold"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellControlBase.ResizingThreshold">
            <summary>
            Gets or sets the size of the area for which the resizing indicator will be displayed.
            </summary>
            <value>
            The resizing threshold.
            </value>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellControlBase.AllowUserResizing">
            <summary>
            Internal flag used to get / set if the user's mouse is in position to allow for drag resizing of a column.
            </summary>
            <remarks>True if we determine the column is in a resize area and that the column allows resizing. This already takes into account if the column itself allows for resizing	</remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellControlBase.IsResizing">
            <summary>
             Internal flag that gets / sets when the mouse is down and the column is being resized.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellControlBase.ShowResizingArrow">
            <summary>
            Gets if a resizing arrow should be shown.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellControlBase.DelayRecycling">
            <summary>
            Get / set if the object should be recycled.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellControlBase.OwnerPanel">
            <summary>
            Gets/sets the <see cref="T:Infragistics.Controls.Grids.Primitives.CellsPanel"/> that owns this element. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellControlBase.ValidateWidthInArrange">
            <summary>
            Gets whether the Control should validate it's width in ArrangeOverride. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.OnAttached(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.CellBase"/> is attached to the <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/>.
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.CellBase"/> that is being attached to the <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.OnReleasing(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Invoked when a <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> is being released from an object.
            </summary>
            <param name="cell"></param>
            <returns>False, if the control shouldn't be released.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.OnReleased(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.CellBase"/> releases the <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.AttachContent">
            <summary>
            Invoked when content is attached to the Control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.ReleaseContent">
            <summary>
            Invoked before content is released from the control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.OnLoaded">
            <summary>
            Raised when the <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> is Loaded. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.EnsureContent">
            <summary>
            This will get called every time the control is measured, and allows the control to adjust it's content if necessary.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.ReleaseObjectForRecycling(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Releases this object so that it can be recycled.
            </summary>
            <param propertyName="cell"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.ResolveBinding">
            <summary>
            In a derived class this method should be implemented to resolve the binding that should be used for a bound <see cref="P:Infragistics.Controls.Grids.Primitives.CellControlBase.Column"/>
            </summary>
            <remarks>This will be called during the ContentProvider ResolveBinding and is not to be called directly otherwise.</remarks>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.ResolveEditorBinding">
            <summary>
            Creates a <see cref="T:System.Windows.Data.Binding"/> that can be applied to an editor.
            </summary>
            <remarks>This will be called during the ContentProvider ResolveBinding and is not to be called directly otherwise.</remarks>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.DetermineCursorHelper(Infragistics.Controls.Grids.Column,System.Windows.Rect,System.Double)">
            <summary>
            Determines if the cursor should be changed for column resizing.
            </summary>
            <param name="column"></param>
            <param name="bounds"></param>
            <param name="xPosition"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.Refresh">
            <summary>
            Refreshes the control with it's current bindings.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.EnsureCurrentState">
            <summary>
            Ensures that <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> is in the correct state.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.ManuallyInvokeMeasure(System.Windows.Size)">
            <summary>
            Invoked when a CellControl's measure was called, but its MeasureOverride was not invoked. 
            This method should be overriden on a derived class, if it's neccessary to take some extra steps to ensure Measure has been called.
            </summary>
            <param name="sizeToBeMeasured"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.GetTemplateChildByName(System.String)">
            <summary>
            Gets a template child object by the propertyName of the child.
            </summary>
            <param propertyName="propertyName">The propertyName of the template child object.</param>
            <returns>A DependacyObject with the propertyName of the inputted string.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.ValidateColumnWidth(Infragistics.Controls.Grids.Column,System.Double)">
            <summary>
            Used during resizing, ensures that the width that the user resizes the column to is legal according to the limitations of the column.
            </summary>
            <param propertyName="column"></param>
            <param propertyName="width"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.ResizeColumns(System.Double)">
            <summary>
            Used during column resizing, loops through the resized columns collection and sets the new width to the column.
            </summary>
            <param propertyName="width"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.ResizeColumn(System.Double,Infragistics.Controls.Grids.Column)">
            <summary>
            Used during column resizing, sets the width of the column to a validated width.
            </summary>
            <param propertyName="width"></param>
            <param propertyName="column"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.DetermineCursor(System.Windows.Input.MouseEventArgs)">
            <summary>
            Sets the cursor based on the mouse position and what features are enabled.
            </summary>
            <param propertyName="e"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.CellControlBase.LogicalChildren">
            <summary>
            Returns an enumerator to iterate the logical children.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.OnContentChanged(System.Object,System.Object)">
            <summary>
            Overridden. Invoked when the <see cref="P:System.Windows.Controls.ContentControl.Content"/> has changed.
            </summary>
            <param name="oldContent">The old content</param>
            <param name="newContent">The new content</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.MeasureOverride(System.Windows.Size)">
            <summary>
            Allows a Cell to ensure it was propely measured. 
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.ArrangeOverride(System.Windows.Size)">
            <summary>
            Validates the Arranging of the cell, and makes sure that the width it will arrange at, matches the column's ActualWidth
            </summary>
            <param propertyName="finalSize"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Silverlight automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
             Called before the System.Windows.UIElement.MouseMove event occurs.
            </summary>
            <param propertyName="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the System.Windows.UIElement.MouseLeave event occurs
            </summary>
            <param propertyName="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the System.Windows.UIElement.MouseLeftButtonDown event occurs.
            </summary>
            <param propertyName="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.KeyDown"/> event occurs.
            </summary>
            <param propertyName="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the LostMouseCapture event is raised.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> when a new template is applied. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.OnMouseLeftButtonDownColumnMoving(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called to process the control for Column Moving.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.OnMouseMoveColumnMoving(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called to process the control for Column Moving.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.OnMouseLeftButtonUpColumnMoving(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called to process the control for Column Moving.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.OnMouseLeftButtonDownColumnResizing(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called to process the control for Column IsResizing.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.OnMouseLeftButtonUpColumnResizing(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called to process the control for Column IsResizing.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.OnMouseMoveColumnResizing(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called during <see cref="M:Infragistics.Controls.Grids.Primitives.CellControlBase.OnMouseMove(System.Windows.Input.MouseEventArgs)"/> to process the control for Column IsResizing.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.InitializeDragResize(System.Windows.Input.MouseEventArgs)">
            <summary>
            Sets up the grid to use column resizing.
            </summary>
            <param propertyName="e"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.CancelDragResize(System.Boolean)">
            <summary>
            Executed when user driven column resizing is cancelled.
            </summary>
            <param propertyName="fireEvent"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.EndDragResize(System.Boolean)">
            <summary>
            Executed when resizing is done, both successfully and cancelled, to clean up when completed.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Grids.Primitives.CellControlBase.PropertyChanged">
            <summary>
            Event raised when a property on this object changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CellControlBase.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propName"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ChildBandCell">
            <summary>
            The Cell object for the Header of a <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ChildBandCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBandCell"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ChildBandCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Cell"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ChildBandCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBandCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ChildBandCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBandCellControl"/>. 
            Note: this method is only meant for use by the Recycling framework. 
            </summary>
            <returns>A new instance of ChildLayoutCellCellControl.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ChildBandCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBandCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ChildBandCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBandCellControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ChildBandCellControl.AttachContent">
            <summary>
            Invoked when content is attached to the Control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ChildBandCellControl.EnsureContent">
            <summary>
            This will get called every time the control is measured, and allows the control to adjust it's content if necessary.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ChildBandCellControl.OnReleased(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBandCell"/> releases the <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBandCellControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ChildBandCellControl.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event occurs.
            </summary>
            <param propertyName="e">The data for the event</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateCell">
            <summary>
            The Cell object for the Content of a <see cref="T:Infragistics.Controls.Grids.ColumnLayoutTemplateColumn"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateCell"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateCell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateCellControl"/>. 
            Note: this method is only meant for use by the Recycling framework. 
            </summary>
            <returns>A new instance of ColumnLayoutTemplateCellControl.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateCellControl.AttachContent">
            <summary>
            Invoked when content is attached to the Control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateCellControl.ReleaseContent">
            <summary>
            Invoked before content is released from the control.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ConditionalFormattingUnboundCell">
            <summary>
            A cell that represents a <see cref="T:Infragistics.Controls.Grids.Cell"/> in a <see cref="T:Infragistics.Controls.Grids.UnboundColumn"/> when conditional formatting is turned on.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ConditionalFormattingUnboundCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.ConditionalFormattingUnboundCell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.RowBase"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Cell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Column"/> object that the <see cref="T:Infragistics.Controls.Grids.Cell"/> represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ConditionalFormattingUnboundCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.CellControl"/> when it's attached.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ConditionalFormattingUnboundCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.CellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Cell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.CellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ConditionalFormattingUnboundCell.CreateCellBindingConverter">
            <summary>
            Creates the <see cref="T:System.Windows.Data.IValueConverter"/> which will be attached to this <see cref="T:Infragistics.Controls.Grids.Cell"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ConditionalFormattingUnboundCell.EnsureCurrentState">
            <summary>
            Ensures that <see cref="T:Infragistics.Controls.Grids.Cell"/> is in the correct state.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ConditionalFormattingUnboundCell.ConditionalStyle">
            <summary>
            Get / set a <see cref="T:System.Windows.Style"/> that will override existing styles.  
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCell">
            <summary>
            An object that represents the particular expansion indicator area for a row.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCell"/> class.
            </summary>
            <param propertyName="row">The row that owns this particular cell.</param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn"/> that this cell represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCellControl"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCellControl.ExpansionIndicator">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCellControl.ExpansionIndicator"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCellControl"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCellControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCellControl"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCellControl.OnLoaded">
            <summary>
            Raised when a <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCellControl"/> is loaded. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCellControl.OnReleased(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.CellBase"/> releases the <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCellControl.EnsureContent">
            <summary>
            This will get called every time the control is measured, and allows the control to adjust it's content if necessary.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorFooterCell">
            <summary>
            A cell that represents the ExpansionIndicator of a <see cref="T:Infragistics.Controls.Grids.Primitives.FooterRow"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorFooterCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorFooterCell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.Primitives.FooterRow"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorFooterCell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn"/> object that the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorFooterCell"/> represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorFooterCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorFooterCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorFooterCell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorFooterCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorFooterCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorFooterCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorFooterCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorFooterCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorFooterCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCellControl"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorHeaderCell">
            <summary>
            A cell that represents the ExpansionIndicator of a <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderRow"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorHeaderCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorHeaderCell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderRow"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorHeaderCell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn"/> object that the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorHeaderCell"/> represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorHeaderCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorHeaderCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorHeaderCell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorHeaderCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorHeaderCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorHeaderCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorHeaderCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorHeaderCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorHeaderCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCellControl"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FilterRowCell">
            <summary>
            A cell that represents a <see cref="T:Infragistics.Controls.Grids.Cell"/> in a <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRow"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowCell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRow"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowCell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Column"/> object that the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowCell"/> represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterRowCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterRowCell.EditingSettings">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.EditingSettingsBaseOverride"/> object that controls the settings for this object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterRowCell.EnableCustomEditorBehaviors">
            <summary>
            Allows a Cell to disable Editor Behavior Support if they choose to.
            </summary>
            <remarks>
            See <see cref="P:Infragistics.Controls.Grids.CellBase.EnableCustomEditorBehaviors"/> for more information.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterRowCell.IsEditable">
            <summary>
            Gets whether a particular <see cref="T:Infragistics.Controls.Grids.Cell"/> can enter edit mode.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterRowCell.Value">
            <summary>
            Gets the the underlying value that the cell represents. 		
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowCell.EnsureCurrentState">
            <summary>
            Ensures that <see cref="T:Infragistics.Controls.Grids.Cell"/> is in the correct state.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowCell.CreateCellValueBinding(System.Boolean)">
            <summary>
            Creates the binding used by the CellValueObject for updating
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowCell.OnElementAttached(Infragistics.Controls.Grids.Primitives.CellControlBase)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> is attached to the <see cref="T:Infragistics.Controls.Grids.CellBase"/>
            </summary>
            <param propertyName="element">A <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowCell.OnElementReleased(Infragistics.Controls.Grids.Primitives.CellControlBase)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> is removed from the <see cref="T:Infragistics.Controls.Grids.CellBase"/>
            </summary>
            <param propertyName="element">A <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowCell.OnCellMouseDown(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when a cell is clicked.
            </summary>
            <returns>Whether or not the method was handled.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowCell.OnCellClick(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when a cell is clicked.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterRowCell.FilteringOperand">
            <summary>
            Gets / set the operand which will be used for filtering.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterRowCell.FilteringOperandResolved">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> which will be used for filtering, taking into account the settings of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterRowCell.FilterCellValue">
            <summary>
            Gets / sets the value which will be filtered on.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterRowCell.FilterCellValueResolved">
            <summary>
            Gets the value with will be filtered on, factoring in the <see cref="T:Infragistics.Controls.Grids.FilteringScope"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterRowCell.SilentUpdate">
            <summary>
            Gets / sets if the filters being built by modifing this object should call for a rebind of data.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FilterRowCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowCellControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowCellControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowCellControl"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowCellControl.ResolveBinding">
            <summary>
            In a derived class this method should be implemented to resolve the binding that should be used for a bound <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
            <remarks>This will be called during the ContentProvider ResolveBinding and is not to be called directly otherwise.</remarks>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowCellControl.ResolveEditorBinding">
            <summary>
            Creates a <see cref="T:System.Windows.Data.Binding"/> that can be applied to an editor.
            </summary>
            <remarks>This will be called during the ContentProvider ResolveBinding and is not to be called directly otherwise.</remarks>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowCellControl.ResolveEditorCellValue(System.Object)">
            <summary>
            Determines the value that will be used as the text for the editor control.
            </summary>
            <param propertyName="dataValue"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowCellControl.AddEditorToControl">
            <summary>
            Used during inline editing, sets up the cell control with the child editor needed to update this cell.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowCellControl.RemoveEditorFromControl">
            <summary>
            Used during inline editing, cleans up the cell control restoring it to display the data of the cell.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowCellControl.SupportsCommand(System.Windows.Input.ICommand)">
            <summary>
            Returns if the object will support a given command type.
            </summary>
            <param propertyName="command">The command to be validated.</param>
            <returns>True if the object recognizes the command as actionable against it.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowCellControl.GetParameter(Infragistics.Controls.CommandSource)">
            <summary>
            Returns the object that defines the parameters necessary to execute the command.
            </summary>
            <param propertyName="source">The CommandSource object which defines the command to be executed.</param>
            <returns>The object necessary for the command to complete.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowCellControl.EnsureContent">
            <summary>
            This will get called every time the control is measured, and allows the control to adjust it's content if necessary.
            </summary>		
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowCellControl.OnAttached(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.CellBase"/> is attached to the <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/>.
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.CellBase"/> that is being attached to the <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowCellControl.OnReleased(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowCell"/> releases the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowCellControl"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FilterRowExpansionIndicatorCell">
            <summary>
            An object that represents the particular expansion indicator area for a row.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowExpansionIndicatorCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowExpansionIndicatorCell"/> class.
            </summary>
            <param propertyName="row">The row that owns this particular cell.</param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn"/> that this cell represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterRowExpansionIndicatorCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowExpansionIndicatorCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterRowExpansionIndicatorCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowExpansionIndicatorCell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowExpansionIndicatorCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowExpansionIndicatorCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowExpansionIndicatorCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FilterRowExpansionIndicatorCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowExpansionIndicatorCellControl"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowExpansionIndicatorCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowExpansionIndicatorCellControl"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FilterRowSelectorCell">
            <summary>
            A cell that represents the add new row selector of a <see cref="T:Infragistics.Controls.Grids.RowBase"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowSelectorCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowSelectorCell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.RowBase"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowSelectorCell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Column"/> object that the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowSelectorCell"/> represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterRowSelectorCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowSelectorCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterRowSelectorCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowSelectorCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FilterRowSelectorCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowSelectorCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowSelectorCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowSelectorCellControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRowSelectorCellControl.EnsureContent">
            <summary>
            This will get called every time the control is measured, and allows the control to adjust it's content if necessary.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FixedBorderCell">
            <summary>
            A cell that represents the border seperating pinned columns and unpinned columns.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FixedBorderCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderCell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.RowBase"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderCell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Column"/> object that the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderCell"/> represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FixedBorderCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FixedBorderCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderCell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FixedBorderCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FixedBorderCell.EnsureCurrentState">
            <summary>
            Ensures that <see cref="T:Infragistics.Controls.Grids.CellBase"/> is in the correct state.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FixedBorderCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FixedBorderCellControl.#cctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderCellControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FixedBorderCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderCellControl"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FixedBorderFooterCell">
            <summary>
            A cell that represents the border between pinned and unpinned <see cref="T:Infragistics.Controls.Grids.Column"/> objects of a <see cref="T:Infragistics.Controls.Grids.Primitives.FooterRow"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FixedBorderFooterCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderFooterCell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.Primitives.FooterRow"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderFooterCell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderColumn"/> object that the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderFooterCell"/> represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FixedBorderFooterCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FixedBorderFooterCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderFooterCell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FixedBorderFooterCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderFooterCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderFooterCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderFooterCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FixedBorderFooterCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FixedBorderFooterCellControl.#cctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderFooterCellControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FixedBorderFooterCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderFooterCellControl"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FixedBorderHeaderCell">
            <summary>
            A cell that represents the border between pinned an unpinned <see cref="T:Infragistics.Controls.Grids.Column"/> objects of a <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderRow"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FixedBorderHeaderCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderHeaderCell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderRow"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderHeaderCell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderColumn"/> object that the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderHeaderCell"/> represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FixedBorderHeaderCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FixedBorderHeaderCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderHeaderCell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FixedBorderHeaderCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderHeaderCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderHeaderCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderHeaderCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FixedBorderHeaderCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FixedBorderHeaderCellControl.#cctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderHeaderCellControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FixedBorderHeaderCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderCellControl"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FooterCell">
            <summary>
            A cell that represents a particular column in the footer of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FooterCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.Primitives.FooterRow"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Column"/> object that the <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCell"/> represents.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FooterCell.EnsureCurrentState">
            <summary>
            Ensures that <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCell"/> is in the correct state.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FooterCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FooterCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FooterCell.CreateRecyclingIdentifier">
            <summary>
            Creates a recycling identifier with which can be used for identifying a recyclable element.
            </summary>
            <returns>The recycling identifier to be used for this element.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FooterCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FooterCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FooterCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCellControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FooterCellControl.AttachContent">
            <summary>
            Invoked when content is attached to the Control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FooterCellControl.EnsureContent">
            <summary>
            This will get called every time the control is measured, and allows the control to adjust it's content if necessary.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FooterCellControl.OnReleased(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCell"/> releases the <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCellControl"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCell">
            <summary>
            An object that represents data of a <see cref="T:Infragistics.Controls.Grids.Column"/> that the underlying data has been grouped by.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Crates a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCell"/> object.
            </summary>
            <param propertyName="row"></param>
            <param propertyName="column"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByAreaCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl"/>. 
            Note: this method is only meant for use by the Recycling framework. 
            </summary>
            <returns>A new instance of GroupByAreaCellControl.</returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByAreaCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl.#cctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl.EmptyContentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl.EmptyContent"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl.EmptyContent">
            <summary>
            Gets/sets the content that will be displayed when there are no UIElements in the panel.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl.IsExpandedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl.IsExpanded"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl.IsExpanded">
            <summary>
            Gets/Sets whether the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl"/> is expanded or collapsed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl"/> when a new template is applied. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl.OnAttached(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCell"/> is attached to the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl"/>.
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCell"/> that is being attached to the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl"/></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl.EnsureContent">
            <summary>
            Ensures that the underlying panel is populated with all <see cref="T:Infragistics.Controls.Grids.Column"/> objects that the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            is grouped by.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl.SupportsCommand(System.Windows.Input.ICommand)">
            <summary>
            Returns if the object will support a given command type.
            </summary>
            <param propertyName="command">The command to be validated.</param>
            <returns>True if the object recognizes the command as actionable against it.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl.GetParameter(Infragistics.Controls.CommandSource)">
            <summary>
            Returns the object that defines the parameters necessary to execute the command.
            </summary>
            <param propertyName="source">The CommandSource object which defines the command to be executed.</param>
            <returns>The object necessary for the command to complete.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupByCell">
            <summary>
            The Cell object for the Header of a Grouped <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByCell"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByCell"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByCell.NormalState">
            <summary>
            Determines the string that should be used for the "Normal" Visual State of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByCellControl"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByCell.ResolveColumn">
            <summary>
            Resolves the underlying <see cref="T:Infragistics.Controls.Grids.Column"/> object that this <see cref="T:Infragistics.Controls.Grids.Cell"/> represents
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByCellControl"/>. 
            Note: this method is only meant for use by the Recycling framework. 
            </summary>
            <returns>A new instance of GroupByCellControl.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupByCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByCellControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByCellControl.EnsureContent">
            <summary>
            This will get called every time the control is measured, and allows the control to adjust it's content if necessary.
            </summary>		
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByCellControl.AttachContent">
            <summary>
            Invoked when content is attached to the Control.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByCellControl.ContentProvider">
            <summary>
            Resolves the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase"/> for this <see cref="T:Infragistics.Controls.Grids.CellControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByCellControl.ResolveBinding">
            <summary>
            Builds the binding that will be used for a <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByCell"/>
            </summary>
            <returns>If a binding cannot be created, null will be returned.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByCellControl.ReleaseContent">
            <summary>
            Invoked before content is released from the control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByCellControl.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event occurs.
            </summary>
            <param propertyName="e">The data for the event</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupByColumnLayoutHeaderCell">
            <summary>
            An object that represents a <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> in the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaPanel"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByColumnLayoutHeaderCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByColumnLayoutHeaderCell"/> object.
            </summary>
            <param propertyName="row"></param>
            <param propertyName="column"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByColumnLayoutHeaderCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByColumnLayoutHeaderCell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByColumnLayoutHeaderCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByColumnLayoutHeaderCellControl"/>. 
            Note: this method is only meant for use by the Recycling framework. 
            </summary>
            <returns>A new instance of GroupByColumnLayoutHeaderCellControl.</returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByColumnLayoutHeaderCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByColumnLayoutHeaderCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupByColumnLayoutHeaderCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByColumnLayoutHeaderCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByColumnLayoutHeaderCellControl.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByColumnLayoutHeaderCellControl"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByColumnLayoutHeaderCellControl.AttachContent">
            <summary>
            Invoked when content is attached to the Control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByColumnLayoutHeaderCellControl.OnMouseLeftButtonDownColumnMoving(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event occurs.
            </summary>
            <param propertyName="e">The data for the event</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupByHeaderCell">
            <summary>
            An object that represents a <see cref="T:Infragistics.Controls.Grids.Column"/> in the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaPanel"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByHeaderCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByHeaderCell"/> object.
            </summary>
            <param propertyName="row"></param>
            <param propertyName="column"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByHeaderCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByHeaderCell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByHeaderCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl"/>. 
            Note: this method is only meant for use by the Recycling framework. 
            </summary>
            <returns>A new instance of GroupByHeaderCellControl.</returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByHeaderCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByHeaderCell.ResolveColumn">
            <summary>
            Resolves the underlying <see cref="T:Infragistics.Controls.Grids.Column"/> object that this <see cref="T:Infragistics.Controls.Grids.Cell"/> represents
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByHeaderCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl"/> object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl.IsFirst">
            <summary>
            Gets/Sets whether this <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl"/> is the first <see cref="T:Infragistics.Controls.Grids.Column"/> in its grouping.
            </summary>
            <remarks>
            Note: this is entirely for styling purposes
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl.IsLast">
            <summary>
            Gets/Sets whether this <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl"/> is the last <see cref="T:Infragistics.Controls.Grids.Column"/> in it's grouping.
            </summary>
            <remarks>
            Note: this is entirely for styling purposes
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl.UpdateState">
            <summary>
            Has the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl"/> validate it's current state.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the MouseEnter event is fired.
            </summary>
            <param propertyName="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the MouseLeave event is fired.
            </summary>
            <param propertyName="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl.OnLoaded">
            <summary>
            Raised when the <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> is Loaded. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl.OnMouseLeftButtonUpColumnMoving(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event occurs.
            </summary>
            <param propertyName="e">The data for the event</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl.ResolveDropHeader(System.Windows.Point,System.Windows.Rect)">
            <summary>
            Looks for a <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> under the current mouse position.
            </summary>
            <param propertyName="rootPoint"></param>
            <param propertyName="draggingElementBounds"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl.ReactToMouseOverDroppableHeader(System.Windows.Input.MouseEventArgs,System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Allows the GroupByHeader to react to other GroupByHeaders in it's Panel.
            </summary>
            <param propertyName="e"></param>
            <param propertyName="dropHeaderBounds"></param>
            <param propertyName="currentHeaderBounds"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl.ResolveColumn">
            <summary>
            Resolves the underlying <see cref="T:Infragistics.Controls.Grids.Column"/> that should be references when checking properties such as 
            IsMoveable, IsGroupable, etc...
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl.GenerateDragHeader">
            <summary>
            Generates a new <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCellControl"/> that will be dragged around for moving operations.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl"/> when a new template is applied. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl.MarkColumnAsMoving">
            <summary>
            Allows the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCellControl"/> to react to apply settings regarding marking the column has moving.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl.Indicator">
            <summary>
             Gets the drop indciator <see cref="T:System.Windows.Controls.Primitives.Popup"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl.ValidateWidthInArrange">
            <summary>
            Gets whether the Control should validate it's width in ArrangeOverride. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl.EnsureContent">
            <summary>
            This will get called every time the control is measured, and allows the control to adjust it's content if necessary.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupCell">
            <summary>
            A cell that display children cells stacked horizontally based on the children columns of the <see cref="T:Infragistics.Controls.Grids.GroupColumn"/> it represents.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupCell"/> class.
            </summary>
            <param name="row"></param>
            <param name="column"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.GroupCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.GroupCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupCell.EnsureCurrentState">
            <summary>
            Ensures that <see cref="T:Infragistics.Controls.Grids.Primitives.GroupCell"/> is in the correct state.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupCellControl">
            <summary>
            The visual representation of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupCell" />
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupCellControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupCellControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupCellControl"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupCellControl.ManuallyInvokeMeasure(System.Windows.Size)">
            <summary>
            Invoked when a CellControl's measure was called, but its MeasureOverride was not invoked. 
            This method should be overriden on a derived class, if it's neccessary to take some extra steps to ensure Measure has been called.
            </summary>
            <param name="sizeToBeMeasured"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupCellControl.ShowResizingArrow">
            <summary>
            Gets if a resizing arrow should be shown.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupCellControl.OnReleased(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupCell" /> releases the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupCellControl" />.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupDisplayCell">
            <summary>
            A cell that represents a <see cref="T:Infragistics.Controls.Grids.Cell"/> in a <see cref="T:Infragistics.Controls.Grids.GroupDisplayColumn"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupDisplayCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowCell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.Row"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupDisplayCell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Column"/> object that the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupDisplayCell"/> represents.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupDisplayCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.GroupDisplayCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupDisplayCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.GroupDisplayCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupDisplayCell.OnCellDoubleClick">
            <summary>
            Invoked when a cell is double clicked.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupDisplayCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupDisplayCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupDisplayCellControl.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupDisplayCellControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupDisplayCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupDisplayCellControl"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.GroupDisplayCellControl.InnerControlMarginProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.GroupDisplayCellControl.InnerControlMargin"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupDisplayCellControl.InnerControlMargin">
            <summary>
            This control is designed with a border in center so lower groups can be denoted with a slight indentation.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupDisplayCellControl.EnsureCurrentState">
            <summary>
            Ensures that <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> is in the correct state.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupDisplayCellControl.ArrangeOverride(System.Windows.Size)">
            <summary>
            Validates the Arranging of the cell, and makes sure that the width it will arrange at, matches the column's ActualWidth
            </summary>
            <param name="finalSize"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupFooterCell">
            <summary>
            A Footer cell that display children cells stacked horizontally based on the children columns of the <see cref="T:Infragistics.Controls.Grids.GroupColumn"/> it represents.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupFooterCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupFooterCell"/> class.
            </summary>
            <param name="row"></param>
            <param name="column"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupFooterCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.GroupFooterCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupFooterCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.GroupFooterCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupFooterCell.EnsureCurrentState">
            <summary>
            Ensures that <see cref="T:Infragistics.Controls.Grids.Primitives.GroupFooterCell"/> is in the correct state.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupFooterCellControl">
            <summary>
            The visual representation of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupFooterCell"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupFooterCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupFooterCellControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupFooterCellControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupFooterCellControl"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupFooterCellControl.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the Content of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupFooterCellControl"/>
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupFooterCellControl.ManuallyInvokeMeasure(System.Windows.Size)">
            <summary>
            Invoked when a CellControl's measure was called, but its MeasureOverride was not invoked. 
            This method should be overriden on a derived class, if it's neccessary to take some extra steps to ensure Measure has been called.
            </summary>
            <param name="sizeToBeMeasured"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupFooterCellControl.OnReleased(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupFooterCell" /> releases the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupFooterCellControl" />.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupHeaderCell">
            <summary>
            A header cell that display children cells stacked horizontally based on the children columns of the <see cref="T:Infragistics.Controls.Grids.GroupColumn"/> it represents.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupHeaderCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupHeaderCell"/> class.
            </summary>
            <param name="row"></param>
            <param name="column"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupHeaderCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.GroupHeaderCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupHeaderCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.GroupHeaderCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupHeaderCell.EnsureCurrentState">
            <summary>
            Ensures that <see cref="T:Infragistics.Controls.Grids.Primitives.GroupHeaderCell"/> is in the correct state.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupHeaderCellControl">
            <summary>
            The visual representation of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupHeaderCell"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupHeaderCellControl.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupHeaderCellControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupHeaderCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupHeaderCellControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupHeaderCellControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupHeaderCellControl"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupHeaderCellControl.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the Content of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupHeaderCellControl"/>
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupHeaderCellControl.ManuallyInvokeMeasure(System.Windows.Size)">
            <summary>
            Invoked when a CellControl's measure was called, but its MeasureOverride was not invoked. 
            This method should be overriden on a derived class, if it's neccessary to take some extra steps to ensure Measure has been called.
            </summary>
            <param name="sizeToBeMeasured"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupHeaderCellControl.OnReleased(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupHeaderCell" /> releases the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupHeaderCellControl" />.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.HeaderCell">
            <summary>
            A cell that represents a particular column in the header of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>    
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderRow"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> object that the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCell"/> represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.HeaderCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.HeaderCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Cell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCell.CreateRecyclingIdentifier">
            <summary>
            Creates a recycling identifier with which can be used for identifying a recyclable element.
            </summary>
            <returns>The recycling identifier to be used for this element.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCell.EnsureCurrentState">
            <summary>
            Ensures that <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCell"/> is in the correct state.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCell.OnCellDoubleClick">
            <summary>
            Invoked when a cell is double clicked.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.HeaderCell.ColumnsHiddenToLeft">
            <summary>
            Gets a collection of <see cref="T:Infragistics.Controls.Grids.Column"/> objects that are currently hidden to the left, of this <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.HeaderCell.ColumnsHiddenToRight">
            <summary>
            Gets a collection of <see cref="T:Infragistics.Controls.Grids.Column"/> objects that are currently hidden to the right, of this <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
            <remarks>
            This collection is only populates if this particular column is the last visible column of the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.HiddenColumnsCollection">
            <summary>
            For Internal use.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.HeaderCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCellControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCellControl"/> class.
            </summary>        
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.AttachContent">
            <summary>
            Invoked when content is attached to the Control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.EnsureContent">
            <summary>
            This will get called every time the control is measured, and allows the control to adjust it's content if necessary.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.OnReleased(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCell"/> releases the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCellControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseEnter"/> event occurs.
            </summary>
            <param propertyName="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.OnMouseLeftButtonDownColumnMoving(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called to process the control for Column Moving.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.OnMouseMoveColumnMoving(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called to process the control for Column Moving.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.OnMouseLeftButtonUpColumnMoving(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called to process the control for Column Moving.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.KeyDown"/> event occurs.
            </summary>
            <param propertyName="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the LostMouseCapture event is raised.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.DetermineCursorHelper(Infragistics.Controls.Grids.Column,System.Windows.Rect,System.Double)">
            <summary>
            Determines if the cursor should be changed for column resizing.
            </summary>
            <param name="column"></param>
            <param name="bounds"></param>
            <param name="xPosition"></param>
            <returns></returns>		
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.HeaderCellControl.IsDragging">
            <summary>
            Gets whether or not the <see cref="T:Infragistics.Controls.Grids.Column"/> is curently being dragged.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.HeaderCellControl.MovingHeader">
            <summary>
            Gets the visual indicator of a <see cref="T:Infragistics.Controls.Grids.Column"/> being moved.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.HeaderCellControl.Indicator">
            <summary>
             Gets the drop indciator <see cref="T:System.Windows.Controls.Primitives.Popup"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.HeaderCellControl.AvailableSummariesOperands">
            <summary>
            Gets the <see cref="T:Infragistics.SummaryOperandCollection"/> which is available from the <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.HeaderCellControl.DropHeader">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> that we're currently dragging over.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.SupportsCommand(System.Windows.Input.ICommand)">
            <summary>
            Returns if the object will support a given command type.
            </summary>
            <param propertyName="command">The command to be validated.</param>
            <returns>True if the object recognizes the command as actionable against it.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.GetParameter(Infragistics.Controls.CommandSource)">
            <summary>
            Returns the object that defines the parameters necessary to execute the command.
            </summary>
            <param propertyName="source">The CommandSource object which defines the command to be executed.</param>
            <returns>The object necessary for the command to complete.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.InitializeDrag(System.Windows.Input.MouseEventArgs)">
            <summary>
            Setups up everything that needs to occur to beging a Drag operation in the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCellControl"/>
            </summary>
            <param propertyName="e"></param>
            <returns>Returns false if the drag operation couldn'type be initialized.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.CancelDrag(System.Boolean,System.Boolean)">
            <summary>
            Terminates the DragOperation, and resets the columns back to their original order.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.EndDrag">
            <summary>
            Cleans up after the Drag operation has finished. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.MoveColumn">
            <summary>
            Performs the actual moving of the columns.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.ResolveColumn">
            <summary>
            Resolves the underlying <see cref="T:Infragistics.Controls.Grids.Column"/> that should be references when checking properties such as 
            IsMoveable, IsGroupable, etc...
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.GenerateDragHeader">
            <summary>
            Generates a new <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCellControl"/> that will be dragged around for moving operations.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.ResolveDropHeader(System.Windows.Point,System.Windows.Rect)">
            <summary>
            Looks for a <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> under the current mouse position.
            </summary>
            <param propertyName="rootPoint"></param>
            <param propertyName="draggingElementBounds"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.ReactToMouseOverDroppableCellControl(System.Windows.Input.MouseEventArgs)">
            <summary>
            Allows the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCellControl"/> to determine how to react when the mouse is over a <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/>
            </summary>
            <param propertyName="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.ReactToMouseOverDroppableGroupByHeader(System.Windows.Input.MouseEventArgs,System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Allows the control to perform actions such as displaying an indicator, when the mouse is over a <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl"/>
            </summary>
            <param propertyName="e"></param>
            <param propertyName="dropHeaderBounds"></param>
            <param propertyName="currentHeaderBounds"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.ReactToMouseOverDroppableHeader(System.Windows.Input.MouseEventArgs,System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Allows the control, to perform the appropriate function, when the mouse is over a droppable area.
            </summary>
            <param propertyName="e"></param>
            <param propertyName="dropHeaderBounds"></param>
            <param propertyName="currentHeaderBounds"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.GetBoundsOfElement(System.Windows.FrameworkElement,System.Windows.UIElement)">
            <summary>
            Returns the bounding rectangle of a element.
            </summary>
            <param propertyName="element"></param>
            <param propertyName="relativeElement"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.GetCellControlFromPoint(System.Windows.Point,System.Type,System.Boolean)">
            <summary>
            Given a point, and a Type, the visual tree walks that point looking for any control, whose type matches the specified type.
            </summary>
            <param propertyName="point"></param>
            <param propertyName="type"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderCellControl.MarkColumnAsMoving">
            <summary>
            Allows the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCellControl"/> to react to apply settings regarding marking the column has moving.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.MergedSummaryCell">
            <summary>
            A cell that represents a <see cref="T:Infragistics.Controls.Grids.Cell"/> in a <see cref="T:Infragistics.Controls.Grids.Primitives.MergedSummaryRow"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.MergedSummaryCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.MergedSummaryCell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.Primitives.MergedSummaryRow"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.MergedSummaryCell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Column"/> object that the <see cref="T:Infragistics.Controls.Grids.Primitives.MergedSummaryCell"/> represents.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.MergedSummaryCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.MergedSummaryCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.MergedSummaryCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.MergedSummaryCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.MergedSummaryCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.MergedSummaryCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.MergedSummaryCell.SupportsActivation">
            <summary>
            Gets whether this particular <see cref="T:Infragistics.Controls.Grids.CellBase"/> can be made Active
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.MergedSummaryCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.MergedSummaryCellControl"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.MergedSummaryCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.MergedSummaryCellControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.MergedSummaryCellControl.FillPanelWithSummaryResults(System.Windows.Controls.Panel)">
            <summary>
            Fills the specified panel with all of the Summaries for a particular MergeColumnInfo
            </summary>
            <param name="panel"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.PagerCell">
            <summary>
            A cell that represents the pager in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerCell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.Primitives.PagerRow"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerCell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Column"/> object that the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerCell"/> represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.PagerCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerCell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.PagerCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.PagerCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerCell.EnsureCurrentState">
            <summary>
            Ensures that <see cref="T:Infragistics.Controls.Grids.Primitives.PagerCell"/> is in the correct state.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.PagerCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.PagerCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerCellControl.#cctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerCellControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerCellControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerCellControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerCellControl"/> when a new template is applied. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerCellControl.AttachContent">
            <summary>
            Invoked when content is attached to the Control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerCellControl.PopulatePagerControlValues">
            <summary>
            Sets values on the PagerControl from the Manager
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerCellControl.OnAttached(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.CellBase"/> is attached to the <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/>.
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.CellBase"/> that is being attached to the <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/></param>        
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerCellControl.OnReleased(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.CellBase"/> releases the <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerCellControl.EnsureContent">
            <summary>
            This will get called every time the control is measured, and allows the control to adjust it's content if necessary.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerCellControl.Infragistics#ICommandTarget#SupportsCommand(System.Windows.Input.ICommand)">
            <summary>
            Returns if the object will support a given command type.
            </summary>
            <param propertyName="command">The command to be validated.</param>
            <returns>True if the object recognizes the command as actionable against it.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerCellControl.Infragistics#ICommandTarget#GetParameter(Infragistics.Controls.CommandSource)">
            <summary>
            Returns the object that defines the parameters necessary to execute the command.
            </summary>
            <param propertyName="source">The CommandSource object which defines the command to be executed.</param>
            <returns>The object necessary for the command to complete.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerCellControl.SupportsCommand(System.Windows.Input.ICommand)">
            <summary>
            Determines if the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerCellControl"/> supports the inputted <see cref="T:System.Windows.Input.ICommand"/> object.
            </summary>
            <param propertyName="command">The <see cref="T:System.Windows.Input.ICommand"/> command that may be run against the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerCellControl"/>.</param>
            <returns>True if the command can be executed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerCellControl.GetParameter(Infragistics.Controls.CommandSource)">
            <summary>
            Returns the object that defines the parameters necessary to execute the command.
            </summary>
            <param propertyName="source">The CommandSource object which defines the command to be executed.</param>
            <returns>The object necessary for the command to complete.</returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.PagerCellControl.PagerControl">
            <summary>
            Gets the underlying PagerControlBase object
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.RowSelectorCell">
            <summary>
            A cell that represents the row selector of a <see cref="T:Infragistics.Controls.Grids.RowBase"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.RowBase"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Column"/> object that the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCell"/> represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowSelectorCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowSelectorCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorCell.EnsureCurrentState">
            <summary>
            Ensures that <see cref="T:Infragistics.Controls.Grids.CellBase"/> is in the correct state.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorCell.OnCellMouseDown(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when a cell is clicked.
            </summary>
            <returns>Whether or not the method was handled.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorCell.OnCellDragging(Infragistics.Controls.Grids.DragSelectType)">
            <summary>
            Invoked when dragging the mouse over a cell. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorCell.OnCellClick(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when a cell is clicked.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.RowSelectorCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCellControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorCellControl.AttachContent">
            <summary>
            Invoked when content is attached to the Control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorCellControl.ReleaseContent">
            <summary>
            Invoked before content is released from the control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorCellControl.EnsureContent">
            <summary>
            This will get called every time the control is measured, and allows the control to adjust it's content if necessary.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.RowSelectorFooterCell">
            <summary>
            A cell that represents the row selector of a <see cref="T:Infragistics.Controls.Grids.Primitives.FooterRow"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorFooterCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorFooterCell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.Primitives.FooterRow"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorFooterCell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorColumn"/> object that the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorFooterCell"/> represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowSelectorFooterCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowSelectorFooterCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorFooterCell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorFooterCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorFooterCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorFooterCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorFooterCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorFooterCell.OnCellClick(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when a cell is clicked.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.RowSelectorFooterCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorFooterCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCellControl"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.RowSelectorHeaderCell">
            <summary>
            A cell that represents the row selector of a <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderRow"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorHeaderCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorHeaderCell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderRow"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorHeaderCell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorColumn"/> object that the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorHeaderCell"/> represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowSelectorHeaderCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowSelectorHeaderCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorHeaderCell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorHeaderCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorHeaderCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorHeaderCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorHeaderCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorHeaderCell.OnCellClick(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when a cell is clicked.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.RowSelectorHeaderCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorHeaderCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCellControl"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.SingleCellBaseCollection`1">
            <summary>
            A Collection that will only ever contain a single <see cref="T:Infragistics.Controls.Grids.CellBase"/>.
            </summary>
            <remarks>
            This collection is used on <see cref="T:Infragistics.Controls.Grids.Row"/> objects such as the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerRow"/> and <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SingleCellBaseCollection`1.#ctor(Infragistics.Controls.Grids.Column,Infragistics.Controls.Grids.ColumnBaseCollection,Infragistics.Controls.Grids.RowBase)">
            <summary>
            Initializes a new instance of the SingleCellCollectionBase class.
            </summary>
            <param propertyName="owningColumn">The column that owns the single cell in this collection.</param>
            <param propertyName="columns">The <see cref="T:Infragistics.Controls.Grids.ColumnBaseCollection"/> associated with the <see cref="T:Infragistics.Controls.Grids.Primitives.CellBaseCollection"/></param>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.RowBase"/> that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.CellBaseCollection"/></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SingleCellBaseCollection`1.GetCount">
            <summary>
            Returns the total number of <see cref="T:Infragistics.Controls.Grids.CellBase"/>s in the <see cref="T:Infragistics.Controls.Grids.Primitives.CellBaseCollection"/>
            </summary>
            <returns>The total number of cells.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SingleCellBaseCollection`1.IndexOf(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Gets the index of the specified <see cref="T:Infragistics.Controls.Grids.CellBase"/>.
            </summary>
            <param propertyName="item"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SingleCellBaseCollection`1.GetItem(System.Int32)">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Grids.CellBase"/>  item at the index given.  
            </summary>
            <param propertyName="index">The index of the cell to be retrieved</param>
            <returns>The CellBase object at the given index.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.SummaryRowCell">
            <summary>
            A cell that represents a <see cref="T:Infragistics.Controls.Grids.Cell"/> in a <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRow"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummaryRowCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowCell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRow"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowCell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Column"/> object that the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowCell"/> represents.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummaryRowCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.SummaryRowCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.SummaryRowCell.IsEditable">
            <summary>
            Gets whether a particular <see cref="T:Infragistics.Controls.Grids.Cell"/> can enter edit mode.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.SummaryRowCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummaryRowCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowCellControl"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.SummaryRowCellControl.SummaryDisplayTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.SummaryRowCellControl.SummaryDisplayTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.SummaryRowCellControl.SummaryDisplayTemplate">
            <summary>
            Gets / sets the <see cref="T:System.Windows.DataTemplate"/> that will be used to display the items in the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowCellControl"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummaryRowCellControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowCellControl"/> when a new template is applied. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummaryRowCellControl.EnsureContent">
            <summary>
            This will get called every time the control is measured, and allows the control to adjust it's content if necessary.
            </summary>	
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummaryRowCellControl.ReleaseContent">
            <summary>
            Invoked before content is released from the control.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.SummaryRowCellControl.ToolTipContent">
            <summary>
             Allows a <see cref="T:Infragistics.Controls.Grids.CellControl"/> to provide different content for it's Tooltip.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummaryRowCellControl.FillPanelWithSummaryResults(System.Windows.Controls.Panel)">
            <summary>
            Fills the specified panel with all of the Summaries for a particular ColumnLayout
            </summary>
            <param name="panel"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.SummaryRowExpansionIndicatorCell">
            <summary>
            An object that represents the particular expansion indicator area for a row.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummaryRowExpansionIndicatorCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowExpansionIndicatorCell"/> class.
            </summary>
            <param propertyName="row">The row that owns this particular cell.</param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn"/> that this cell represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.SummaryRowExpansionIndicatorCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowExpansionIndicatorCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.SummaryRowExpansionIndicatorCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowExpansionIndicatorCell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummaryRowExpansionIndicatorCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowExpansionIndicatorCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowExpansionIndicatorCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.SummaryRowExpansionIndicatorCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowExpansionIndicatorCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummaryRowExpansionIndicatorCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowExpansionIndicatorCellControl"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.SummaryRowSelectorCell">
            <summary>
            A cell that represents the add new row selector of a <see cref="T:Infragistics.Controls.Grids.RowBase"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummaryRowSelectorCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowSelectorCell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.RowBase"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowSelectorCell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Column"/> object that the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowSelectorCell"/> represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.SummaryRowSelectorCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowCellControl"/> when it's attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.SummaryRowSelectorCell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummaryRowSelectorCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.SummaryRowSelectorCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowSelectorCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummaryRowSelectorCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowSelectorCellControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummaryRowSelectorCellControl.EnsureContent">
            <summary>
            This will get called every time the control is measured, and allows the control to adjust it's content if necessary.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.UnboundCell">
            <summary>
            A cell that represents a <see cref="T:Infragistics.Controls.Grids.Cell"/> in a <see cref="T:Infragistics.Controls.Grids.UnboundColumn"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.UnboundCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.UnboundCell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.RowBase"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Cell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Column"/> object that the <see cref="T:Infragistics.Controls.Grids.Cell"/> represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.UnboundCell.Value">
            <summary>
            Gets the the underlying value that the cell represents. 
            Note: in order to retrieve the cell's value we use a binding since we don't know about the underlying object. 
            The most performant way to retrieve the cell's value is to grab the row's Data (this.Cell.Row.Data), 
            cast it as your object and grab the actual value manually. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.UnboundCell.CreateCellBindingConverter">
            <summary>
            Creates the <see cref="T:System.Windows.Data.IValueConverter"/> which will be attached to this <see cref="T:Infragistics.Controls.Grids.Cell"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.UnboundCell.ShouldClearDataContext">
            <summary>
            Gets whether the control attached to the cell should reset it DataContext when a new Cell is attached to it.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.UnboundCell.Refresh">
            <summary>
            Refreshes the content of the cell.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.CheckBoxColumnContentProvider">
            <summary>
            An object that provides content to <see cref="T:Infragistics.Controls.Grids.Cell"/> objects that belong to a <see cref="T:Infragistics.Controls.Grids.CheckBoxColumn"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CheckBoxColumnContentProvider.#ctor">
            <summary>
            Instantiates a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.CheckBoxColumnContentProvider"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CheckBoxColumnContentProvider.ResolveDisplayElement(Infragistics.Controls.Grids.Cell,System.Windows.Data.Binding)">
            <summary>
            Sets up the element that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/>, when the cell is not in edit mode. 
            </summary>
            <param propertyName="cell">The cell that the display element will be displayed in.</param>
            <param propertyName="cellBinding">A <see cref="T:System.Windows.Data.Binding"/> object that can be applied to the cell. Note: this binding can be null.</param>
            <returns>The element that should be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CheckBoxColumnContentProvider.ApplyBindingToDisplayElement(Infragistics.Controls.Grids.Cell,System.Windows.Data.Binding)">
            <summary>
            This is where a ColumnContentProvider should apply the Binding to their Display element.
            </summary>
            <param name="cell"></param>
            <param name="binding"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CheckBoxColumnContentProvider.AdjustDisplayElement(Infragistics.Controls.Grids.Cell)">
            <summary>
            Called during EnsureContent to allow the provider a chance to modify its display based on the current conditions.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CheckBoxColumnContentProvider.ResolveEditorControl(Infragistics.Controls.Grids.Cell,System.Object,System.Double,System.Double,System.Windows.Data.Binding)">
            <summary>
            Sets up the edtior control that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/> when the the cell is in edit mode.
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> entering edit mode.</param>
            <param propertyName="editorValue">The value that should be put in the editor.</param>
            <param propertyName="availableWidth">The amount of horizontal space available.</param>
            <param propertyName="availableHeight">The amound of vertical space available.</param>
            <param propertyName="editorBinding">Provides a <see cref="T:System.Windows.Data.Binding"/> that can be used for setting up the editor.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CheckBoxColumnContentProvider.ResolveValueFromEditor(Infragistics.Controls.Grids.Cell)">
            <summary>
            Resolves the value of the editor control, so that the cell's underlying data can be updated. 
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> that the editor id being displayed in.</param>
            <returns>The value that should be displayed in the cell.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.CheckBoxColumnContentProvider.FocusEditor">
            <summary>
            Calls the ContentProvider to Attempt to Focus the underlying editor control
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ChildBandColumn">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> that represents a ColumnLayout header for a particular ColumnLayout.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ChildBandColumn.WidthResolved">
            <summary>
            The width of a <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBandColumn"/> is always *. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ChildBandColumn.GenerateCell(Infragistics.Controls.Grids.RowBase)">
            <summary>
            If given a <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/> a <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBandCell"/> will be returned.
            </summary>
            <param propertyName="row"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ChildBandColumn.GenerateContentProvider">
            <summary>
            This column does not generate any conent.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase">
            <summary>
            A base class used to provide content to a <see cref="T:Infragistics.Controls.Grids.Cell"/> object for a particular <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.ResolveDisplayElement(Infragistics.Controls.Grids.Cell,System.Windows.Data.Binding)">
            <summary>
            Sets up the element that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/>, when the cell is not in edit mode. 
            </summary>
            <param propertyName="cell">The cell that the display element will be displayed in.</param>
            <param propertyName="cellBinding">A <see cref="T:System.Windows.Data.Binding"/> object that can be applied to the cell. Note: this binding can be null.</param>
            <returns>The element that should be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.AdjustDisplayElement(Infragistics.Controls.Grids.Cell)">
            <summary>
            Called during EnsureContent to allow the provider a chance to modify its display based on the current conditions.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.ResolveValueFromEditor(Infragistics.Controls.Grids.Cell)">
            <summary>
            Resolves the value of the editor control, so that the cell's underlying data can be updated. 
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> that the editor id being displayed in.</param>
            <returns>The value that should be displayed in the cell.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.GenerateGroupByCellContent(Infragistics.Controls.Grids.Primitives.GroupByCell,System.Windows.Data.Binding)">
            <summary>
            Used when rendering a GroupByRow, allows for the column content provider to override default behavior and render out a representation of the data.
            </summary>
            <param name="cell"></param>
            <param name="cellBinding"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.EditorLoaded">
            <summary>
            Invoked when the editor's loaded event is raised. 
            </summary>
            <remarks>This method should be used to do such things as selecting the text of a TextBox, or causing a specific element in the editor to focus.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.ApplyFormatting(System.Object,Infragistics.Controls.Grids.Column,System.Globalization.CultureInfo)">
            <summary>
            Allows the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase"/> to update the value being set for the display element.
            </summary>
            <param propertyName="value">The original data value from the underlying data.</param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Column"/> whose properties should be used to determine the formatting.</param>
            <param propertyName="culture"></param>
            <returns>The value that should be displayed in the <see cref="T:Infragistics.Controls.Grids.Cell"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.ResolveEditor(Infragistics.Controls.Grids.Cell,System.Action{System.Object},System.Object,System.Double,System.Double,System.Windows.Data.Binding)">
            <summary>
            Sets up the edtior control that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/> when the the cell is in edit mode.
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> entering edit mode.</param>
            <param propertyName="valueChangedFunction">The function that should be called to notify when a value in the editor has changed.</param>
            <param propertyName="editorValue">The value that should be put in the editor.</param>
            <param propertyName="availableWidth">The amount of horizontal space available.</param>
            <param propertyName="availableHeight">The amound of vertical space available.</param>
            <param propertyName="editorBinding">Provides a <see cref="T:System.Windows.Data.Binding"/> that can be used for setting up the editor.</param>
            <returns></returns>	
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.EditorRemoved">
            <summary>
            Raised when the editor is removed from the cell.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.ResetContent">
            <summary>
            Raised when the cell is recycling to allow the provider a chance to clear any internal members.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.NotifyEditorValueChanged(System.Object)">
            <summary>
            Used to notify the owning cell when an editor's value has changed.
            </summary>
            <param propertyName="value"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.ResolveEditorControl(Infragistics.Controls.Grids.Cell,System.Object,System.Double,System.Double,System.Windows.Data.Binding)">
            <summary>
            Sets up the edtior control that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/> when the the cell is in edit mode.
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> entering edit mode.</param>
            <param propertyName="editorValue">The value that should be put in the editor.</param>
            <param propertyName="availableWidth">The amount of horizontal space available.</param>
            <param propertyName="availableHeight">The amound of vertical space available.</param>
            <param propertyName="editorBinding">Provides a <see cref="T:System.Windows.Data.Binding"/> that can be used for setting up the editor.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.ResolveBinding(Infragistics.Controls.Grids.Cell)">
            <summary>
            Builds the binding that will be used for a <see cref="T:Infragistics.Controls.Grids.Cell"/>
            </summary>
            <returns>If a binding cannot be created, null will be returned.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.ResolveEditorBinding(Infragistics.Controls.Grids.Cell)">
            <summary>
            Creates a <see cref="T:System.Windows.Data.Binding"/> that can be applied to an editor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.ResolveDisplayElementInternal(Infragistics.Controls.Grids.Cell,System.Windows.Data.Binding)">
            <summary>
            Sets up the element that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/>, when the cell is not in edit mode. 
            </summary>
            <param propertyName="cell">The cell that the display element will be displayed in.</param>
            <param propertyName="cellBinding">A <see cref="T:System.Windows.Data.Binding"/> object that can be applied to the cell. Note: this binding can be null.</param>
            <returns>The element that should be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.ResolveDisplayElementInternal(Infragistics.Controls.Grids.Cell,System.Windows.Data.Binding,Infragistics.Controls.Grids.RowType)">
            <summary>
            Sets up the element that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/>, when the cell is not in edit mode. 
            </summary>
            <param propertyName="cell">The cell that the display element will be displayed in.</param>
            <param propertyName="cellBinding">A <see cref="T:System.Windows.Data.Binding"/> object that can be applied to the cell. Note: this binding can be null.</param>
            <returns>The element that should be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.ApplyAddNewRowItemTemplate(Infragistics.Controls.Grids.Cell)">
            <summary>
            If there is an AddNewItemTemplate then it will be loaded for an AddNewRow cell.
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.ResolveEditorControlInternal(Infragistics.Controls.Grids.Cell,System.Object,System.Double,System.Double,System.Windows.Data.Binding)">
            <summary>
            Sets up the edtior control that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/> when the the cell is in edit mode.
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> entering edit mode.</param>
            <param propertyName="editorValue">The value that should be put in the editor.</param>
            <param propertyName="availableWidth">The amount of horizontal space available.</param>
            <param propertyName="availableHeight">The amound of vertical space available.</param>
            <param propertyName="editorBinding">Provides a <see cref="T:System.Windows.Data.Binding"/> that can be used for setting up the editor.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.ApplyAddNewRowEditorTemplate(Infragistics.Controls.Grids.Cell,System.Object,System.Double,System.Double,System.Windows.Data.Binding)">
            <summary>
            If there is an <see cref="P:Infragistics.Controls.Grids.Column.AddNewRowEditorTemplate"/> then it will be loaded for an <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowCell"/>.
            </summary>
            <param name="cell"></param>        
            <param name="editorValue">The value that should be put in the editor.</param>
            <param name="availableWidth">The amount of horizontal space available.</param>
            <param name="availableHeight">The amound of vertical space available.</param>
            <param name="editorBinding">Provides a <see cref="T:System.Windows.Data.Binding"/> that can be used for setting up the editor.</param>        
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.FocusEditor">
            <summary>
            Calls the ContentProvider to Attempt to Focus the underlying editor control
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.ResolveBindingInternal(Infragistics.Controls.Grids.Cell)">
            <summary>
            Builds the binding that will be used for a <see cref="T:Infragistics.Controls.Grids.Cell"/>
            </summary>
            <returns>If a binding cannot be created, null will be returned.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.SetControlStyle(System.Windows.FrameworkElement,System.Windows.Style)">
            <summary>
            Sets the inputted style to the inputted control, and if the style is null then it clears the style off the control.
            </summary>
            <param name="control"></param>
            <param name="style"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.CanResolveValueFromEditor">
            <summary>
            Gets a value indicating whether the <see cref="T:Infragistics.Controls.Grids.ColumnChooserCommandBase"/> can resolve value from editor using the <see cref="M:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.ResolveValueFromEditor(Infragistics.Controls.Grids.Cell)"/> method.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.RemovePaddingDuringEditing">
            <summary>
            Gets/Sets whether the padding of a <see cref="T:Infragistics.Controls.Grids.Cell"/> should be removed before putting an editor into edit mode. 
            </summary>
            <remarks>
            This property will determine the availableHeight and availableWidth parameters of the ResolveEditorControl method.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase.IsToolTip">
            <summary>
            Gets/Sets whether this <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase"/> is being used to populate the content of a ToolTip.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn">
            <summary>
            A column object that represents the area for ExpansionIndicatorSettings of a <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn.GenerateDataCell(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Returns a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorCell"/>
            </summary>
            <param propertyName="row"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn.GenerateHeaderCell(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Returns a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorHeaderCell"/>
            </summary>
            <param propertyName="row"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn.GenerateFooterCell(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Returns a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorFooterCell"/>
            </summary>
            <param propertyName="row"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn.IsSortable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn"/>  is not Sortable
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn.IsFixable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn"/>  is not Fixable
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn.IsMovable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn"/> is not Movable
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn.IsResizable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn"/> is not Resizable
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn.SupportsHeaderFooterContent">
            <summary>
            Gets whether a <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCell"/> or <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCell"/> are allowed to display
            content that's not directly set on them, such as the <see cref="P:Infragistics.Controls.Grids.XamGrid.ColumnsHeaderTemplate"/> property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn.GenerateContentProvider">
            <summary>
            This column does not generate any conent.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn.WidthResolved">
            <summary>
            Resolves the <see cref="T:Infragistics.Controls.Grids.ColumnWidth"/> that is being applied to this <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn.IsSummable">
            <summary>
            Gets / sets if the column will show the UI for SummaryRow.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn.IsGroupable">
            <summary>
            This column is not Groupable.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FillerColumn">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Column"/> that fills any remaining space in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FillerColumn.WidthResolved">
            <summary>
            The width of a <see cref="T:Infragistics.Controls.Grids.Primitives.FillerColumn"/> is always *. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FillerColumn.IsSortable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.FillerColumn"/>  is not Sortable
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FillerColumn.IsFixable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.FillerColumn"/> is not Fixable.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FillerColumn.IsFilterable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.FillerColumn"/> is not Filterable.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FillerColumn.IsMovable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.FillerColumn"/>  is not Movable
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FillerColumn.IsResizable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.FillerColumn"/>  is not Resizable.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FillerColumn.SupportsHeaderFooterContent">
            <summary>
            Gets whether a <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCell"/> or <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCell"/> are allowed to display
            content that's not directly set on them, such as the <see cref="P:Infragistics.Controls.Grids.XamGrid.ColumnsHeaderTemplate"/> property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FillerColumn.GenerateContentProvider">
            <summary>
            This column does not generate any conent.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FillerColumn.FillAvailableFilters(Infragistics.Controls.Grids.FilterOperandCollection)">
            <summary>
            Fills the <see cref="T:Infragistics.Controls.Grids.FilterOperandCollection"/> with the operands that the column expects as filter values.
            </summary>
            <param name="availableFilters"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FillerColumn.IsSummable">
            <summary>
            Gets / sets if the column will show the UI for SummaryRow.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FillerColumn.CellStyleResolved">
            <summary>
            Resolves the actual Style that will be applied to the <see cref="T:Infragistics.Controls.Grids.CellControl"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FillerColumn.HeaderStyleResolved">
            <summary>
            Resolves the actual Style that will be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCellControl"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FillerColumn.FooterStyleResolved">
            <summary>
            Resolves the actual Style that will be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCellControl"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FillerColumn.IsGroupable">
            <summary>
            This column is not Groupable.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FillerColumn.IsHideable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.FillerColumn"/>  is not Hideable
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FillerColumn.GenerateFilterSelectionControl">
            <summary>
            Returns a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.SelectionControl" /> which will be used by the FilterMenu.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FixedBorderColumn">
            <summary>
            A column object that represents the area for border between pinnned and unpinned <see cref="T:Infragistics.Controls.Grids.Column"/> objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FixedBorderColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderColumn"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FixedBorderColumn.GenerateDataCell(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Returns a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderCell"/>
            </summary>
            <param propertyName="row"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FixedBorderColumn.GenerateHeaderCell(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Returns a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderHeaderCell"/>
            </summary>
            <param propertyName="row"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FixedBorderColumn.GenerateFooterCell(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Returns a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderFooterCell"/>
            </summary>
            <param propertyName="row"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FixedBorderColumn.IsSortable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderColumn"/>  is not Sortable
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FixedBorderColumn.IsFixable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderColumn"/>  is not Fixable
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FixedBorderColumn.IsGroupable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderColumn"/>  is not Groupable
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FixedBorderColumn.IsMovable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderColumn"/> is not Movable
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FixedBorderColumn.IsResizable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderColumn"/> is not Resizable
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FixedBorderColumn.MinimumWidth">
            <summary>
            Gets/sets the minimum width the column is allowed to be.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FixedBorderColumn.GenerateContentProvider">
            <summary>
            This column does not generate any conent.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FixedBorderColumn.WidthResolved">
            <summary>
            Resolves the <see cref="T:Infragistics.Controls.Grids.ColumnWidth"/> that is being applied to this <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupByColumn">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> that represents a particular level of <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByCell"/> objects.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByColumn.WidthResolved">
            <summary>
            The width of a <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByColumn"/> is always *. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByColumn.GenerateCell(Infragistics.Controls.Grids.RowBase)">
            <summary>
            If given a <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByRow"/> a <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByCell"/> will be returned.
            </summary>
            <param propertyName="row"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByColumn.IsResizable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByColumn"/> is not resizable.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByColumn.IsFixable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByColumn"/> can not be locked into place.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByColumn.IsSortable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByColumn"/> is always sortable.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByColumn.GenerateContentProvider">
            <summary>
            This column does not generate any conent.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupColumnPanel">
            <summary>
            A Panel used to organize cells for a particular <see cref="T:Infragistics.Controls.Grids.GroupColumn"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Primitives.GroupColumnPanel.CellProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Primitives.GroupColumnPanel.Cell"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupColumnPanel.Cell">
            <summary>
            Gets/Sets the <see cref="T:Infragistics.Controls.Grids.CellBase"/> that represents either a <see cref="T:Infragistics.Controls.Grids.Primitives.GroupCell"/> or a <see cref="T:Infragistics.Controls.Grids.Primitives.GroupHeaderCell"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupColumnPanel.Row">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.RowBase"/> associated with this <see cref="T:Infragistics.Controls.Grids.Primitives.GroupColumnPanel"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupColumnPanel.Column">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.GroupColumn"/> associated with this <see cref="P:Infragistics.Controls.Grids.Primitives.GroupColumnPanel.Column"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupColumnPanel.SetupStarCells(System.Double,System.Double,System.Double@,System.Collections.ObjectModel.Collection{Infragistics.Controls.Grids.CellBase})">
            <summary>
            Walks through the star cells of a <see cref="P:Infragistics.Controls.Grids.Primitives.GroupColumnPanel.Column"/> and sets their width to take up the remaining available space.
            </summary>
            <param name="availableWidth"></param>
            <param name="currentWidth"></param>
            <param name="maxHeight"></param>
            <param name="starColumns"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupColumnPanel.InitializeColumnActualWidths(Infragistics.Controls.Grids.GroupColumnsCollection,Infragistics.Controls.Grids.RowBase,System.Double)">
            <summary>
            Initializes the column actual widths.
            </summary>
            <param name="columns">The columns.</param>
            <param name="row">The row.</param>
            <param name="availableWidth">If called from measureOverride it specifies the available width for measuring the panel, if not - not specified, i.e. -1.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupColumnPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures <see cref="P:Infragistics.Controls.Grids.Primitives.GroupColumnPanel.Cell"/> objects stacked horizontally for a <see cref="T:Infragistics.Controls.Grids.GroupColumn"/>
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupColumnPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges <see cref="P:Infragistics.Controls.Grids.Primitives.GroupColumnPanel.Cell"/> objects horizontally for a <see cref="T:Infragistics.Controls.Grids.GroupColumn"/>
            </summary>
            <param name="finalSize"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.HyperlinkColumnContentProvider">
            <summary>
            An object that provides content to <see cref="T:Infragistics.Controls.Grids.Cell"/> objects that belong to a <see cref="T:Infragistics.Controls.Grids.HyperlinkColumn"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HyperlinkColumnContentProvider.#ctor">
            <summary>
            Instantiates a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.HyperlinkColumnContentProvider"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HyperlinkColumnContentProvider.ResolveDisplayElement(Infragistics.Controls.Grids.Cell,System.Windows.Data.Binding)">
            <summary>
            Sets up the element that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/>, when the cell is not in edit mode. 
            </summary>
            <param propertyName="cell">The cell that the display element will be displayed in.</param>
            <param propertyName="cellBinding">A <see cref="T:System.Windows.Data.Binding"/> object that can be applied to the cell. Note: this binding can be null.</param>
            <returns>The element that should be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HyperlinkColumnContentProvider.ApplyBindingToDisplayElement(Infragistics.Controls.Grids.Cell,System.Windows.Data.Binding)">
            <summary>
            This is where a ColumnContentProvider should apply the Binding to their Display element.
            </summary>
            <param name="cell"></param>
            <param name="cellBinding"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HyperlinkColumnContentProvider.ResolveEditorControl(Infragistics.Controls.Grids.Cell,System.Object,System.Double,System.Double,System.Windows.Data.Binding)">
            <summary>
            Sets up the edtior control that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/> when the the cell is in edit mode.
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> entering edit mode.</param>
            <param propertyName="editorValue">The value that should be put in the editor.</param>
            <param propertyName="availableWidth">The amount of horizontal space available.</param>
            <param propertyName="availableHeight">The amound of vertical space available.</param>
            <param propertyName="editorBinding">Provides a <see cref="T:System.Windows.Data.Binding"/> that can be used for setting up the editor.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HyperlinkColumnContentProvider.ResolveValueFromEditor(Infragistics.Controls.Grids.Cell)">
            <summary>
            Resolves the value of the editor control, so that the cell's underlying data can be updated. 
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> that the editor id being displayed in.</param>
            <returns>The value that should be displayed in the cell.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ImageColumnContentProvider">
            <summary>
            An object that provides content to <see cref="T:Infragistics.Controls.Grids.Cell"/> objects that belong to a <see cref="T:Infragistics.Controls.Grids.ImageColumn"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ImageColumnContentProvider.#ctor">
            <summary>
            Instantiates a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.ImageColumnContentProvider"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ImageColumnContentProvider.ResolveDisplayElement(Infragistics.Controls.Grids.Cell,System.Windows.Data.Binding)">
            <summary>
            Sets up the element that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/>, when the cell is not in edit mode. 
            </summary>
            <param name="cell">The cell that the display element will be displayed in.</param>
            <param name="cellBinding">A <see cref="T:System.Windows.Data.Binding"/> object that can be applied to the cell. Note: this binding can be null.</param>
            <returns>The element that should be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ImageColumnContentProvider.ApplyBindingToDisplayElement(Infragistics.Controls.Grids.Cell,System.Windows.Data.Binding)">
            <summary>
            This is where a ColumnContentProvider should apply the Binding to their Display element.
            </summary>
            <param name="cell"></param>
            <param name="binding"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ImageColumnContentProvider.AdjustDisplayElement(Infragistics.Controls.Grids.Cell)">
            <summary>
            Called during EnsureContent to allow the provider a chance to modify its display based on the current conditions.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ImageColumnContentProvider.ResolveEditorControl(Infragistics.Controls.Grids.Cell,System.Object,System.Double,System.Double,System.Windows.Data.Binding)">
            <summary>
            Sets up the edtior control that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/> when the the cell is in edit mode.
            </summary>
            <param name="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> entering edit mode.</param>
            <param name="editorValue">The value that should be put in the editor.</param>
            <param name="availableWidth">The amount of horizontal space available.</param>
            <param name="availableHeight">The amound of vertical space available.</param>
            <param name="editorBinding">Provides a <see cref="T:System.Windows.Data.Binding"/> that can be used for setting up the editor.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ImageColumnContentProvider.ResolveValueFromEditor(Infragistics.Controls.Grids.Cell)">
            <summary>
            Resolves the value of the editor control, so that the cell's underlying data can be updated. 
            </summary>
            <param name="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> that the editor id being displayed in.</param>
            <returns>The value that should be displayed in the cell.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ImageColumnContentProvider.GenerateGroupByCellContent(Infragistics.Controls.Grids.Primitives.GroupByCell,System.Windows.Data.Binding)">
            <summary>
            Used when rendering a GroupByRow, allows for the column content provider to override default behavior and render out a representation of the data.
            </summary>
            <param name="cell"></param>
            <param name="cellBinding"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ImageColumnContentProvider.ResetContent">
            <summary>
            Raised when the cell is recycling to allow the provider a chance to clear any internal members.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.PagerColumn">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> that represents a particular level of <see cref="T:Infragistics.Controls.Grids.Primitives.PagerCell"/> objects.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.PagerColumn.WidthResolved">
            <summary>
            The width of a <see cref="T:Infragistics.Controls.Grids.Primitives.PagerColumn"/> is always *. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerColumn.GenerateCell(Infragistics.Controls.Grids.RowBase)">
            <summary>
            If given a <see cref="T:Infragistics.Controls.Grids.Primitives.PagerRow"/> a <see cref="T:Infragistics.Controls.Grids.Primitives.PagerCell"/> will be returned.
            </summary>
            <param propertyName="row"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.PagerColumn.IsResizable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.PagerColumn"/>  is not Resizable.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerColumn.GenerateContentProvider">
            <summary>
            This column does not generate any conent.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ProxyFilterRowCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.ProxyFilterRowCell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRow"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowCell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Column"/> object that the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowCell"/> represents.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.RowSelectorColumn">
            <summary>
            A column object that represents the area for RowSelectors of a <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorColumn"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorColumn.GenerateDataCell(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Returns a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorCell"/>
            </summary>
            <param propertyName="row"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorColumn.GenerateHeaderCell(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Returns a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorHeaderCell"/>
            </summary>
            <param propertyName="row"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorColumn.GenerateFooterCell(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Returns a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorFooterCell"/>
            </summary>
            <param propertyName="row"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowSelectorColumn.IsSortable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorColumn"/>  is not Sortable
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowSelectorColumn.IsFixable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorColumn"/>  is not Fixable
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowSelectorColumn.IsMovable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorColumn"/> is not Movable
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowSelectorColumn.IsResizable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorColumn"/> is not Resizable
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowSelectorColumn.SupportsHeaderFooterContent">
            <summary>
            Gets whether a <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCell"/> or <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCell"/> are allowed to display
            content that's not directly set on them, such as the <see cref="P:Infragistics.Controls.Grids.XamGrid.ColumnsHeaderTemplate"/> property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorColumn.GenerateContentProvider">
            <summary>
            This column does not generate any conent.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowSelectorColumn.WidthResolved">
            <summary>
            Resolves the <see cref="T:Infragistics.Controls.Grids.ColumnWidth"/> that is being applied to this <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowSelectorColumn.FillAvailableFilters(Infragistics.Controls.Grids.FilterOperandCollection)">
            <summary>
            Fills the <see cref="T:Infragistics.Controls.Grids.FilterOperandCollection"/> with the operands that the column expects as filter values.
            </summary>
            <param name="availableFilters"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowSelectorColumn.IsSummable">
            <summary>
            Gets / sets if the column will show the UI for SummaryRow.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowSelectorColumn.IsGroupable">
            <summary>
            This column is not Groupable.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.TemplateColumnContentProvider">
            <summary>
            An object that provides content to <see cref="T:Infragistics.Controls.Grids.Cell"/> objects that belong to a <see cref="T:Infragistics.Controls.Grids.TemplateColumn"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TemplateColumnContentProvider.#ctor">
            <summary>
            Instantiates a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.TemplateColumnContentProvider"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TemplateColumnContentProvider.ResolveDisplayElement(Infragistics.Controls.Grids.Cell,System.Windows.Data.Binding)">
            <summary>
            Sets up the element that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/>, when the cell is not in edit mode. 
            </summary>
            <param propertyName="cell">The cell that the display element will be displayed in.</param>
            <param propertyName="cellBinding">A <see cref="T:System.Windows.Data.Binding"/> object that can be applied to the cell. Note: this binding can be null.</param>
            <returns>The element that should be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TemplateColumnContentProvider.ApplyBindingToDisplayElement(Infragistics.Controls.Grids.Cell,System.Windows.Data.Binding)">
            <summary>
            This is where a ColumnContentProvider should apply the Binding to their Display element.
            </summary>
            <param name="cell"></param>
            <param name="cellBinding"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TemplateColumnContentProvider.AdjustDisplayElement(Infragistics.Controls.Grids.Cell)">
            <summary>
            Called during EnsureContent to allow the provider a chance to modify its display based on the current conditions.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TemplateColumnContentProvider.ResolveEditorControl(Infragistics.Controls.Grids.Cell,System.Object,System.Double,System.Double,System.Windows.Data.Binding)">
            <summary>
            Sets up the edtior control that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/> when the the cell is in edit mode.
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> entering edit mode.</param>
            <param propertyName="editorValue">The value that should be put in the editor.</param>
            <param propertyName="availableWidth">The amount of horizontal space available.</param>
            <param propertyName="availableHeight">The amound of vertical space available.</param>
            <param propertyName="editorBinding">Provides a <see cref="T:System.Windows.Data.Binding"/> that can be used for setting up the editor.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TemplateColumnContentProvider.ApplyAddNewRowEditorTemplate(Infragistics.Controls.Grids.Cell,System.Object,System.Double,System.Double,System.Windows.Data.Binding)">
            <summary>
            If there is an <see cref="P:Infragistics.Controls.Grids.Column.AddNewRowEditorTemplate" /> then it will be loaded for an <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowCell" />.
            </summary>
            <param name="cell"></param>
            <param name="editorValue">The value that should be put in the editor.</param>
            <param name="availableWidth">The amount of horizontal space available.</param>
            <param name="availableHeight">The amound of vertical space available.</param>
            <param name="editorBinding">Provides a <see cref="T:System.Windows.Data.Binding" /> that can be used for setting up the editor.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TemplateColumnContentProvider.ResolveValueFromEditor(Infragistics.Controls.Grids.Cell)">
            <summary>
            Resolves the value of the editor control, so that the cell's underlying data can be updated. 
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> that the editor id being displayed in.</param>
            <returns>The value that should be displayed in the cell.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TemplateColumnContentProvider.EditorRemoved">
            <summary>
            Raised when the editor is removed from the cell.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TemplateColumnContentProvider.ResetContent">
            <summary>
            Raised when the cell is recycling to allow the provider a chance to clear any internal members.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TemplateColumnContentProvider.FocusEditor">
            <summary>
            Calls the ContentProvider to Attempt to Focus the underlying editor control
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.TemplateColumnContentProvider.RemovePaddingDuringEditing">
            <summary>
            Gets/Sets whether the padding of a <see cref="T:Infragistics.Controls.Grids.Cell"/> should be removed before putting an editor into edit mode. 
            </summary>
            <remarks>
            This property will determine the availableHeight and availableWidth parameters of the ResolveEditorControl method.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.TemplateColumnContentProvider.CanResolveValueFromEditor">
            <summary>
            Gets a value indicating whether the <see cref="T:Infragistics.Controls.Grids.Primitives.TemplateColumnContentProvider"/> can resolve value from editor using the <see cref="M:Infragistics.Controls.Grids.Primitives.TemplateColumnContentProvider.ResolveValueFromEditor(Infragistics.Controls.Grids.Cell)"/> method.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.TemplateColumnEditorContentPresenter">
            <summary>
            For Internal use only. This content presenter is used for handling of implicit editor data templates.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TemplateColumnEditorContentPresenter.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.TemplateColumnEditorContentPresenter.Control">
            <summary>
            Gets or sets the control that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.TemplateColumnEditorContentPresenter"/>.
            </summary>
            <value>
            The control.
            </value>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.TextColumnContentProvider">
            <summary>
            An object that provides content to <see cref="T:Infragistics.Controls.Grids.Cell"/> objects that belong to a <see cref="T:Infragistics.Controls.Grids.TextColumn"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TextColumnContentProvider.#ctor">
            <summary>
            Instantiates a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.TextColumnContentProvider"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TextColumnContentProvider.ResolveDisplayElement(Infragistics.Controls.Grids.Cell,System.Windows.Data.Binding)">
            <summary>
            Sets up the element that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/>, when the cell is not in edit mode. 
            </summary>
            <param propertyName="cell">The cell that the display element will be displayed in.</param>
            <param propertyName="cellBinding">A <see cref="T:System.Windows.Data.Binding"/> object that can be applied to the cell. Note: this binding can be null.</param>
            <returns>The element that should be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TextColumnContentProvider.ApplyBindingToDisplayElement(Infragistics.Controls.Grids.Cell,System.Windows.Data.Binding)">
            <summary>
            This is where a ColumnContentProvider should apply the Binding to their Display element.
            </summary>
            <param name="cell"></param>
            <param name="cellBinding"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TextColumnContentProvider.ResolveEditorControl(Infragistics.Controls.Grids.Cell,System.Object,System.Double,System.Double,System.Windows.Data.Binding)">
            <summary>
            Sets up the edtior control that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/> when the the cell is in edit mode.
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> entering edit mode.</param>
            <param propertyName="editorValue">The value that should be put in the editor.</param>
            <param propertyName="availableWidth">The amount of horizontal space available.</param>
            <param propertyName="availableHeight">The amound of vertical space available.</param>
            <param propertyName="editorBinding">Provides a <see cref="T:System.Windows.Data.Binding"/> that can be used for setting up the editor.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TextColumnContentProvider.ResolveValueFromEditor(Infragistics.Controls.Grids.Cell)">
            <summary>
            Resolves the value of the editor control, so that the cell's underlying data can be updated. 
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> that the editor id being displayed in.</param>
            <returns>The value that should be displayed in the cell.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TextColumnContentProvider.EditorLoaded">
            <summary>
            Invoked when the editor's loaded event is raised. 
            </summary>
            <remarks>This method should be used to do such things as selecting the text of a TextBox, or causing a specific element in the editor to focus.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TextColumnContentProvider.ApplyFormatting(System.Object,Infragistics.Controls.Grids.Column,System.Globalization.CultureInfo)">
            <summary>
            Allows the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase"/> to update the value being set for the display element.
            </summary>
            <param propertyName="value">The original data value from the underlying data.</param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Column"/> whose properties should be used to determine the formatting.</param>
            <param propertyName="culture"></param>
            <returns>The value that should be displayed in the <see cref="T:Infragistics.Controls.Grids.Cell"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TextColumnContentProvider.AdjustDisplayElement(Infragistics.Controls.Grids.Cell)">
            <summary>
            Called during EnsureContent to allow the provider a chance to modify its display based on the current conditions.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TextColumnContentProvider.ResetContent">
            <summary>
            Raised when the cell is recycling to allow the provider a chance to clear any internal members.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TextColumnContentProvider.FocusEditor">
            <summary>
            Calls the ContentProvider to Attempt to Focus the underlying editor control
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TextColumnContentProvider.EditorRemoved">
            <summary>
            Raised when the editor is removed from the cell.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.TextColumnContentProvider.RemovePaddingDuringEditing">
            <summary>
            Gets/Sets whether the padding of a <see cref="T:Infragistics.Controls.Grids.Cell"/> should be removed before putting an editor into edit mode. 
            </summary>
            <remarks>
            This property will determine the availableHeight and availableWidth parameters of the ResolveEditorControl method.
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.UnboundColumnContentProvider">
            <summary>
            An object that provides content to <see cref="T:Infragistics.Controls.Grids.Cell"/> objects that belong to a <see cref="T:Infragistics.Controls.Grids.UnboundColumn"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.UnboundColumnContentProvider.#ctor">
            <summary>
            Instantiates a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.UnboundColumnContentProvider"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.UnboundColumnContentProvider.RemovePaddingDuringEditing">
            <summary>
            Gets/Sets whether the padding of a <see cref="T:Infragistics.Controls.Grids.Cell"/> should be removed before putting an editor into edit mode. 
            </summary>
            <remarks>
            This property will determine the availableHeight and availableWidth parameters of the ResolveEditorControl method.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.UnboundColumnContentProvider.CanResolveValueFromEditor">
            <summary>
            Gets a value indicating whether the <see cref="T:Infragistics.Controls.Grids.Primitives.UnboundColumnContentProvider"/> can resolve value from editor using the <see cref="M:Infragistics.Controls.Grids.Primitives.UnboundColumnContentProvider.ResolveValueFromEditor(Infragistics.Controls.Grids.Cell)"/> method.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.UnboundColumnContentProvider.ResolveEditorControl(Infragistics.Controls.Grids.Cell,System.Object,System.Double,System.Double,System.Windows.Data.Binding)">
            <summary>
            Sets up the edtior control that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/> when the the cell is in edit mode.
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> entering edit mode.</param>
            <param propertyName="editorValue">The value that should be put in the editor.</param>
            <param propertyName="availableWidth">The amount of horizontal space available.</param>
            <param propertyName="availableHeight">The amound of vertical space available.</param>
            <param propertyName="editorBinding">Provides a <see cref="T:System.Windows.Data.Binding"/> that can be used for setting up the editor.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.UnboundColumnContentProvider.ResolveValueFromEditor(Infragistics.Controls.Grids.Cell)">
            <summary>
            Resolves the value of the editor control, so that the cell's underlying data can be updated. 
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> that the editor id being displayed in.</param>
            <returns>The value that should be displayed in the cell.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.UnboundColumnContentProvider.ResolveDisplayElement(Infragistics.Controls.Grids.Cell,System.Windows.Data.Binding)">
            <summary>
            Sets up the element that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/>, when the cell is not in edit mode. 
            </summary>
            <param propertyName="cell">The cell that the display element will be displayed in.</param>
            <param propertyName="cellBinding">A <see cref="T:System.Windows.Data.Binding"/> object that can be applied to the cell. Note: this binding can be null.</param>
            <returns>The element that should be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.UnboundColumnContentProvider.AdjustDisplayElement(Infragistics.Controls.Grids.Cell)">
            <summary>
            Called during EnsureContent to allow the provider a chance to modify its display based on the current conditions.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.UnboundColumnContentProvider.ResolveBinding(Infragistics.Controls.Grids.Cell)">
            <summary>
            Builds the binding that will be used for a <see cref="T:Infragistics.Controls.Grids.Cell"/>
            </summary>
            <returns>If a binding cannot be created, null will be returned.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.UnboundColumnContentProvider.ResolveEditorBinding(Infragistics.Controls.Grids.Cell)">
            <summary>
            Creates a <see cref="T:System.Windows.Data.Binding"/> that can be applied to an editor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.UnboundColumnContentProvider.ResetContent">
            <summary>
            Raised when the cell is recycling to allow the provider a chance to clear any internal members.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.UnboundColumnContentProvider.FocusEditor">
            <summary>
            Calls the ContentProvider to Attempt to Focus the underlying editor control
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.AddNewRow">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.RowBase"/> which acts as a top level row for the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> to add rows.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.AddNewRow.#ctor(Infragistics.Controls.Grids.RowsManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/> class.
            </summary>
            <param propertyName="manager">The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/>.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.AddNewRow.RowType">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.Primitives.AddNewRow.RowType"/> of this <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.AddNewRow.HeightResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.RowBase.Height"/> property for this Row.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.AddNewRow.HasChildren">
            <summary>
            Gets whether or not <see cref="T:Infragistics.Controls.Grids.Primitives.ExpandableRowBase"/> has any child rows.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.AddNewRow.AllowEditing">
            <summary>
            Gets if the <see cref="T:Infragistics.Controls.Grids.RowBase"/> object should allow editing.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.AddNewRow.AllowSelection">
            <summary>
            Gets whether selection will be allowed on the <see cref="T:Infragistics.Controls.Grids.RowBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.AddNewRow.IsStandAloneRow">
            <summary>
            Gets whether this <see cref="T:Infragistics.Controls.Grids.Row"/> can stand alone, when there are no other data rows.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.AddNewRow.IsStandAloneRowResolved">
            <summary>
            Used primarily by special rows, determimes if the stand alone row will force the showing of the child row island. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.AddNewRow.RequiresFixedRowSeparator">
            <summary>
            Used to determine if a FixedRow separator is neccessary for this <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.AddNewRow.SetData(System.Object)">
            <summary>
            Sets the input object to the <see cref="P:Infragistics.Controls.Grids.RowBase.Data"/> value.
            </summary>
            <param propertyName="data"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.AddNewRow.IsRowDirty">
            <summary>
            Gets if the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/> contains changes to it's default values.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.AddNewRow.AllowKeyboardNavigation">
            <summary>
            Gets whether the <see cref="T:Infragistics.Controls.Grids.RowBase"/> will allow keyboard navigation.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ChildBand">
            <summary>
            The row that is displayed when a <see cref="P:Infragistics.Controls.Grids.Primitives.ChildBand.ColumnLayout"/>'s header is Visible.
            This row also holds any child rows for a particular ColumnLayout of a particular <see cref="T:Infragistics.Controls.Grids.Row"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ChildBand.#ctor(Infragistics.Controls.Grids.ChildBandRowsManager,Infragistics.Controls.Grids.ColumnLayout,Infragistics.Controls.Grids.Row)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/> class.
            </summary>
            <param propertyName="manager">The <see cref="T:Infragistics.Controls.Grids.ChildBandRowsManager"/> that owns type his particular row.</param>
            <param propertyName="columnLayout">The <see cref="P:Infragistics.Controls.Grids.Primitives.ChildBand.ColumnLayout"/> object that this row represents.</param>
            <param propertyName="parentRow">The <see cref="T:Infragistics.Controls.Grids.Row"/> that owns this particular row.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ChildBand.ParentRow">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.Row"/> that is the direct parent of this particular row.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ChildBand.ResolveIsVisible">
            <summary>
            Resolves if the <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/> is actually Visible.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ChildBand.Rows">
            <summary>
            A reference to all of the child <see cref="T:Infragistics.Controls.Grids.Row"/>s that this particular row owns.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ChildBand.CurrentPageIndex">
            <summary>
            Gets / sets the page of data for the given data island.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ChildBand.RowFiltersCollection">
            <summary>
            Gets a <see cref="P:Infragistics.Controls.Grids.Primitives.ChildBand.RowFiltersCollection"/> object that contains the filters being applied to this <see cref="P:Infragistics.Controls.Grids.Primitives.ChildBand.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ChildBand.SummaryDefinitionCollection">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.Primitives.ChildBand.SummaryDefinitionCollection"/> object that contains the summaries being applied to this <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ChildBand.SummaryResultCollection">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.Primitives.ChildBand.SummaryResultCollection"/> object that contains the results of the summaries being applied to this <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ChildBand.FillerColumn">
            <summary>
            Gets the FillerColumn of the <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ChildBand.HasChildren">
            <summary>
            Determines if the <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/> has any children.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ChildBand.ColumnLayout">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.Primitives.ChildBand.ColumnLayout"/> that this row represents.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ChildBand.ChildRowsManager">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> of the <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/>'s children.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ChildBand.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ChildBand.VisibleCells">
            <summary>
            Gets a list of cells that are visible. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ChildBand.Cells">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.Primitives.CellBaseCollection"/> that belongs to the <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ChildBand.RowType">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.Primitives.ChildBand.RowType"/> of this <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ChildBand.CanScrollHorizontally">
            <summary>
            Gets whether or not a row will ever need to scroll horizontally. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ChildBand.HeightResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.RowBase.Height"/> property for this Row.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ChildBand.ResolveRowHover">
            <summary>
            Resolves whether the entire row or just the individual cell should be hovered when the 
            mouse is over a cell. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ChildBand.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBandCellsPanel"/>. 
            Note: this method is only meant to be invoked via the RecyclingManager.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBandCellsPanel"/></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ChildBandCellsPanel">
            <summary>
            A panel that organizes the <see cref="T:Infragistics.Controls.Grids.CellBase"/>s of a <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ChildBandCellsPanel.RenderCells(System.Double)">
            <summary>
            Lays out which cells will be displayed in the given viewport. 
            </summary>
            <param propertyName="availableWidth">The total width that the cells have to work with.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ChildBandCollection">
            <summary>
            A Collection of <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/> objects.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ChildBandCollection.Item(System.String)">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/> whose <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> has the specified key. 
            </summary>
            <param propertyName="key"></param>
            <returns>Null if no ChildBand has the specified key.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateRow">
            <summary>
            An object that represents a row that has been templated for a <see cref="T:Infragistics.Controls.Grids.TemplateColumnLayout"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateRow.#ctor(Infragistics.Controls.Grids.RowsManager,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateRow"/> class.
            </summary>
            <param propertyName="manager">The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateRow"/>.</param>		
            <param propertyName="data">The data that this row represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateRow.AllowKeyboardNavigation">
            <summary>
            Gets whether the <see cref="T:Infragistics.Controls.Grids.RowBase"/> will allow keyboard navigation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateRow.Cells">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.Primitives.CellBaseCollection"/> that belongs to the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateRow"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateRow.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateRow"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateRow.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateRowCellsPanel"/>. 
            Note: this method is only meant to be invoked via the RecyclingManager.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateRowCellsPanel"/></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateRow.RowType">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateRow.RowType"/> of this <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateRow.VisibleCells">
            <summary>
            Gets a list of cells that are visible. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateRow.CanBeDeleted">
            <summary>
            Gets whether the <see cref="T:Infragistics.Controls.Grids.Row"/> can actually be deleted. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateRowCellsPanel">
            <summary>
            A panel that organizes the <see cref="T:Infragistics.Controls.Grids.CellBase"/>s of a <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateRow"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateRowCellsPanel.RenderCells(System.Double)">
            <summary>
            Lays out which cells will be displayed in the given viewport. 
            </summary>
            <param propertyName="availableWidth">The total width that the cells have to work with.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ExpandableRowBase">
            <summary>
            A base class that should be used for <see cref="T:Infragistics.Controls.Grids.RowBase"/> objects that can be expandable. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ExpandableRowBase.#ctor(Infragistics.Controls.Grids.RowsManagerBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpandableRowBase"/> class.
            </summary>
            <param propertyName="manager">The <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/> that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpandableRowBase"/>.</param>		
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ExpandableRowBase.IsExpanded">
            <summary>
            Gets/sets whether the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpandableRowBase"/> is expanded or collapsed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ExpandableRowBase.HasChildren">
            <summary>
            Gets whether or not <see cref="T:Infragistics.Controls.Grids.Primitives.ExpandableRowBase"/> has any child rows.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.ExpandableRowBase.ChildRowsManager">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/> of the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpandableRowBase"/>'s children.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FilterRow">
            <summary>
            An object that represents a filter row in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRow.IsNullableValueType(System.Type)">
            <summary>
            Determines if the given type is a nullable value type.
            </summary>
            <param name="dataType"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRow.ChangeType(System.Object,System.Type)">
            <summary>
            Converts a value to the desired type, filtering out nullable types to overcome known MS limitation
            </summary>
            <param name="value"></param>
            <param name="dataType"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRow.#ctor(Infragistics.Controls.Grids.RowsManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRow"/> class.
            </summary>
            <param propertyName="manager">The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRow"/>.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterRow.RowType">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.Primitives.FilterRow.RowType"/> of this <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterRow.HeightResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.RowBase.Height"/> property for this Row.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterRow.HasChildren">
            <summary>
            Gets whether or not <see cref="T:Infragistics.Controls.Grids.Primitives.ExpandableRowBase"/> has any child rows.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterRow.AllowEditing">
            <summary>
            Gets if the <see cref="T:Infragistics.Controls.Grids.RowBase"/> object should allow editing.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterRow.AllowSelection">
            <summary>
            Gets whether selection will be allowed on the <see cref="T:Infragistics.Controls.Grids.RowBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterRow.AllowKeyboardNavigation">
            <summary>
            Gets whether the <see cref="T:Infragistics.Controls.Grids.RowBase"/> will allow keyboard navigation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterRow.IsStandAloneRow">
            <summary>
            Gets whether this <see cref="T:Infragistics.Controls.Grids.Row"/> can stand alone, when there are no other data rows.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterRow.IsStandAloneRowResolved">
            <summary>
            Used primarily by special rows, determimes if the stand alone row will force the showing of the child row island. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FilterRow.RequiresFixedRowSeparator">
            <summary>
            Used to determine if a FixedRow separator is neccessary for this <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRow.SetData(System.Object)">
            <summary>
            Sets the input object to the <see cref="P:Infragistics.Controls.Grids.RowBase.Data"/> value.
            </summary>
            <param propertyName="data"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRow.CellEditorValueChanged(Infragistics.Controls.Grids.CellBase,System.Object)">
            <summary>
            Called while the cell in a row is edited. 		
            </summary>
            <remarks>
            Designed to be used by rows who need to do actions while the editor control is being edited.
            </remarks>
            <param name="cellBase"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRow.BuildFilters(Infragistics.Controls.Grids.CellBase,System.Object,System.Boolean)">
            <summary>
            For a single column, based of the cell, clears any existing filtering conditions and creates a new condition based on current information.
            </summary>
            <param propertyName="cellBase"></param>
            <param propertyName="newValue"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FilterRow.RemoveFilters(Infragistics.Controls.Grids.Primitives.FilterRowCell)">
            <summary>
            Removes all filter conditions in a column based on the cell.
            </summary>
            <param propertyName="cellBase"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.FooterRow">
            <summary>
            An object that represents the Footer of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.FooterRow.#ctor(Infragistics.Controls.Grids.RowsManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.FooterRow"/> class.
            </summary>
            <param propertyName="manager">The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.FooterRow"/>.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FooterRow.ResolveRowHover">
            <summary>
            Resolves whether the entire row or just the individual cell should be hovered when the 
            mouse is over a cell. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FooterRow.RowType">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.Primitives.FooterRow.RowType"/> of this <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.FooterRow.HeightResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.RowBase.Height"/> property for this Row.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupByAreaRow">
            <summary>
            An object that represents a row that represents data of a <see cref="T:Infragistics.Controls.Grids.Column"/> that the underlying data has been grouped by.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaRow.#ctor(Infragistics.Controls.Grids.RowsManagerBase)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaRow"/> object.
            </summary>
            <param propertyName="manager"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByAreaRow.RowType">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.Primitives.GroupByAreaRow.RowType"/> of this <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaRow"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByAreaRow.Cells">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.Primitives.CellBaseCollection"/> that belongs to the <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByAreaRow.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaRow"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaRow.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaRowCellsPanel"/>. 
            Note: this method is only meant to be invoked via the RecyclingManager.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaRowCellsPanel"/></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByAreaRow.HeightResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.RowBase.Height"/> property for this Row.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByAreaRow.CanScrollHorizontally">
            <summary>
            Gets whether or not a row will ever need to scroll horizontally. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupByAreaRowCellsPanel">
            <summary>
            A panel that organizes the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCell"/> of a <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaRow"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaRowCellsPanel.RenderCells(System.Double)">
            <summary>
            Lays out which cells will be displayed in the given viewport. 
            </summary>
            <param propertyName="availableWidth">The total width that the cells have to work with.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByAreaRowCellsPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges each <see cref="T:Infragistics.Controls.Grids.CellBase"/> that should be visible, one next to  the other, similar to a
            Horizontal <see cref="T:System.Windows.Controls.StackPanel"/>.
            </summary>
            <param name="finalSize"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupByRow">
            <summary>
            An object that represents a particular data item whose data has been grouped.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByRow.#ctor(System.Int32,Infragistics.Controls.Grids.RowsManager,Infragistics.GroupByDataContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByRow"/> class.
            </summary>
            <param propertyName="index"></param>
            <param propertyName="manager">The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByRow"/>.</param>		
            <param propertyName="data">The <see cref="T:Infragistics.GroupByDataContext"/> that this row represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByRow.GroupByData">
            <summary>
            Gets the <see cref="T:Infragistics.GroupByDataContext"/> that the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByRow"/> represents.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByRow.CurrentPageIndex">
            <summary>
            Gets / sets the page of data for the given data island.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByRow.RowFiltersCollection">
            <summary>
            Gets a <see cref="P:Infragistics.Controls.Grids.Primitives.GroupByRow.RowFiltersCollection"/> object that contains the filters being applied to this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByRow.Rows">
            <summary>
            Gets the child rows of this <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByRow"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByRow.HasChildren">
            <summary>
            Gets whether or not <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByRow"/> has any child rows.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByRow.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByRow"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByRow.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByRowCellsPanel"/>. 
            Note: this method is only meant to be invoked via the RecyclingManager.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByRowCellsPanel"/></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByRow.RowType">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.Primitives.GroupByRow.RowType"/> of this <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByRow.ChildRowsManager">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.RowsManager"/> that the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByRow"/> owns.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByRow.Cells">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.Primitives.CellBaseCollection"/> that belongs to the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByRow"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByRow.VisibleCells">
            <summary>
            Gets a list of cells that are visible. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByRow.CanScrollHorizontally">
            <summary>
            Gets whether or not a row will ever need to scroll horizontally. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByRow.ChildBands">
            <summary>
            This property is not supported on a <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByRow"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByRow.HeightResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.RowBase.Height"/> property for this Row.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByRow.OnItemSourceChanged">
            <summary>
            Invoked when the ItemSource property changes.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByRow.CanBeDeleted">
            <summary>
            Gets whether the <see cref="T:Infragistics.Controls.Grids.Row"/> can actually be deleted. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.GroupByRow.AllowSelection">
            <summary>
            Gets whether selection will be allowed on the <see cref="T:Infragistics.Controls.Grids.RowBase" />.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.GroupByRowCellsPanel">
            <summary>
            A panel that organizes the <see cref="T:Infragistics.Controls.Grids.CellBase"/>s of a <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByRow"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByRowCellsPanel.RenderCells(System.Double)">
            <summary>
            Lays out which cells will be displayed in the given viewport. 
            </summary>
            <param propertyName="availableWidth">The total width that the cells have to work with.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.GroupByRowCellsPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges each <see cref="T:Infragistics.Controls.Grids.CellBase"/> that should be visible, one next to  the other, similar to a
            Horizontal <see cref="T:System.Windows.Controls.StackPanel"/>.
            </summary>
            <param name="finalSize"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.HeaderRow">
            <summary>
            An object that represents the Header of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.HeaderRow.#ctor(Infragistics.Controls.Grids.RowsManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderRow"/> class.
            </summary>
            <param propertyName="manager">The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderRow"/>.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.HeaderRow.ResolveRowHover">
            <summary>
            Resolves whether the entire row or just the individual cell should be hovered when the 
            mouse is over a cell. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.HeaderRow.RowType">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.Primitives.HeaderRow.RowType"/> of this <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.HeaderRow.HeightResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.RowBase.Height"/> property for this Row.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.HeaderRow.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Row"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.HeaderRow.RecyclingIdentifier">
            <summary>
            If a <see cref="P:Infragistics.Controls.Grids.Primitives.HeaderRow.RecyclingElementType"/> isn't specified, this property can be used to offer another way of identifying 
            a reyclable element.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.HeaderRow.IsStandAloneRow">
            <summary>
            Gets whether this <see cref="T:Infragistics.Controls.Grids.Row"/> can stand alone, when there are no other data rows.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.HeaderRow.IsStandAloneRowResolved">
            <summary>
            Resolves whether this <see cref="T:Infragistics.Controls.Grids.Row"/> will stand alone, based on the state of the grid.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.MergedSummaryRow">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.RowBase"/> which acts as a row that displays summaries for indvidual groupings for Merged Columns
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.MergedSummaryRow.#ctor(Infragistics.Controls.Grids.RowsManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.MergedSummaryRow"/> class.
            </summary>
            <param name="manager"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.MergedSummaryRow.RowType">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.Primitives.MergedSummaryRow.RowType"/> of this <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.MergedSummaryRow.RequiresFixedRowSeparator">
            <summary>
            Used to determine if a FixedRow separator is neccessary for this <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.MergedSummaryRow.HeightResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.RowBase.Height"/> property for this Row.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.MergedSummaryRow.MergedColumnInfo">
            <summary>
            Gets/Sets the <see cref="P:Infragistics.Controls.Grids.Primitives.MergedSummaryRow.MergedColumnInfo"/> associated with the <see cref="T:Infragistics.Controls.Grids.Primitives.MergedSummaryRow"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.PagerCellsPanel">
            <summary>
            An object that visually represents the PagerRow of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerCellsPanel.RenderCells(System.Double)">
            <summary>
            Lays out which cells will be displayed in the given viewport. 
            </summary>
            <param propertyName="availableWidth">The total width that the cells have to work with.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerCellsPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges each <see cref="T:Infragistics.Controls.Grids.CellBase"/> that should be visible, one next to  the other, similar to a
            Horizontal <see cref="T:System.Windows.Controls.StackPanel"/>.
            </summary>
            <param name="finalSize"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.PagerRow">
            <summary>
            The PagerRow is what will be used to control pager functionality on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerRow.#ctor(Infragistics.Controls.Grids.RowsManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerRow"/> class.
            </summary>
            <param propertyName="manager">The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerRow"/>.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.PagerRow.ResolveRowHover">
            <summary>
            Resolves whether the entire row or just the individual cell should be hovered when the 
            mouse is over a cell. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.PagerRow.RecyclingElementType">
            <summary>
            Gets the System.Type of the System.Windows.FrameworkElement that is being recycled.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.PagerRow.RowType">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.Primitives.PagerRow.RowType"/> of this <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.PagerRow.Column">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.Primitives.PagerColumn"/> that represents the single <see cref="T:Infragistics.Controls.Grids.CellBase"/> in this row.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.PagerRow.Cells">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.Primitives.CellBaseCollection"/> that belongs to the <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.PagerRow.VisibleCells">
            <summary>
            Gets a list of cells that are visible. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.PagerRow.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.PagerCellsPanel"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerRow"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.PagerCellsPanel"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.PagerRow.HeightResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.RowBase.Height"/> property for this Row.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.PagerRow.CanScrollHorizontally">
            <summary>
            Gets whether or not a row will ever need to scroll horizontally. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.RowBaseCollection">
            <summary>
            An object that wraps an underlying collection of type <see cref="T:Infragistics.ICollectionBase"/> that contains a collection of <see cref="T:Infragistics.Controls.Grids.RowBase"/> objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowBaseCollection.#ctor(Infragistics.ICollectionBase)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.RowBaseCollection"/> class. 
            </summary>
            <param propertyName="actualCollection">The collection that the <see cref="T:Infragistics.Controls.Grids.Primitives.RowBaseCollection"/> will wrap.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowBaseCollection.ActualCollection">
            <summary>
            The underlying collection that the <see cref="T:Infragistics.Controls.Grids.Primitives.RowBaseCollection"/> is wrapping.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowBaseCollection.Count">
            <summary>
            Gets the total amount of <see cref="T:Infragistics.Controls.Grids.RowBase"/> objects.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.RowBaseCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.RowBase"/> at the specified index.
            </summary>
            <param propertyName="index"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowBaseCollection.IndexOf(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Gets the index of the specified <see cref="T:Infragistics.Controls.Grids.RowBase"/> from the underlying collection.
            </summary>
            <param propertyName="item"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowBaseCollection.Clear">
            <summary>
            Removes all <see cref="T:Infragistics.Controls.Grids.RowBase"/> objects from the underlying collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowBaseCollection.GetEnumerator">
            <summary>
            Gets the IEnumerator from the underlying collection.
            </summary>
            <returns></returns>
        </member>
        <member name="E:Infragistics.Controls.Grids.Primitives.RowBaseCollection.PropertyChanged">
            <summary>
            Fired when a property changes on the <see cref="T:Infragistics.DependencyObjectNotifier"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowBaseCollection.OnPropertyChanged(System.String)">
            <summary>
            Invoked when a property changes on the <see cref="T:Infragistics.DependencyObjectNotifier"/> object.
            </summary>
            <param name="name">The name of the property that has changed.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.RowExpandCommand">
            <summary>
            A Row command that expands a <see cref="T:Infragistics.Controls.Grids.Row"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowExpandCommand.ExecuteCommand(Infragistics.Controls.Grids.Row)">
            <summary>
            Expands the specifed <see cref="T:Infragistics.Controls.Grids.Row"/>.
            </summary>
            <param propertyName="row"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.RowCollapseCommand">
            <summary>
            A Row command that collapses a <see cref="T:Infragistics.Controls.Grids.Row"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowCollapseCommand.ExecuteCommand(Infragistics.Controls.Grids.Row)">
            <summary>
            Collapses the specifed <see cref="T:Infragistics.Controls.Grids.Row"/>.
            </summary>
            <param propertyName="row"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.RowDeleteCommand">
            <summary>
            A Row command that deletes a <see cref="T:Infragistics.Controls.Grids.Row"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowDeleteCommand.ExecuteCommand(Infragistics.Controls.Grids.Row)">
            <summary>
            Deletes the specifed <see cref="T:Infragistics.Controls.Grids.Row"/>.
            </summary>
            <param propertyName="row"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.RowEditCommand">
            <summary>
            A Row command that puts a <see cref="T:Infragistics.Controls.Grids.Row"/> into edit mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowEditCommand.ExecuteCommand(Infragistics.Controls.Grids.Row)">
            <summary>
            Puts the specifed <see cref="T:Infragistics.Controls.Grids.Row"/> into edit mode.
            </summary>
            <param propertyName="row"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.SummaryRow">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.RowBase"/> which acts as a top level row for the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> to summarize.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummaryRow.#ctor(Infragistics.Controls.Grids.RowsManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRow"/> class.
            </summary>
            <param propertyName="manager">The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> that owns the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRow"/>.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.SummaryRow.HeightResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.RowBase.Height"/> property for this Row.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.SummaryRow.RowType">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.Primitives.SummaryRow.RowType"/> of this <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.SummaryRow.HasChildren">
            <summary>
            Gets whether or not <see cref="T:Infragistics.Controls.Grids.Primitives.ExpandableRowBase"/> has any child rows.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.SummaryRow.AllowEditing">
            <summary>
            Gets if the <see cref="T:Infragistics.Controls.Grids.RowBase"/> object should allow editing.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.SummaryRow.AllowSelection">
            <summary>
            Gets whether selection will be allowed on the <see cref="T:Infragistics.Controls.Grids.RowBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.SummaryRow.AllowKeyboardNavigation">
            <summary>
            Gets whether the <see cref="T:Infragistics.Controls.Grids.RowBase"/> will allow keyboard navigation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Primitives.SummaryRow.RequiresFixedRowSeparator">
            <summary>
            Used to determine if a FixedRow separator is neccessary for this <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.SummaryRow.InvalidateRow">
            <summary>
            Cycles through the <see cref="T:Infragistics.Controls.Grids.CellBase"/>s in this <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRow"/> and refreshs them.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.ColumnWidthTypeConverter">
            <summary>
            A Type Converter that converts from a string to a <see cref="T:Infragistics.Controls.Grids.ColumnWidth"/> object;
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnWidthTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether this converter can convert an object of the specified type to a <see cref="T:Infragistics.Controls.Grids.ColumnWidth"/>.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">The type that you want to convert from.</param>
            <returns>true if sourceType is a <see cref="T:System.String"/> or of the specified type.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnWidthTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the specified object to a <see cref="T:Infragistics.Controls.Grids.ColumnWidth"/>.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the currentIndex culture.</param>
            <param name="value">The object to covert to the <see cref="T:Infragistics.Controls.Grids.ColumnWidth"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnWidthTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Allows the ColumnWidth property to be converted to Strings.
            </summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.ColumnWidthTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the ColumnWidth object to a String. 
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns>A string.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.NullableColumnWidthTypeConverter">
            <summary>
            A Type Converter that converts from a string to a <see cref="T:System.Nullable`1"/> object;
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.NullableColumnWidthTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the specified object to a <see cref="T:Infragistics.Controls.Grids.ColumnWidth"/>.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the currentIndex culture.</param>
            <param name="value">The object to covert to the <see cref="T:Infragistics.Controls.Grids.ColumnWidth"/>.</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.IComparableTypeConverter">
            <summary>
            Used to convert values to an <see cref="T:System.IComparable"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.IComparableTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
             Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context"></param>
            <param name="sourceType"> The type you want to convert from.</param>
            <returns> true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.IComparableTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.NullableDoubleConverter">
            <summary>
            A TypeConverter to handle nullable double values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.NullableDoubleConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified
                type to the type of this converter.
            </summary>
            <param propertyName="context">An object that provides a format context.</param>
            <param propertyName="sourceType">The type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.NullableDoubleConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param propertyName="context"></param>
            <param propertyName="culture"></param>
            <param propertyName="value"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.NullableFloatConverter">
            <summary>
            A TypeConverter to handle nullable double values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.NullableFloatConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified
                type to the type of this converter.
            </summary>
            <param propertyName="context">An object that provides a format context.</param>
            <param propertyName="sourceType">The type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.NullableFloatConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param propertyName="context"></param>
            <param propertyName="culture"></param>
            <param propertyName="value"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.NullableIntConverter">
            <summary>
            A TypeConverter to handle nullable integer values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.NullableIntConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified
                type to the type of this converter.
            </summary>
            <param propertyName="context">An object that provides a format context.</param>
            <param propertyName="sourceType">The type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.NullableIntConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param propertyName="context"></param>
            <param propertyName="culture"></param>
            <param propertyName="value"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.RowHeightTypeConverter">
            <summary>
            A Type Converter that converts from a string to a <see cref="T:Infragistics.Controls.Grids.RowHeight"/> object;
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowHeightTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether this converter can convert an object of the specified type to a <see cref="T:Infragistics.Controls.Grids.RowHeight"/>.
            </summary>
            <param propertyName="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param propertyName="sourceType">The type that you want to convert from.</param>
            <returns>true if sourceType is a <see cref="T:System.String"/> or of the specified type.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowHeightTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the specified object to a <see cref="T:Infragistics.Controls.Grids.RowHeight"/>.
            </summary>
            <param propertyName="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param propertyName="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the currentIndex culture.</param>
            <param propertyName="value">The object to covert to the <see cref="T:Infragistics.Controls.Grids.RowHeight"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowHeightTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Allows the RowHeight property to be converted to Strings.
            </summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.RowHeightTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the RowHeight object to a String. 
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns>A string.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.TypeTypeConverter">
            <summary>
            Converts strings to types.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TypeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Based on the incoming type, this method determines if it can be converted to a Type.
            </summary>
            <param propertyName="context"></param>
            <param propertyName="sourceType">The type to be converted</param>
            <returns>If the type is a string, true is returned, otherwise false is returned.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TypeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Attempts to convert the incoming string to a Type.
            </summary>
            <param propertyName="context"></param>
            <param propertyName="culture"></param>
            <param propertyName="value">The incoming string.</param>
            <returns>A Type if it can be resolved.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.TypeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            In WPF this will return true for string types, even though we don't support converting to anything. 
            So just to be clear, we'll return false here. 
            </summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.AddNewRowSettings">
            <summary>
            A class that controls the settings for an <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/> object on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.AddNewRowSettings.AllowAddNewRowProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.AddNewRowSettings.AllowAddNewRow"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.AddNewRowSettings.AllowAddNewRow">
            <summary>
            Gets / sets where the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/> should be visible on all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.AddNewRowSettings.StyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.AddNewRowSettings.Style"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.AddNewRowSettings.Style">
            <summary>
            Gets/Sets the style that will be applied to every <see cref="T:Infragistics.Controls.Grids.Cell"/> in the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/> for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.AddNewRowSettings.ExpansionIndicatorStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.AddNewRowSettings.ExpansionIndicatorStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.AddNewRowSettings.ExpansionIndicatorStyle">
            <summary>
            Gets/sets the <see cref="P:Infragistics.Controls.Grids.AddNewRowSettings.Style"/> that will be used on the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowExpansionIndicatorCellControl"/> objects of the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.AddNewRowSettings.RowSelectorStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.AddNewRowSettings.RowSelectorStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.AddNewRowSettings.RowSelectorStyle">
            <summary>
            Gets/Sets the style that will be applied to the RowSelector of an <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/> for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.AddNewRowSettings.AddNewRowHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.AddNewRowSettings.AddNewRowHeight"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.AddNewRowSettings.AddNewRowHeight">
            <summary>
            Gets/Sets the RowHeight for the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/> for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.AddNewRowSettingsOverride">
            <summary>
            A class that controls the add new row settings for an object on the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.AddNewRowSettingsOverride.SettingsObject">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.SettingsBase"/> that is the counterpart to this <see cref="T:Infragistics.Controls.Grids.SettingsOverrideBase"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.AddNewRowSettingsOverride.AllowAddNewRowProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.AddNewRowSettingsOverride.AllowAddNewRow"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.AddNewRowSettingsOverride.AllowAddNewRow">
            <summary>
            Gets / sets where the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/> should be visible on this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.AddNewRowSettingsOverride.AllowAddNewRowResolved">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.AddNewRowLocation"/> which will be applied the current <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.AddNewRowSettingsOverride.ExpansionIndicatorStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.AddNewRowSettingsOverride.Style"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.AddNewRowSettingsOverride.ExpansionIndicatorStyle">
            <summary>
            Gets/Sets the <see cref="P:Infragistics.Controls.Grids.AddNewRowSettingsOverride.Style"/> that should be applied to the visual object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.AddNewRowSettingsOverride.ExpansionIndicatorStyleResolved">
            <summary>
            Gets the actual <see cref="P:Infragistics.Controls.Grids.AddNewRowSettingsOverride.Style"/> of the visual object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.AddNewRowSettingsOverride.StyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.AddNewRowSettingsOverride.Style"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.AddNewRowSettingsOverride.Style">
            <summary>
            Gets/Sets the style that will be applied to every <see cref="T:Infragistics.Controls.Grids.Cell"/> in the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/> for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.AddNewRowSettingsOverride.StyleResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.AddNewRowSettingsOverride.Style"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.AddNewRowSettingsOverride.RowSelectorStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.AddNewRowSettingsOverride.RowSelectorStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.AddNewRowSettingsOverride.RowSelectorStyle">
            <summary>
            Gets/Sets the style that will be applied to the RowSelector of an <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/> for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.AddNewRowSettingsOverride.RowSelectorStyleResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.AddNewRowSettingsOverride.RowSelectorStyle"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.AddNewRowSettingsOverride.AddNewRowHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.AddNewRowSettingsOverride.AddNewRowHeight"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.AddNewRowSettingsOverride.AddNewRowHeight">
            <summary>
            Gets/Sets the RowHeight for the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/> for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.AddNewRowSettingsOverride.AddNewRowHeightResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.AddNewRowSettingsOverride.AddNewRowHeight"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.AddNewRowSettingsOverride.ResolveEditingType">
            <summary>
            Determines what <see cref="T:Infragistics.Controls.Grids.EditingType"/> will be supported by the <see cref="T:Infragistics.Controls.Grids.EditingSettingsBaseOverride"/> object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.ClipboardSettings">
            <summary>
            An object that contains settings for performing Clipboard operations such as CopyToClipboard and Paste.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ClipboardSettings.AllowCopyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ClipboardSettings.AllowCopy"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ClipboardSettings.AllowCopy">
            <summary>
            Gets/Sets whether hitting ctrl + c will copy selected rows or cells to the clipboard.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ClipboardSettings.CopyOptionsProperty">
            <summary>
            Identifies the <see cref="T:Infragistics.Controls.Grids.GridClipboardCopyOptions"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ClipboardSettings.CopyOptions">
            <summary>
            Gets/Sets how data is copied to the clipbard.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ClipboardSettings.CopyTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ClipboardSettings.CopyType"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ClipboardSettings.CopyType">
            <summary>
            Gets/Sets what type of data is copied to the clipboard.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ClipboardSettings.AllowPasteProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ClipboardSettings.AllowPaste"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ClipboardSettings.AllowPaste">
            <summary>
            Gets/Sets whether hitting ctrl + v will paste the data from the clipboard.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGridColumnChooserCommand">
            <summary>
            An enumeration of available commands for the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridColumnChooserCommand.Close">
            <summary>
            Closes the ColumnChooserDialog.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridColumnChooserCommand.Open">
            <summary>
             Opens the ColumnChooserDialog.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnChooserCommandBase">
            <summary>
            A base class for all commands related to the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnChooserCommandBase.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnChooserCommandBase.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param propertyName="parameter">The <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> object that will be executed against.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnChooserCommandBase.ExecuteCommand(Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Executes the specific command on the specified <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
            <param propertyName="col"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnChooserCommandBase.ExecuteCommand(Infragistics.Controls.Grids.Column)">
            <summary>
            Executes the specific command on the specified <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
            <param name="col"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnChooserCloseCommand">
            <summary>
            A Command that closes the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog"/> of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnChooserCloseCommand.ExecuteCommand(Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Hides the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog"/> if it's open.
            </summary>
            <param name="col"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnChooserCloseCommand.ExecuteCommand(Infragistics.Controls.Grids.Column)">
            <summary>
            Hides the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog"/> if it's open.
            </summary>
            <param name="col"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnChooserOpenCommand">
            <summary>
            A Command that opens the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog"/> for a specified <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnChooserOpenCommand.ExecuteCommand(Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Opens the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog"/> for the specified <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
            <param name="col"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnChooserOpenCommand.ExecuteCommand(Infragistics.Controls.Grids.Column)">
            <summary>
            Opens the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog"/> for the specified <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
            <param name="col"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGridColumnChooserCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog"/> object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridColumnChooserCommandSource.CommandType">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.XamGridColumnChooserCommand"/> which is to be executed by the command.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridColumnChooserCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.HideColumnCommand">
            <summary>
            A Command that hides a <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.HideColumnCommand.ExecuteCommand(Infragistics.Controls.Grids.Column)">
            <summary>
            Hides the specified <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
            <param name="col"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.ShowColumnCommand">
            <summary>
            A Command that unhides a <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ShowColumnCommand.ExecuteCommand(Infragistics.Controls.Grids.Column)">
            <summary>
            Makes the specified <see cref="T:Infragistics.Controls.Grids.Column"/> visible.
            </summary>
            <param name="col"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnChooserSettings">
            <summary>
            An object that contains settings for using the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog"/> on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnChooserSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ColumnChooserSettings"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnChooserSettings.AllowHiddenColumnIndicatorProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnChooserSettings.AllowHiddenColumnIndicator"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnChooserSettings.AllowHiddenColumnIndicator">
            <summary>
            Gets / sets if an indicator will be placed in a Column's Header, that indicates that a neighbor column is hidden.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnChooserSettings.AllowHideColumnIconProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnChooserSettings.AllowHideColumnIcon"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnChooserSettings.AllowHideColumnIcon">
            <summary>
            Gets / sets if a button will be placed in the header that will allow users to hide visible Columns.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnChooserSettings.HiddenColumnIndicatorToolTipTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnChooserSettings.HiddenColumnIndicatorToolTipText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnChooserSettings.HiddenColumnIndicatorToolTipText">
            <summary>
            Gets/Sets the text that should be used over the indicator in the header of a column that indicates that there are adjacent columns which are hidden.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnChooserSettings.ColumnChooserDisplayTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnChooserSettings.ColumnChooserDisplayText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnChooserSettings.ColumnChooserDisplayText">
            <summary>
            Gets/Sets the text that's used inside the ColumnChooserDialog's header and in the dropdown menu of the Indicator, to launch the ColumnChooserDialog.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnChooserSettings.InitialLocationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnChooserSettings.InitialLocation"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnChooserSettings.InitialLocation">
            <summary>
            The Initial location that the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog"/> will appear when its open. 
            </summary>
            <remarks>
            If the value is null, it will appear in the center of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            The point is relative to the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnChooserSettings.OnStyleChanged">
            <summary>
            Invoked when the Style property changes.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnChooserSettings.AllowColumnMovingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnChooserSettings.AllowColumnMoving"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnChooserSettings.AllowColumnMoving">
            <summary>
            Gets/Sets whether <see cref="T:Infragistics.Controls.Grids.Column"/>s can be moved around within the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnChooserSettingsOverride">
            <summary>
            An object that contains settings for using the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnChooserDialog"/> on a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnChooserSettingsOverride.AllowHiddenColumnIndicatorProperty">
            <summary>   
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnChooserSettingsOverride.AllowHiddenColumnIndicator"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnChooserSettingsOverride.AllowHiddenColumnIndicator">
            <summary>
            Gets / sets if an indicator will be placed in a Column's Header, that indicates that a neighbor column is hidden for a particular ColumnLayout.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnChooserSettingsOverride.AllowHiddenColumnIndicatorResolved">
            <summary>
            Gets if an indicator will be placed in a Column's Header, that indicates that a neighbor column is hidden for a particular ColumnLayout.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnChooserSettingsOverride.AllowHideColumnIconProperty">
            <summary>   
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnChooserSettingsOverride.AllowHideColumnIcon"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnChooserSettingsOverride.AllowHideColumnIcon">
            <summary>
            Gets / sets if a button will be placed in the header that will allow users to hide visible Columns for a particular ColumnLayout.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnChooserSettingsOverride.AllowHideColumnIconResolved">
            <summary>
            Resolves if a button will be placed in the header that will allow users to hide visible Columns for a particular ColumnLayout.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnChooserSettingsOverride.SettingsObject">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.SettingsBase"/> that is the counterpart to this <see cref="T:Infragistics.Controls.Grids.SettingsOverrideBase"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnMovingSettings">
            <summary>
            An object that contains settings for using ColumnMovingSettings on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnMovingSettings.IndicatorStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnMovingSettings.IndicatorStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnMovingSettings.IndicatorStyle">
            <summary>
            Gets/sets the <see cref="T:System.Windows.Style"/> that will be used to identify where a <see cref="T:Infragistics.Controls.Grids.Column"/> will be moved.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnMovingSettings.AllowColumnMovingTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnMovingSettings.AllowColumnMoving"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnMovingSettings.AllowColumnMoving">
            <summary>
            Gets/sets how column moving will work for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnMovingSettings.EasingFunctionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnMovingSettings.EasingFunction"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnMovingSettings.EasingFunction">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Media.Animation.EasingFunctionBase"/> that will be used to animate the immediate moving of columns.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnMovingSettings.AnimationDurationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnMovingSettings.AnimationDuration"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnMovingSettings.AnimationDuration">
            <summary>
            Gets/sets the duration of the animation of moving a column immediately. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnMovingSettingsOverride">
            <summary>
            An object that contains settings for using ColumnMovingSettings on a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnMovingSettingsOverride.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ColumnMovingSettingsOverride"/> class.
            </summary>		
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnMovingSettingsOverride.IndicatorStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnMovingSettingsOverride.IndicatorStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnMovingSettingsOverride.IndicatorStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that should be applied to the visual object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnMovingSettingsOverride.IndicatorStyleResolved">
            <summary>
            Gets the actual <see cref="T:System.Windows.Style"/> of the visual object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnMovingSettingsOverride.AllowColumnMovingTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnMovingSettingsOverride.AllowColumnMoving"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnMovingSettingsOverride.AllowColumnMoving">
            <summary>
            Gets/sets how column moving will work for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> object in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnMovingSettingsOverride.AllowColumnMovingResolved">
            <summary>
            Resolves the type of Column moving supported for this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnMovingSettingsOverride.EasingFunctionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnMovingSettingsOverride.EasingFunction"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnMovingSettingsOverride.EasingFunction">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Media.Animation.EasingFunctionBase"/> that will be used to animate the immediate moving of columns.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnMovingSettingsOverride.EasingFunctionResolved">
            <summary>
            Resolves the type of EasingFunctionBase supported for this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnMovingSettingsOverride.AnimationDurationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnMovingSettingsOverride.AnimationDuration"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnMovingSettingsOverride.AnimationDuration">
            <summary>
            Gets/sets the duration of the animation of moving a column immediately. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnMovingSettingsOverride.AnimationDurationResolved">
            <summary>
            Resolves the type of duration of the animation supported for this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnMovingSettingsOverride.SettingsObject">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.SettingsBase"/> that is the counterpart to this <see cref="T:Infragistics.Controls.Grids.SettingsOverrideBase"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnResizingSettings">
            <summary>
            An object that contains settings for using ColumnResizingSettings on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnResizingSettings.IndicatorStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnResizingSettings.IndicatorStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnResizingSettings.IndicatorStyle">
            <summary>
            Gets/sets the <see cref="T:System.Windows.Style"/> that will be used to identify where a <see cref="T:Infragistics.Controls.Grids.Column"/> will be resized.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnResizingSettings.AllowColumnResizingTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnResizingSettings.AllowColumnResizing"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnResizingSettings.AllowColumnResizing">
            <summary>
            Gets/sets how column resizing will work for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnResizingSettings.AllowDoubleClickToSizeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnResizingSettings.AllowDoubleClickToSize"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnResizingSettings.AllowDoubleClickToSize">
            <summary>
            Gets/sets if double clicking on the column edge will resize for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnResizingSettings.AllowMultipleColumnResizeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnResizingSettings.AllowMultipleColumnResize"/> dependency property. 
            </summary>		
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnResizingSettings.AllowMultipleColumnResize">
            <summary>
            Gets/sets if multiple column resizing will work for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnResizingSettings.AllowCellAreaResizingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnResizingSettings.AllowCellAreaResizing"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnResizingSettings.AllowCellAreaResizing">
            <summary>
            Gets/sets cell area resizing will work for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnResizingSettingsOverride">
            <summary>
            An object that contains settings for using ColumnResizingSettings on a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ColumnResizingSettingsOverride"/> class.
            </summary>		
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.SettingsObject">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.SettingsBase"/> that is the counterpart to this <see cref="T:Infragistics.Controls.Grids.SettingsOverrideBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.Indicator">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.ResizingIndicator"/> which is displayed when the <see cref="P:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.AllowColumnResizing"/> resolves to Indicator
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.IndicatorContainer">
            <summary>
            The Popup control used to display the <see cref="P:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.Indicator"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.IndicatorStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.IndicatorStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.IndicatorStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that should be applied to the visual object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.IndicatorStyleResolved">
            <summary>
            Gets the actual <see cref="T:System.Windows.Style"/> of the visual object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.AllowColumnResizingTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.AllowColumnResizing"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.AllowColumnResizing">
            <summary>
            Gets/sets how column resizing will work for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.AllowColumnResizingResolved">
            <summary>
            Resolves the type of Column Resizing supported for this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.AllowDoubleClickToSizeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.AllowDoubleClickToSize"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.AllowDoubleClickToSize">
            <summary>
            Gets/sets if double clicking on the column edge will resize for this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.AllowDoubleClickToSizeResolved">
            <summary>
            Resolves if double clicking the edge will resize for this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.AllowMultipleColumnResizeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.AllowMultipleColumnResize"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.AllowMultipleColumnResize">
            <summary>
            Gets/sets if multiple column resizing will work for this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.AllowMultipleColumnResizeResolved">
            <summary>
            Resolves if multiple column resizing for this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.AllowCellAreaResizingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.AllowCellAreaResizing"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.AllowCellAreaResizing">
            <summary>
            Gets/sets if cell area resizing will work for this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnResizingSettingsOverride.AllowCellAreaResizingResolved">
            <summary>
            Resolves if cell area resizing for this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ConditionalFormatCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/> objects.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormatCollection.Column">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.ConditionalFormatCollection.Column"/> which the <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/> applies.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormatCollection.OnItemAdded(System.Int32,Infragistics.Controls.Grids.IConditionalFormattingRule)">
            <summary>
            Invoked when a <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRuleProxy"/> is added at the specified index.
            </summary>
            <param propertyName="index"></param>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormatCollection.OnItemRemoved(System.Int32,Infragistics.Controls.Grids.IConditionalFormattingRule)">
            <summary>
            Invoked when a <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRuleProxy"/> is removed at the specified index.
            </summary>
            <param propertyName="index"></param>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormatCollection.ResetItems">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Grids.ConditionalFormatCollection.CollectionItemChanged">
            <summary>
            Raised when an Item in collection is modified.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormatCollection.OnCollectionItemChanged">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.ConditionalFormatCollection.CollectionItemChanged"/> event.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ConditionalFormatProxyCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRuleProxy"/> objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormatProxyCollection.GenerateIRuleCollection">
            <summary>
            Creates a collection of <see cref="T:Infragistics.IRule"/> objects from the items in this collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormatProxyCollection.GetCellScopedConditionsForKey(System.String)">
            <summary>
            Creates a collection of <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRuleProxy"/> objects for a <see cref="T:Infragistics.Controls.Grids.Column"/> with the given key value.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormatProxyCollection.GetRowScopedConditions">
            <summary>
            Creates a collection of <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRuleProxy"/> which are set to <see cref="T:Infragistics.Controls.Grids.StyleScope"/>.Row.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormatProxyCollection.OnItemAdded(System.Int32,Infragistics.Controls.Grids.IConditionalFormattingRuleProxy)">
            <summary>
            Invoked when a <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRuleProxy"/> is added at the specified index.
            </summary>
            <param propertyName="index"></param>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormatProxyCollection.OnItemRemoved(System.Int32,Infragistics.Controls.Grids.IConditionalFormattingRuleProxy)">
            <summary>
            Invoked when a <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRuleProxy"/> is removed at the specified index.
            </summary>
            <param propertyName="index"></param>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormatProxyCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ConditionalFormattingSettings">
            <summary>
            A class that controls the settings for conditional formatting on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ConditionalFormattingSettings.AllowConditionalFormattingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ConditionalFormattingSettings.AllowConditionalFormatting"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingSettings.AllowConditionalFormatting">
            <summary>
            Gets/Sets AllowConditionalFormatting for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ConditionalFormattingSettingsOverride">
            <summary>
            An object that contains settings for the conditional formatting of a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingSettingsOverride.SettingsObject">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.SettingsBase"/> that is the counterpart to this <see cref="T:Infragistics.Controls.Grids.SettingsOverrideBase"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.AutomaticData">
            <summary>
            A class used to get data from the DataManager level regarding a discreet value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.AutomaticData.CreateAutomaticData(Infragistics.CachedTypedInfo,System.String,Infragistics.LinqSummaryOperator,System.Linq.IQueryable)">
            <summary>
            Retrieves a double value related to the given LinqSummaryOperator.
            </summary>
            <param name="objectDataType"></param>
            <param name="key"></param>
            <param name="op"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.ConditionalFormatIcon">
            <summary>
            A class representing the rule and the icon that will be displayed when the rule is valid.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormatIcon.Parent">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.IconConditionalFormatRule"/> which this indiviual rule belongs to.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ConditionalFormatIcon.IconProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ConditionalFormatIcon.Icon"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormatIcon.Icon">
            <summary>
            Gets / sets the <see cref="T:System.Windows.DataTemplate"/> which will act as the icon when this rule is applied.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ConditionalFormatIcon.OperatorProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ConditionalFormatIcon.Operator"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormatIcon.Operator">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.IconGroupOperator"/> which this rule uses for evaluation.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ConditionalFormatIcon.ValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ConditionalFormatIcon.Value"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormatIcon.Value">
            <summary>
            Gets / sets the value that this rule will use in conjunction with the <see cref="P:Infragistics.Controls.Grids.ConditionalFormatIcon.Operator"/> to evaluate the rule.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ConditionalFormatIcon.ValueTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ConditionalFormatIcon.ValueType"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormatIcon.ValueType">
            <summary>
            Gets / sets what the value represents.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormatIcon.PassesConditions(System.Double)">
            <summary>
            Evaluates the condition
            </summary>
            <param name="value">True if the inputted value meets the requirements of this rule.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormatIcon.GenerateStyle">
            <summary>
            Generates a <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingCellControl"/> including the Icon information.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.PercentData">
            <summary>
            Class used by Conditional Formatting to hold derived information about Percent formulated
            data and allow access to it.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.PercentData.GeneratedMinimumValue">
            <summary>
            Gets / sets the value determined to be the minimum from the data.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.PercentData.GeneratedMaximumValue">
            <summary>
            Gets / sets the value determined to be the maximum from the data.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.PercentData.Range">
            <summary>
            Gets the Range between the Minimum and Maximum values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.PercentData.CreatePercentData(Infragistics.CachedTypedInfo,System.String,System.Linq.IQueryable)">
            <summary>
            Creates a <see cref="T:Infragistics.Controls.Grids.PercentData"/> object from the inputted values.
            </summary>
            <param name="objectDataType"></param>
            <param name="key"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.PercentData.GetPercentValue(System.Double)">
            <summary>
            Determines the percentage that the value is displaced from the <see cref="P:Infragistics.Controls.Grids.PercentData.GeneratedMinimumValue"/>.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.PercentData.GetRealValue(System.Double)">
            <summary>
            Determines the real value that would be associated with a given percentage in the given range.
            </summary>
            <param name="percentage"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.PercentileData">
            <summary>
            Class used by Conditional Formatting to hold derived information about Percentile formulated
            data and allow access to it.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.PercentileData.GetValueType(System.Type)">
            <summary>
            Returns the underlying ValueType of Nullable ValueType.  Returns null otherwise.
            </summary>
            <param name="dataType"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.PercentileData.CalculatedValuesDictionary">
            <summary>
            Gets / sets an <see cref="T:System.Collections.IDictionary"/> which contains previously calculated and cached values.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.PercentileData.OriginalSortedList">
            <summary>
            Gets the original list that was generated by the Context operation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.PercentileData.CachedCastedList">
            <summary>
            Gets / sets the <see cref="T:System.Collections.IList"/> of data casted to the <see cref="T:System.Linq.IQueryable"/> which is needed for later actions.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.PercentileData.ItemCount">
            <summary>
            Gets / sets a count of how many items are in the processed list.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.PercentileData.CreateGenericPercentileData(Infragistics.CachedTypedInfo,System.String,System.Boolean,System.Linq.IQueryable)">
            <summary>
            Creates a new <see cref="T:Infragistics.Controls.Grids.PercentileData"/> object from the inputted data.
            </summary>
            <param name="objectDataType"></param>
            <param name="key"></param>
            <param name="isDateColumn"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.PercentileData.GetPercentileValue(System.Object)">
            <summary>
            Determines the percentile value that the inputted value will fall into.
            </summary>
            <param name="dataValue"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.PercentileData.GetValueJustUnderPercentile(System.Double)">
            <summary>
            Attempts to find the last object in a given percentile range.
            </summary>
            <param name="percentile"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.PercentileData.GetValueJustOverPercentile(System.Double)">
            <summary>
            Attempts to find the first object in a given percentile range.
            </summary>
            <param name="percentile"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.PercentileData.CalculatedMinimumPercentileValue">
            <summary>
            Gets the lowest value from the list of value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.PercentileData.CalculatedMaximumPercentileValue">
            <summary>
            Gets the highest value from the list of value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.PercentileData.OnOriginalSortedListSet">
            <summary>
            Method called when the <see cref="P:Infragistics.Controls.Grids.PercentileData.OriginalSortedList"/> is set so that any calcualations that need to be done can be.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.PercentileData`1">
            <summary>
            Class used by Conditional Formatting to hold derived information about Percentile formulated
            data and allow access to it.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.PercentileData`1.GetPercentileValue(System.Object)">
            <summary>
            Determines the percentile value that the inputted value will fall into.
            </summary>
            <param name="dataValue"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.PercentileData`1.OnOriginalSortedListSet">
            <summary>
            Method called when the <see cref="P:Infragistics.Controls.Grids.PercentileData.OriginalSortedList"/> is set so that any calcualations that need to be done can be.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.PercentileData`1.GetValueJustUnderPercentile(System.Double)">
            <summary>
            Attempts to find the last object in a given percentile range.
            </summary>
            <param name="percentile"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.PercentileData`1.GetValueJustOverPercentile(System.Double)">
            <summary>
            Attempts to find the first object in a given percentile range.
            </summary>
            <param name="percentile"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.PercentileData`2">
            <summary>
            Class used by Conditional Formatting to hold derived information about Percentile formulated
            data and allow access to it.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.PercentileData`2.GetPercentileValue(System.Object)">
            <summary>
            Determines the percentile value that the inputted value will fall into.
            </summary>
            <param name="dataValue"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.PercentileData`2.OnOriginalSortedListSet">
            <summary>
            Method called when the <see cref="P:Infragistics.Controls.Grids.PercentileData.OriginalSortedList"/> is set so that any calcualations that need to be done can be.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.PercentileData`2.GetValueJustUnderPercentile(System.Double)">
            <summary>
            Attempts to find the last object in a given percentile range.
            </summary>
            <param name="percentile"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.PercentileData`2.GetValueJustOverPercentile(System.Double)">
            <summary>
            Attempts to find the first object in a given percentile range.
            </summary>
            <param name="percentile"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.RangeData">
            <summary>
            A class to do some minor range calculations on given data.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RangeData.GeneratedMinimumValue">
            <summary>
            Gets / sets the value determined to be the minimum from the data.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RangeData.GeneratedMaximumValue">
            <summary>
            Gets / sets the value determined to be the maximum from the data.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RangeData.Range">
            <summary>
            Gets the Range between the Minimum and Maximum values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RangeData.GetPercentValue(System.Double)">
            <summary>
            Determines the percentage that the value is displaced from the <see cref="P:Infragistics.Controls.Grids.RangeData.GeneratedMinimumValue"/>.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RangeData.CreateRangeData(System.Nullable{System.Double},System.Nullable{System.Double},Infragistics.CachedTypedInfo,System.String,System.Linq.IQueryable)">
            <summary>
            Creates a new <see cref="T:Infragistics.Controls.Grids.RangeData"/> object based on the inputted values.
            </summary>
            <param name="setMinValue"></param>
            <param name="setMaxValue"></param>
            <param name="objectDataType"></param>
            <param name="key"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RangeData.CreateRangeData(System.Double,System.Double)">
            <summary>
            Creates a new <see cref="T:Infragistics.Controls.Grids.RangeData"/> object based on the inputted values.
            </summary>
            <param name="setMinValue"></param>
            <param name="setMaxValue"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.AverageValueConditionalFormatRule">
            <summary>
            A conditional formatting rule that evaluates if the value equals the average value.
            </summary>
            <remarks>
            This format rule is intended to be used by numeric data types.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Grids.AverageValueConditionalFormatRule.FormattingTargetProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.AverageValueConditionalFormatRule.FormattingTarget"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.AverageValueConditionalFormatRule.FormattingTarget">
            <summary>
            Gets / sets what cells should be styled by this rule.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.AverageValueConditionalFormatRule.CreateProxy">
            <summary>
            Creates a new instance of the class which will execute the logic to populate and execute the conditional formatting logic for this <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.AverageValueConditionalFormatRuleProxy">
            <summary>
            The execution proxy for the <see cref="T:Infragistics.Controls.Grids.AverageValueConditionalFormatRule"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.AverageValueConditionalFormatRuleProxy.EvaluateCondition(System.Object,System.Object)">
            <summary>
            Determines whether the inputted value meets the condition of <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingRuleBase"/> and returns the style 
            that should be applied.
            </summary>
            <param name="sourceDataObject"></param>
            <param name="sourceDataValue"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.AverageValueConditionalFormatRuleProxy.GatherData(System.Linq.IQueryable)">
            <summary>
            Called at the stage provided by <see cref="P:Infragistics.IRule.RuleExecution"/> so that values can be derived for formatting purposes.
            </summary>
            <param name="query"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.BeginningWithConditionalFormatRule">
            <summary>
            A conditional formatting rule for strings that detects if the string begins with a particular substring.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.BeginningWithConditionalFormatRule.CreateProxy">
            <summary>
            Creates a new instance of the class which will execute the logic to populate and execute the conditional formatting logic for this <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.BeginningWithConditionalFormatRuleProxy">
            <summary>
            The execution proxy for the <see cref="T:Infragistics.Controls.Grids.BeginningWithConditionalFormatRule"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.BeginningWithConditionalFormatRuleProxy.EvaluateCondition(System.Object,System.Object)">
            <summary>
            Determines whether the inputted value meets the condition of <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingRuleBase"/> and returns the style 
            that should be applied.
            </summary>
            <param name="sourceDataObject"></param>
            <param name="sourceDataValue"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.BetweenXandYConditionalFormatRule">
            <summary>
            A conditional formatting rule that evaluates if the value is between two values
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.BetweenXandYConditionalFormatRule.CreateProxy">
            <summary>
            Creates a new instance of the class which will execute the logic to populate and execute the conditional formatting logic for this <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Infragistics.Controls.Grids.BetweenXandYConditionalFormatRule.LowerBoundProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.BetweenXandYConditionalFormatRule.LowerBound"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.BetweenXandYConditionalFormatRule.LowerBound">
            <summary>
            Gets / sets the <see cref="T:System.IComparable"/> that will act as the lower limit for the range.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.BetweenXandYConditionalFormatRule.LowerBoundResolved">
            <summary>
            Gets the value of the <see cref="P:Infragistics.Controls.Grids.BetweenXandYConditionalFormatRule.LowerBound"/> converted to it's <see cref="T:Infragistics.Controls.Grids.Column"/> datatype and then converted to an <see cref="T:System.IComparable"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.BetweenXandYConditionalFormatRule.UpperBoundProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.BetweenXandYConditionalFormatRule.UpperBound"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.BetweenXandYConditionalFormatRule.UpperBound">
            <summary>
            Gets / sets the <see cref="T:System.IComparable"/> that will act as the upper limit for the range.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.BetweenXandYConditionalFormatRule.UpperBoundResolved">
            <summary>
            Gets the value of the <see cref="P:Infragistics.Controls.Grids.BetweenXandYConditionalFormatRule.UpperBound"/> converted to it's <see cref="T:Infragistics.Controls.Grids.Column"/> datatype and then converted to an <see cref="T:System.IComparable"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.BetweenXandYConditionalFormatRule.IsInclusiveProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.BetweenXandYConditionalFormatRule.IsInclusive"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.BetweenXandYConditionalFormatRule.IsInclusive">
            <summary>
            Gets / sets if the evaluation should include the <see cref="P:Infragistics.Controls.Grids.BetweenXandYConditionalFormatRule.LowerBound"/> and <see cref="P:Infragistics.Controls.Grids.BetweenXandYConditionalFormatRule.UpperBound"/> in the range.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.BetweenXandYConditionalFormatRuleProxy">
            <summary>
            The execution proxy for the <see cref="T:Infragistics.Controls.Grids.BetweenXandYConditionalFormatRule"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.BetweenXandYConditionalFormatRuleProxy.EvaluateCondition(System.Object,System.Object)">
            <summary>
            Determines whether the inputted value meets the condition of <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingRuleBase"/> and returns the style 
            that should be applied.
            </summary>
            <param name="sourceDataObject"></param>
            <param name="sourceDataValue"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.BetweenXandYConditionalFormatRuleProxy.EvaluateConditionHelper(System.IComparable,System.IComparable,System.IComparable,System.Windows.Style,System.Boolean)">
            <summary>
            Evaluates the conditions to determine the style applied.
            </summary>
            <param name="lowerBound"></param>
            <param name="upperBound"></param>
            <param name="obj1"></param>
            <param name="styleToApply"></param>
            <param name="inclusive"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.ConditionalFormattingRuleBase">
            <summary>
            A class that can be used as a base class for conditional formatting rules which provides 
            implementations of base properties.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormattingRuleBase.CreateStyle(System.Windows.Media.Color)">
            <summary>
            Creates a <see cref="T:Infragistics.Controls.Grids.CellControl"/> style object with setters for the BackgroundProperty and AltBackgroundProperty
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormattingRuleBase.CalculateColorSlope(System.Double,System.Double,System.Byte,System.Byte)">
            <summary>
            Calculates the slope of a line.
            </summary>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <param name="minColor"></param>
            <param name="maxColor"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormattingRuleBase.CalculateYIntercept(System.Double,System.Double,System.Byte)">
            <summary>
            Calculates the Y intercept of a line
            </summary>
            <param name="slope"></param>
            <param name="value"></param>
            <param name="colorValue"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingRuleBase.Column">
            <summary>
            Gets the Column that this <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingRuleBase"/> is tied to.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ConditionalFormattingRuleBase.IsTerminalRuleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ConditionalFormattingRuleBase.IsTerminalRule"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingRuleBase.IsTerminalRule">
            <summary>
            Get / set whether to stop evaluating rules if this rule will apply a style.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ConditionalFormattingRuleBase.StyleScopeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ConditionalFormattingRuleBase.StyleScope"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingRuleBase.StyleScope">
            <summary>
            Get / set whether the style applied by this rule should effect only a single cell or all cells in the row.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ConditionalFormattingRuleBase.ShouldRefreshOnDataChangeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ConditionalFormattingRuleBase.ShouldRefreshOnDataChange"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingRuleBase.ShouldRefreshOnDataChange">
            <summary>
            Get / set whether this rule needs to reaquire data due to cell value being changed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ConditionalFormattingRuleBase.CellValueVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ConditionalFormattingRuleBase.CellValueVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingRuleBase.CellValueVisibility">
            <summary>
            Get / set if the text data should be displayed in the cell along with the style change.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ConditionalFormattingRuleBase.RuleExecutionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ConditionalFormattingRuleBase.RuleExecution"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingRuleBase.RuleExecution">
            <summary>
            Get / set at what stage to gather data for conditional formatting.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormattingRuleBase.CreateProxy">
            <summary>
            Creates a new instance of the class which will execute the logic to populate and execute the conditional formatting logic for this <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingRuleBase.PropertiesToIgnore">
            <summary>
            Gets a List of properties that shouldn't be saved when the PersistenceManager goes to save them.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingRuleBase.PriorityProperties">
            <summary>
            Gets a List of properties that should be applied, before even trying to look at any other property on the object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormattingRuleBase.FinishedLoadingPersistence">
            <summary>
            Allows an object to perform an operation, after it's been loaded.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ConditionalFormattingRuleBaseProxy">
            <summary>
            The execution proxy for the <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingRuleBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingRuleBaseProxy.RuleExecution">
            <summary>
            Get / set at what stage to gather data for conditional formatting.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingRuleBaseProxy.Parent">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/> which this proxy is associated with.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormattingRuleBaseProxy.EvaluateCondition(System.Object,System.Object)">
            <summary>
            Determines whether the inputted value meets the condition of <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingRuleBase"/> and returns the style 
            that should be applied.
            </summary>
            <param name="sourceDataObject"></param>
            <param name="sourceDataValue"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormattingRuleBaseProxy.GatherData(System.Linq.IQueryable)">
            <summary>
            Called at the stage provided by <see cref="P:Infragistics.Controls.Grids.ConditionalFormattingRuleBaseProxy.RuleExecution"/> so that values can be derived for formatting purposes.
            </summary>
            <param name="query"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingRuleBaseProxy.Infragistics#IRule#RuleExecution">
            <summary>
            Designates at what stage during the data binding the GatherData needs to be evaluated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormattingRuleBaseProxy.Infragistics#IRule#GatherData(System.Linq.IQueryable)">
            <summary>
            Allows access to the query at the time so that values can be derived off it for the condition.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingRuleBaseProxy.Infragistics#Controls#Grids#IConditionalFormattingRuleProxy#Parent">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/> which this proxy is associated with.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormattingRuleBaseProxy.Infragistics#Controls#Grids#IConditionalFormattingRuleProxy#EvaluateCondition(System.Object,System.Object)">
            <summary>
            Evaluates the rule against the inputted cell and returns true if the rule was applied
            </summary>
            <param name="sourceDataObject"></param>
            <param name="sourceDataValue"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.ContainingConditionalFormatRule">
            <summary>
            A conditional formatting rule for strings which detects if a string contains a particular string.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ContainingConditionalFormatRule.CreateProxy">
            <summary>
            Creates a new instance of the class which will execute the logic to populate and execute the conditional formatting logic for this <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.ContainingConditionalFormatRuleProxy">
            <summary>
            The execution proxy for the <see cref="T:Infragistics.Controls.Grids.ContainingConditionalFormatRule"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ContainingConditionalFormatRuleProxy.EvaluateCondition(System.Object,System.Object)">
            <summary>
            Determines whether the inputted value meets the condition of <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingRuleBase"/> and returns the style 
            that should be applied.
            </summary>
            <param name="sourceDataObject"></param>
            <param name="sourceDataValue"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.DataBarConditionalFormatRule">
            <summary>
            A conditional formatting rule that will display databars in the cell representing the data.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DataBarConditionalFormatRule.DataBarDirectionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.DataBarConditionalFormatRule.DataBarDirection"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DataBarConditionalFormatRule.DataBarDirection">
            <summary>
            Gets / sets the <see cref="P:Infragistics.Controls.Grids.DataBarConditionalFormatRule.DataBarDirection"/> for the databars displayed by this control.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DataBarConditionalFormatRule.DataBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.DataBarConditionalFormatRule.DataBrush"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DataBarConditionalFormatRule.DataBrush">
            <summary>
            Gets / sets the <see cref="T:System.Windows.Media.Brush"/> that will be used to color the positive data bar.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DataBarConditionalFormatRule.NegativeDataBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.DataBarConditionalFormatRule.NegativeDataBrush"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DataBarConditionalFormatRule.NegativeDataBrush">
            <summary>
            Gets / sets the <see cref="T:System.Windows.Media.Brush"/> that will be used to color the negative data bar.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DataBarConditionalFormatRule.UseNegativeDataBarProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.DataBarConditionalFormatRule.UseNegativeDataBar"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DataBarConditionalFormatRule.UseNegativeDataBar">
            <summary>
            Gets / sets if the negative data bar should be used.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.DataBarConditionalFormatRule.CreateProxy">
            <summary>
            Creates a new instance of the class which will execute the logic to populate and execute the conditional formatting logic for this <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.DataBarConditionalFormatRuleProxy">
            <summary>
            The execution proxy for the <see cref="T:Infragistics.Controls.Grids.DataBarConditionalFormatRule"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.DataBarConditionalFormatRuleProxy.GenerateStyle(System.Double,Infragistics.Controls.Grids.DataBarPositiveNegative)">
            <summary>
            Creates as <see cref="T:System.Windows.Style"/> object for a <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingCellControl"/> based on the current state of the object.
            </summary>
            <param name="percentageValue"></param>
            <param name="barColorationAndDirection"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.DataBarConditionalFormatRuleProxy.EvaluateCondition(System.Object,System.Object)">
            <summary>
            Determines whether the inputted value meets the condition of <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingRuleBase"/> and returns the style 
            that should be applied.
            </summary>
            <param name="sourceDataObject"></param>
            <param name="sourceDataValue"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.DiscreetRuleBase">
            <summary>
            Conditional formatting rule base object that contains a single style that will be applied for 
            all cells which conform to a singular rule.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DiscreetRuleBase.StyleToApplyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.DiscreetRuleBase.StyleToApply"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DiscreetRuleBase.StyleToApply">
            <summary>
            Get / set the rule that should be applied if the condition is met.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DiscreetRuleBaseProxy">
            <summary>
            The execution proxy for the <see cref="T:Infragistics.Controls.Grids.DiscreetRuleBase"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.EndingWithConditionalFormatRule">
            <summary>
            A conditional formatting rule for strings that detects if the string ends with a particular substring.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.EndingWithConditionalFormatRule.CreateProxy">
            <summary>
            Creates a new instance of the class which will execute the logic to populate and execute the conditional formatting logic for this <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.EndingWithConditionalFormatRuleProxy">
            <summary>
            The execution proxy for the <see cref="T:Infragistics.Controls.Grids.EndingWithConditionalFormatRuleProxy"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.EndingWithConditionalFormatRuleProxy.EvaluateCondition(System.Object,System.Object)">
            <summary>
            Determines whether the inputted value meets the condition of <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingRuleBase"/> and returns the style 
            that should be applied.
            </summary>
            <param name="sourceDataObject"></param>
            <param name="sourceDataValue"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.EqualToConditionalFormatRule">
            <summary>
            A conditional formatting rule that evaluates if the value equals an inputted value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.EqualToConditionalFormatRule.ValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.EqualToConditionalFormatRule.Value"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EqualToConditionalFormatRule.Value">
            <summary>
            Get / set the value to be compared.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EqualToConditionalFormatRule.ResolvedValue">
            <summary>		
            Gets the value resolved to the datatype of the column
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.EqualToConditionalFormatRule.CreateProxy">
            <summary>
            Creates a new instance of the class which will execute the logic to populate and execute the conditional formatting logic for this <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.EqualToConditionalFormatRuleProxy">
            <summary>
            The execution proxy for the <see cref="T:Infragistics.Controls.Grids.EqualToConditionalFormatRule"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EqualToConditionalFormatRuleProxy.Value">
            <summary>
            Get / set the value to be compared.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EqualToConditionalFormatRuleProxy.ResolvedValue">
            <summary>		
            Gets the value resolved to the datatype of the column
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.EqualToConditionalFormatRuleProxy.EvaluateCondition(System.Object,System.Object)">
            <summary>
            Determines whether the inputted value meets the condition of <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingRuleBase"/> and returns the style 
            that should be applied.
            </summary>
            <param name="sourceDataObject"></param>
            <param name="sourceDataValue"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.GreaterThanConditionalFormatRule">
            <summary>
            A conditional formatting rule that evaluates if the value is greater than an inputted value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.GreaterThanConditionalFormatRule.CreateProxy">
            <summary>
            Creates a new instance of the class which will execute the logic to populate and execute the conditional formatting logic for this <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.GreaterThanConditionalFormatRuleProxy">
            <summary>
            The execution proxy for the <see cref="T:Infragistics.Controls.Grids.GreaterThanConditionalFormatRule"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.GreaterThanConditionalFormatRuleProxy.EvaluateCondition(System.Object,System.Object)">
            <summary>
            Determines whether the inputted value meets the condition of <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingRuleBase"/> and returns the style 
            that should be applied.
            </summary>
            <param name="sourceDataObject"></param>
            <param name="sourceDataValue"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.GreaterThanOrEqualToConditionalFormatRule">
            <summary>
            A conditional formatting rule that evaluates if the value is greater than or equal to an inputted value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.GreaterThanOrEqualToConditionalFormatRule.CreateProxy">
            <summary>
            Creates a new instance of the class which will execute the logic to populate and execute the conditional formatting logic for this <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.GreaterThanOrEqualToConditionalFormatRuleProxy">
            <summary>
            The execution proxy for the <see cref="T:Infragistics.Controls.Grids.GreaterThanOrEqualToConditionalFormatRule"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.GreaterThanOrEqualToConditionalFormatRuleProxy.EvaluateCondition(System.Object,System.Object)">
            <summary>
            Determines whether the inputted value meets the condition of <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingRuleBase"/> and returns the style 
            that should be applied.
            </summary>
            <param name="sourceDataObject"></param>
            <param name="sourceDataValue"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.IconConditionalFormatRule">
            <summary>
            A conditional format rule which will display icons in the cell when the condition is met.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.IconConditionalFormatRule.Rules">
            <summary>
            Get / set a collection of <see cref="T:Infragistics.Controls.Grids.ConditionalFormatIcon"/> objects which will be applied by this rule.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.IconConditionalFormatRule.CreateProxy">
            <summary>
            Creates a new instance of the class which will execute the logic to populate and execute the conditional formatting logic for this <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.IconConditionalFormatRuleProxy">
            <summary>
            The execution proxy for the <see cref="T:Infragistics.Controls.Grids.IconConditionalFormatRule"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.IconConditionalFormatRuleProxy.GatherData(System.Linq.IQueryable)">
            <summary>
            Called at the stage provided by <see cref="P:Infragistics.IRule.RuleExecution"/> so that values can be derived for formatting purposes.
            </summary>
            <param name="query"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.IconConditionalFormatRuleProxy.EvaluateCondition(System.Object,System.Object)">
            <summary>
            Determines whether the inputted value meets the condition of <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingRuleBase"/> and returns the style 
            that should be applied.
            </summary>
            <param name="sourceDataObject"></param>
            <param name="sourceDataValue"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.LessThanConditionalFormatRule">
            <summary>
            A conditional formatting rule that evaluates if the value is less than to an inputted value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.LessThanConditionalFormatRule.CreateProxy">
            <summary>
            Creates a new instance of the class which will execute the logic to populate and execute the conditional formatting logic for this <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.LessThanConditionalFormatRuleProxy">
            <summary>
            The execution proxy for the <see cref="T:Infragistics.Controls.Grids.LessThanConditionalFormatRule"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.LessThanConditionalFormatRuleProxy.EvaluateCondition(System.Object,System.Object)">
            <summary>
            Determines whether the inputted value meets the condition of <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingRuleBase"/> and returns the style 
            that should be applied.
            </summary>
            <param name="sourceDataObject"></param>
            <param name="sourceDataValue"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.LessThanOrEqualToConditionalFormatRule">
            <summary>
            A conditional formatting rule that evaluates if the value is less than an inputted value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.LessThanOrEqualToConditionalFormatRule.CreateProxy">
            <summary>
            Creates a new instance of the class which will execute the logic to populate and execute the conditional formatting logic for this <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.LessThanOrEqualToConditionalFormatRuleProxy">
            <summary>
            The execution proxy for the <see cref="T:Infragistics.Controls.Grids.LessThanOrEqualToConditionalFormatRule"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.LessThanOrEqualToConditionalFormatRuleProxy.EvaluateCondition(System.Object,System.Object)">
            <summary>
            Determines whether the inputted value meets the condition of <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingRuleBase"/> and returns the style 
            that should be applied.
            </summary>
            <param name="sourceDataObject"></param>
            <param name="sourceDataValue"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.MaximumValueConditionalFormatRule">
            <summary>
            A conditional formatting rule that evaluates if the value equals the maximum value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.MaximumValueConditionalFormatRule.CreateProxy">
            <summary>
            Creates a new instance of the class which will execute the logic to populate and execute the conditional formatting logic for this <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.MaximumValueConditionalFormatRuleProxy">
            <summary>
            The execution proxy for the <see cref="T:Infragistics.Controls.Grids.MaximumValueConditionalFormatRule"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.MaximumValueConditionalFormatRuleProxy.GatherData(System.Linq.IQueryable)">
            <summary>
            Called at the stage provided by <see cref="P:Infragistics.IRule.RuleExecution"/> so that values can be derived for formatting purposes.
            </summary>
            <param name="query"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.MinimumValueConditionalFormatRule">
            <summary>
            A conditional formatting rule that evaluates if the value equals the minimum value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.MinimumValueConditionalFormatRule.CreateProxy">
            <summary>
            Creates a new instance of the class which will execute the logic to populate and execute the conditional formatting logic for this <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.MinimumValueConditionalFormatRuleProxy">
            <summary>
            The execution proxy for the <see cref="T:Infragistics.Controls.Grids.MinimumValueConditionalFormatRule"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.MinimumValueConditionalFormatRuleProxy.GatherData(System.Linq.IQueryable)">
            <summary>
            Called at the stage provided by <see cref="P:Infragistics.IRule.RuleExecution"/> so that values can be derived for formatting purposes.
            </summary>
            <param name="query"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.NotBetweenXandYConditionalFormatRule">
            <summary>
            A conditional formatting rule for determinig if a value does not fall between two inputted values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.NotBetweenXandYConditionalFormatRule.CreateProxy">
            <summary>
            Creates a new instance of the class which will execute the logic to populate and execute the conditional formatting logic for this <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.NotBetweenXandYConditionalFormatRuleProxy">
            <summary>
            The execution proxy for the <see cref="T:Infragistics.Controls.Grids.NotBetweenXandYConditionalFormatRule"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.NotBetweenXandYConditionalFormatRuleProxy.EvaluateConditionHelper(System.IComparable,System.IComparable,System.IComparable,System.Windows.Style,System.Boolean)">
            <summary>
            Evaluates the conditions to determine the style applied.
            </summary>
            <param name="lowerBound"></param>
            <param name="upperBound"></param>
            <param name="obj1"></param>
            <param name="styleToApply"></param>
            <param name="inclusive"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.NotContainingConditionalFormatRule">
            <summary>
            A conditional formatting rule for strings that detects if the strings do not contain an inputted string.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.NotContainingConditionalFormatRule.CreateProxy">
            <summary>
            Creates a new instance of the class which will execute the logic to populate and execute the conditional formatting logic for this <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.NotContainingConditionalFormatRuleProxy">
            <summary>
            The execution proxy for the <see cref="T:Infragistics.Controls.Grids.NotContainingConditionalFormatRule"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.NotContainingConditionalFormatRuleProxy.EvaluateCondition(System.Object,System.Object)">
            <summary>
            Determines whether the inputted value meets the condition of <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingRuleBase"/> and returns the style 
            that should be applied.
            </summary>
            <param name="sourceDataObject"></param>
            <param name="sourceDataValue"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.NotEqualToConditionalFormatRule">
            <summary>
            A conditional formatting rule that evaluates if the value is not equal to an inputted value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.NotEqualToConditionalFormatRule.CreateProxy">
            <summary>
            Creates a new instance of the class which will execute the logic to populate and execute the conditional formatting logic for this <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.NotEqualToConditionalFormatRuleProxy">
            <summary>
            The execution proxy for the <see cref="T:Infragistics.Controls.Grids.NotEqualToConditionalFormatRule"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.NotEqualToConditionalFormatRuleProxy.EvaluateCondition(System.Object,System.Object)">
            <summary>
            Determines whether the inputted value meets the condition of <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingRuleBase"/> and returns the style 
            that should be applied.
            </summary>
            <param name="sourceDataObject"></param>
            <param name="sourceDataValue"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.StringConditionalFormatRule">
            <summary>
            A base class for string based conditional format rules.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.StringConditionalFormatRule.ValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.StringConditionalFormatRule.Value"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.StringConditionalFormatRule.Value">
            <summary>
            Get / set the value that will be used for conditional formatting.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.StringConditionalFormatRuleProxy">
            <summary>
            The execution proxy for the <see cref="T:Infragistics.Controls.Grids.StringConditionalFormatRule"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRule">
            <summary>
            A conditional formatting rule which will scale from a minimum color to a median color over the first part of a range
            and between the median color and the maximum color over the second part of the range.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRule.MedianValueTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRule.MedianValueType"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRule.MedianValueType">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.ValueType"/> which describes how the <see cref="P:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRule.MedianValue"/> will be derived and evaluated.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRule.MedianValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRule.MedianValue"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRule.MedianValue">
            <summary>
            The value that will be seen as the middle value for formatting purposes.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRule.MedianColorProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRule.MedianColor"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRule.MedianColor">
            <summary>
            The Color which acts as the median value for the color scale line.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRule.CreateProxy">
            <summary>
            Creates a new instance of the class which will execute the logic to populate and execute the conditional formatting logic for this <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRuleProxy">
            <summary>
            The execution proxy for the <see cref="T:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRule"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRuleProxy.MedianValue">
            <summary>
            Gets / sets the value which will be seen as the median point in the range.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRuleProxy.RedSlope2">
            <summary>
            The slope of the gradient line on the red axis for the second range from median to the upper bound.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRuleProxy.RedYIntercept2">
            <summary>
            The Y intercept of the gradient line on the red axis for the second range from median to the upper bound.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRuleProxy.GreenSlope2">
            <summary>
            The slope of the gradient line on the green axis for the second range from median to the upper bound.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRuleProxy.GreenYIntercept2">
            <summary>
            The Y intercept of the gradient line on the green axis for the second range from median to the upper bound.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRuleProxy.BlueSlope2">
            <summary>
            The slope of the gradient line on the blue axis for the second range from median to the upper bound.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRuleProxy.BlueYIntercept2">
            <summary>
            The Y intercept of the gradient line on the blue axis for the second range from median to the upper bound.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRuleProxy.GatherData(System.Linq.IQueryable)">
            <summary>
            Called at the stage provided by <see cref="P:Infragistics.IRule.RuleExecution"/> so that values can be derived for formatting purposes.
            </summary>
            <param name="query"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRuleProxy.GenerateLineEquations">
            <summary>
            Calculates the slopes and intercepts for the color line.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ThreeColorScaleConditionalFormatRuleProxy.EvaluateCondition(System.Object,System.Object)">
            <summary>
            Determines whether the inputted value meets the condition of <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingRuleBase"/> and returns the style 
            that should be applied.
            </summary>
            <param name="sourceDataObject"></param>
            <param name="sourceDataValue"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.TwoColorScaleConditionalFormatRule">
            <summary>
            A conditional formatting rule which will apply a color gradient between two points.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.TwoColorScaleConditionalFormatRule.MinimumColorProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.TwoColorScaleConditionalFormatRule.MinimumColor"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TwoColorScaleConditionalFormatRule.MinimumColor">
            <summary>
            The Color which acts as the minimum value for the color scale line.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.TwoColorScaleConditionalFormatRule.MaximumColorProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.TwoColorScaleConditionalFormatRule.MaximumColor"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TwoColorScaleConditionalFormatRule.MaximumColor">
            <summary>
            The Color which acts as the maximum value for the color scale line.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.TwoColorScaleConditionalFormatRule.CreateProxy">
            <summary>
            Creates a new instance of the class which will execute the logic to populate and execute the conditional formatting logic for this <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.TwoColorScaleConditionalFormatRuleProxy">
            <summary>
            The execution proxy for the <see cref="T:Infragistics.Controls.Grids.TwoColorScaleConditionalFormatRule"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TwoColorScaleConditionalFormatRuleProxy.RedSlope">
            <summary>
            The slope of the gradient line on the red axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TwoColorScaleConditionalFormatRuleProxy.GreenSlope">
            <summary>
            The slope of the gradient line on the green axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TwoColorScaleConditionalFormatRuleProxy.BlueSlope">
            <summary>
            The slope of the gradient line on the blue axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TwoColorScaleConditionalFormatRuleProxy.RedYIntercept">
            <summary>
            The Y intercept of the gradient line on the red axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TwoColorScaleConditionalFormatRuleProxy.BlueYIntercept">
            <summary>
            The Y intercept of the gradient line on the blue axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TwoColorScaleConditionalFormatRuleProxy.GreenYIntercept">
            <summary>
            The Y intercept of the gradient line on the green axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.TwoColorScaleConditionalFormatRuleProxy.GatherData(System.Linq.IQueryable)">
            <summary>
            Called at the stage provided by <see cref="P:Infragistics.IRule.RuleExecution"/> so that values can be derived for formatting purposes.
            </summary>
            <param name="query"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.TwoColorScaleConditionalFormatRuleProxy.EvaluateCondition(System.Object,System.Object)">
            <summary>
            Determines whether the inputted value meets the condition of <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingRuleBase"/> and returns the style 
            that should be applied.
            </summary>
            <param name="sourceDataObject"></param>
            <param name="sourceDataValue"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.TwoColorScaleConditionalFormatRuleProxy.GenerateLineEquations">
            <summary>
            Calculates the slopes and intercepts for the color line.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.TwoInputConditionalFormatRule">
            <summary>
            Base class for two input formatting rules.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.TwoInputConditionalFormatRule.MinimumValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.TwoInputConditionalFormatRule.MinimumValue"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TwoInputConditionalFormatRule.MinimumValue">
            <summary>
            The value that will be seen as the low value for formatting.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.TwoInputConditionalFormatRule.MaximumValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.TwoInputConditionalFormatRule.MaximumValue"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TwoInputConditionalFormatRule.MaximumValue">
            <summary>
            The value that will be seen as the high value for formatting.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.TwoInputConditionalFormatRule.MinimumValueTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.TwoInputConditionalFormatRule.MinimumValueType"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TwoInputConditionalFormatRule.MinimumValueType">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.ValueType"/> which describes how the <see cref="P:Infragistics.Controls.Grids.TwoInputConditionalFormatRule.MinimumValue"/> will be derived and evaluated.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.TwoInputConditionalFormatRule.MaximumValueTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.TwoInputConditionalFormatRule.MaximumValueType"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TwoInputConditionalFormatRule.MaximumValueType">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.ValueType"/> which describes how the <see cref="P:Infragistics.Controls.Grids.TwoInputConditionalFormatRule.MaximumValue"/> will be derived and evaluated.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.TwoInputConditionalFormatRuleProxy">
            <summary>
            The execution proxy for the <see cref="T:Infragistics.Controls.Grids.TwoInputConditionalFormatRuleProxy"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TwoInputConditionalFormatRuleProxy.PercentileData">
            <summary>
            Gets / sets the <see cref="P:Infragistics.Controls.Grids.TwoInputConditionalFormatRuleProxy.PercentileData"/> object that can be used to determine where a value would translate.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TwoInputConditionalFormatRuleProxy.PercentData">
            <summary>
            Gets / sets the <see cref="P:Infragistics.Controls.Grids.TwoInputConditionalFormatRuleProxy.PercentData"/> object that can be used to determine where a value would translate.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TwoInputConditionalFormatRuleProxy.MaximumValue">
            <summary>
            Gets / sets the value that was calculated or set by the user to be the maximum.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TwoInputConditionalFormatRuleProxy.MinimumValue">
            <summary>
            Gets / sets the value that was calculated or set by the user to be the minimum.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.TwoInputConditionalFormatRuleProxy.GatherData(System.Linq.IQueryable)">
            <summary>
            Called at the stage provided by <see cref="P:Infragistics.IRule.RuleExecution"/> so that values can be derived for formatting purposes.
            </summary>
            <param name="query"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.IConditionalFormattingRule">
            <summary>
            An interface that is used by the conditional formatting framework to identify a conditional rule.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.IConditionalFormattingRule.IsTerminalRule">
            <summary>
            Gets if this rule should terminate evaluation
            of any later rules in the evaluation tree
            that might apply to the cell.
            </summary>	
        </member>
        <member name="P:Infragistics.Controls.Grids.IConditionalFormattingRule.Column">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.IConditionalFormattingRule.Column"/> that the rule will be evaluated against.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.IConditionalFormattingRule.StyleScope">
            <summary>
            Gets which style will be affected by the rule.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.IConditionalFormattingRule.ShouldRefreshOnDataChange">
            <summary>
            Gets whether the rule needs to invalidate itself if a <see cref="T:Infragistics.Controls.Grids.Cell"/> in the <see cref="P:Infragistics.Controls.Grids.IConditionalFormattingRule.Column"/> changes value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.IConditionalFormattingRule.CellValueVisibility">
            <summary>
            Gets whether the text of the cell should be shown during conditional formatting.
            </summary>
            <remarks>This is only applied when the <see cref="P:Infragistics.Controls.Grids.IConditionalFormattingRule.StyleScope"/> is <see cref="P:Infragistics.Controls.Grids.IConditionalFormattingRule.StyleScope"/>.Cell</remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.IConditionalFormattingRule.RuleExecution">
            <summary>
            Gets which stage of the data limiting the <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/> will gather it's data.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.IConditionalFormattingRule.CreateProxy">
            <summary>
            Creates a new instance of the class which will execute the logic to populate and execute the conditional formatting logic for this <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.IConditionalFormattingRuleProxy">
            <summary>
            An interface that is used to executed conditional formatting logic.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.IConditionalFormattingRuleProxy.Parent">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRule"/> which this proxy is associated with.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.IConditionalFormattingRuleProxy.EvaluateCondition(System.Object,System.Object)">
            <summary>
            Evaluates the rule against the inputted cell and returns true if the rule was applied
            </summary>
            <param name="sourceDataObject"></param>
            <param name="sourceDataValue"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.DeferredScrollingSettings">
            <summary>
            An object that contains settings for using DeferredScrolling on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DeferredScrollingSettings.AllowDeferredScrollingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.DeferredScrollingSettings.AllowDeferredScrolling"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DeferredScrollingSettings.AllowDeferredScrolling">
            <summary>
            Gets/Sets whether DeferredScrolling is enabled. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DeferredScrollingSettings.DeferredScrollTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.DeferredScrollingSettings.DeferredScrollTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DeferredScrollingSettings.DeferredScrollTemplate">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.DataTemplate"/> that will be displayed while scrolling when deferred scrolling is enabled. 
            </summary>
            <remarks>
            Note: the DataContext of the <see cref="T:System.Windows.DataTemplate"/> will be a <see cref="T:Infragistics.ScrollTipInfo"/>.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Grids.DeferredScrollingSettings.DefaultColumnKeyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.DeferredScrollingSettings.DefaultColumnKey"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DeferredScrollingSettings.DefaultColumnKey">
            <summary>
            Gets/Sets the key of the <see cref="T:Infragistics.Controls.Grids.Column"/> that data will be pulled from when the <see cref="P:Infragistics.Controls.Grids.DeferredScrollingSettings.DeferredScrollTemplate"/> property isn't set for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DeferredScrollingSettings.GroupByDeferredScrollTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.DeferredScrollingSettings.GroupByDeferredScrollTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DeferredScrollingSettings.GroupByDeferredScrollTemplate">
            <summary>
            Gets/Sets  <see cref="T:System.Windows.DataTemplate"/> that will be displayed while scrolling through GroupBy rows for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
            <remarks>
            Note: the DataContext of the <see cref="T:System.Windows.DataTemplate"/> will be a <see cref="T:Infragistics.ScrollTipInfo"/>.
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.DeferredScrollingSettingsOverride">
            <summary>
            An object that contains settings for using DeferredScrolling on a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DeferredScrollingSettingsOverride.SettingsObject">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.SettingsBase"/> that is the counterpart to this <see cref="T:Infragistics.Controls.Grids.SettingsOverrideBase"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DeferredScrollingSettingsOverride.DeferredScrollTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.DeferredScrollingSettingsOverride.DeferredScrollTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DeferredScrollingSettingsOverride.DeferredScrollTemplate">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.DataTemplate"/> that will be displayed while scrolling when deferred scrolling is enabled. 
            </summary>
            <remarks>
            Note: the DataContext of the <see cref="T:System.Windows.DataTemplate"/> will be a <see cref="T:Infragistics.ScrollTipInfo"/>.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.DeferredScrollingSettingsOverride.DeferredScrollTemplateResolved">
            <summary>
            Gets the actual DeferredScrollTemplate value of this ColumnLayout.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DeferredScrollingSettingsOverride.DefaultColumnKeyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.DeferredScrollingSettingsOverride.DefaultColumnKey"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DeferredScrollingSettingsOverride.DefaultColumnKey">
            <summary>
            Gets/Sets the key of the <see cref="T:Infragistics.Controls.Grids.Column"/> that data will be pulled from when the <see cref="P:Infragistics.Controls.Grids.DeferredScrollingSettings.DeferredScrollTemplate"/> property isn't set for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DeferredScrollingSettingsOverride.DefaultColumnKeyResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.DeferredScrollingSettingsOverride.DefaultColumnKey"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DeferredScrollingSettingsOverride.GroupByDeferredScrollTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.DeferredScrollingSettingsOverride.GroupByDeferredScrollTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DeferredScrollingSettingsOverride.GroupByDeferredScrollTemplate">
            <summary>
            Gets/Sets  <see cref="T:System.Windows.DataTemplate"/> that will be displayed while scrolling through GroupBy rows for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
            <remarks>
            Note: the DataContext of the <see cref="T:System.Windows.DataTemplate"/> will be a <see cref="T:Infragistics.ScrollTipInfo"/>.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.DeferredScrollingSettingsOverride.GroupByDeferredScrollTemplateResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.DeferredScrollingSettingsOverride.GroupByDeferredScrollTemplate"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.EditingSettings">
            <summary>
            An object that contains settings for using Editing on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.EditingSettings.AllowEditingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.EditingSettings.AllowEditing"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditingSettings.AllowEditing">
            <summary>
            Gets/Sets if Editing is enabled, and if so, what mode it should be in for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.EditingSettingsBase">
            <summary>
            A class that controls the base editor settings for an object on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.EditingSettingsBase.IsF2EditingEnabledProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.EditingSettingsBase.IsF2EditingEnabled"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditingSettingsBase.IsF2EditingEnabled">
            <summary>
            Gets/Sets if pressing the F2 key will cause the ActiveCell to enter edit mode.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.EditingSettingsBase.IsEnterKeyEditingEnabledProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.EditingSettingsBase.IsEnterKeyEditingEnabled"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditingSettingsBase.IsEnterKeyEditingEnabled">
            <summary>
            Gets/Sets if pressing the Enter key will cause the ActiveCell to enter edit mode.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.EditingSettingsBase.IsMouseActionEditingEnabledProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.EditingSettingsBase.IsMouseActionEditingEnabled"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditingSettingsBase.IsMouseActionEditingEnabled">
            <summary>
            Gets/Sets the <see cref="T:Infragistics.Controls.Grids.MouseEditingAction"/> that can cause a <see cref="T:Infragistics.Controls.Grids.Cell"/> to enter edit mode.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.EditingSettingsBase.IsOnCellActiveEditingEnabledProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.EditingSettingsBase.IsOnCellActiveEditingEnabled"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditingSettingsBase.IsOnCellActiveEditingEnabled">
            <summary>
            Gets/Sets if a <see cref="T:Infragistics.Controls.Grids.Cell"/> will enter edit mode when it becomes active.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.EditingSettingsBaseOverride">
            <summary>
            A class that controls the editing settings for an object on the <see cref="T:Infragistics.Controls.Grids.ColumnLayout" />.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditingSettingsBaseOverride.SettingsObject">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.SettingsBase"/> that is the counterpart to this <see cref="T:Infragistics.Controls.Grids.SettingsOverrideBase"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.EditingSettingsBaseOverride.IsF2EditingEnabledProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.EditingSettingsBaseOverride.IsF2EditingEnabled"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditingSettingsBaseOverride.IsF2EditingEnabled">
            <summary>
            Gets/Sets if pressing the F2 key will cause the ActiveCell to enter edit mode, on a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditingSettingsBaseOverride.IsF2EditingEnabledResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.EditingSettingsBaseOverride.IsF2EditingEnabled"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.EditingSettingsBaseOverride.IsEnterKeyEditingEnabledProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.EditingSettingsBaseOverride.IsEnterKeyEditingEnabled"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditingSettingsBaseOverride.IsEnterKeyEditingEnabled">
            <summary>
            Gets/Sets if pressing the Enter ke will cause the ActiveCell to enter edit mode on a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditingSettingsBaseOverride.IsEnterKeyEditingEnabledResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.EditingSettingsBaseOverride.IsEnterKeyEditingEnabled"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.EditingSettingsBaseOverride.IsMouseActionEditingEnabledProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.EditingSettingsBaseOverride.IsMouseActionEditingEnabled"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditingSettingsBaseOverride.IsMouseActionEditingEnabled">
            <summary>
            Gets/Sets the <see cref="T:Infragistics.Controls.Grids.MouseEditingAction"/> that can cause a <see cref="T:Infragistics.Controls.Grids.Cell"/> to enter edit mode, on a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditingSettingsBaseOverride.IsMouseActionEditingEnabledResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.EditingSettingsBaseOverride.IsMouseActionEditingEnabled"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.EditingSettingsBaseOverride.IsOnCellActiveEditingEnabledProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.EditingSettingsBaseOverride.IsOnCellActiveEditingEnabled"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditingSettingsBaseOverride.IsOnCellActiveEditingEnabled">
            <summary>
            Gets/Sets if a <see cref="T:Infragistics.Controls.Grids.Cell"/> will enter edit mode when it becomes active, on a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditingSettingsBaseOverride.IsOnCellActiveEditingEnabledResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.EditingSettingsBaseOverride.IsOnCellActiveEditingEnabled"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.EditingSettingsBaseOverride.ResolveEditingType">
            <summary>
            Determines what <see cref="T:Infragistics.Controls.Grids.EditingType"/> will be supported by the <see cref="T:Infragistics.Controls.Grids.EditingSettingsBaseOverride"/> object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.EditingSettingsOverride">
            <summary>
            An object that contains settings for using Editing on a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditingSettingsOverride.SettingsObject">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.SettingsBase"/> that is the counterpart to this <see cref="T:Infragistics.Controls.Grids.SettingsOverrideBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.EditingSettingsOverride.ResolveEditingType">
            <summary>
            Determines what <see cref="T:Infragistics.Controls.Grids.EditingType"/> will be supported by the <see cref="T:Infragistics.Controls.Grids.EditingSettingsBaseOverride"/> object.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Infragistics.Controls.Grids.EditingSettingsOverride.AllowEditingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.EditingSettingsOverride.AllowEditing"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditingSettingsOverride.AllowEditing">
            <summary>
            Gets/Sets if Editing is enabled, and if so, what mode it should be in for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditingSettingsOverride.AllowEditingResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.EditingSettingsOverride.AllowEditing"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ExpansionIndicatorSettings">
            <summary>
            An object that contains settings for using ExpansionIndicatorSettings on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ExpansionIndicatorSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ExpansionIndicatorSettings"/> class.
            </summary>		
        </member>
        <member name="F:Infragistics.Controls.Grids.ExpansionIndicatorSettings.HeaderStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ExpansionIndicatorSettings.HeaderStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ExpansionIndicatorSettings.HeaderStyle">
            <summary>
            Gets/sets the <see cref="T:System.Windows.Style"/> that will be used on the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorHeaderCellControl"/> objects of the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ExpansionIndicatorSettings.FooterStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ExpansionIndicatorSettings.FooterStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ExpansionIndicatorSettings.FooterStyle">
            <summary>
            Gets/sets the <see cref="T:System.Windows.Style"/> that will be used on the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorFooterCellControl"/> objects of the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ExpansionIndicatorSettingsOverride">
            <summary>
            An object that contains settings for using ExpansionIndicators on a particular  <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ExpansionIndicatorSettingsOverride.SettingsObject">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.SettingsBase"/> that is the counterpart to this <see cref="T:Infragistics.Controls.Grids.SettingsOverrideBase"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ExpansionIndicatorSettingsOverride.HeaderStyleProperty">
            <summary>
            Identifies the <see cref="T:System.Windows.Style"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ExpansionIndicatorSettingsOverride.HeaderStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that should be applied to the visual object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ExpansionIndicatorSettingsOverride.HeaderStyleResolved">
            <summary>
            Gets the actual <see cref="T:System.Windows.Style"/> of the visual object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ExpansionIndicatorSettingsOverride.FooterStyleProperty">
            <summary>
            Identifies the <see cref="T:System.Windows.Style"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ExpansionIndicatorSettingsOverride.FooterStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that should be applied to the visual object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ExpansionIndicatorSettingsOverride.FooterStyleResolved">
            <summary>
            Gets the actual <see cref="T:System.Windows.Style"/> of the visual object.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.FillerColumnSettings">
            <summary>
            An object that contains settings for the <see cref="T:Infragistics.Controls.Grids.Primitives.FillerColumn"/> of all ColumnLayouts in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FillerColumnSettings.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Controls.Grids.FillerColumnSettings"/> object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FillerColumnSettings.HeaderStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FillerColumnSettings.HeaderStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FillerColumnSettings.HeaderStyle">
            <summary>
            Gets/sets the <see cref="T:System.Windows.Style"/> that will be used on the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCellControl"/> object of the <see cref="T:Infragistics.Controls.Grids.Primitives.FillerColumn"/>  on all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the XamGrid.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FillerColumnSettings.FooterStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FillerColumnSettings.FooterStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FillerColumnSettings.FooterStyle">
            <summary>
            Gets/sets the <see cref="T:System.Windows.Style"/> that will be used on the <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCellControl"/> object of the <see cref="T:Infragistics.Controls.Grids.Primitives.FillerColumn"/>  on all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the XamGrid.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.FillerColumnSettingsOverride">
            <summary>
            An object that contains settings for the <see cref="T:Infragistics.Controls.Grids.Primitives.FillerColumn"/> of a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FillerColumnSettingsOverride.SettingsObject">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.SettingsBase"/> that is the counterpart to this <see cref="T:Infragistics.Controls.Grids.SettingsOverrideBase"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FillerColumnSettingsOverride.HeaderStyleProperty">
            <summary>
            Identifies the <see cref="T:System.Windows.Style"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FillerColumnSettingsOverride.HeaderStyle">
            <summary>
            Gets/sets the <see cref="T:System.Windows.Style"/> that will be used on the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCellControl"/> object of the <see cref="T:Infragistics.Controls.Grids.Primitives.FillerColumn"/>  on a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FillerColumnSettingsOverride.HeaderStyleResolved">
            <summary>
            Gets the actual <see cref="T:System.Windows.Style"/> of the visual object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FillerColumnSettingsOverride.FooterStyleProperty">
            <summary>
            Identifies the <see cref="T:System.Windows.Style"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FillerColumnSettingsOverride.FooterStyle">
            <summary>
            Gets/sets the <see cref="T:System.Windows.Style"/> that will be used on the <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCellControl"/> object of the <see cref="T:Infragistics.Controls.Grids.Primitives.FillerColumn"/>  on a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FillerColumnSettingsOverride.FooterStyleResolved">
            <summary>
            Gets the actual <see cref="T:System.Windows.Style"/> of the visual object.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.CellBaseCommandBase">
            <summary>
            Base class for all commands that deal with a <see cref="T:Infragistics.Controls.Grids.CellBase"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellBaseCommandBase.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellBaseCommandBase.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param propertyName="parameter">The <see cref="T:Infragistics.Controls.Grids.CellBase"/> object that will be executed against.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellBaseCommandBase.ExecuteCommand(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Executes the specific command on the specified <see cref="T:Infragistics.Controls.Grids.CellBase"/>
            </summary>
            <param propertyName="col"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.ConditionGroup">
            <summary>
            A derived <see cref="T:Infragistics.CustomComparisonCondition"/> which groups other <see cref="T:Infragistics.IFilterCondition"/> objects together under a single logical operator.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionGroup.#ctor(Infragistics.IRecordFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ConditionGroup"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionGroup.Conditions">
            <summary>
            Gets the collection of filter conditions which will be applied to this column
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionGroup.GetCurrentExpression(Infragistics.FilterContext,System.Object)">
            <summary>
            Generates the current expression for this <see cref="T:Infragistics.ComparisonConditionBase"/> using the inputted context.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionGroup.GetCurrentExpression">
            <summary>
            Generates the current expression for this <see cref="T:Infragistics.ComparisonConditionBase"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeNoInputBaseFilterOperand">
            <summary>
            A class that defines common behavior for <see cref="T:System.DateTime"/> based <see cref="T:Infragistics.Controls.Grids.FilterOperand"/>s that do not require user input.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeNoInputBaseFilterOperand.RequiresFilteringInput">
            <summary>
            Gets if the then filter requires input to be applied or is standalone.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeAfterFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> which will do a DateTime After filter.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeAfterFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeAfterFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeBeforeFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> which will do a DateTime Before filter.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeBeforeFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeBeforeFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeTodayFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> which will do a DateTime Today filter.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeTodayFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeTodayFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeTomorrowFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> which will do a DateTime Tomorrow filter.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeTomorrowFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeTomorrowFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeYesterdayFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> which will do a DateTime Yesterday filter.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeYesterdayFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeYesterdayFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeNextWeekFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> which will do a DateTime Next Week filter.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeNextWeekFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeNextWeekFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeThisWeekFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> which will do a DateTime This Week filter.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeThisWeekFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeThisWeekFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeLastWeekFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> which will do a DateTime Last Week filter.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeLastWeekFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeLastWeekFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeNextMonthFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> which will do a DateTime Next Month filter.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeNextMonthFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeNextMonthFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeThisMonthFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> which will do a DateTime This Month filter.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeThisMonthFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeThisMonthFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeLastMonthFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> which will do a DateTime Last Month filter.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeLastMonthFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeLastMonthFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeNextQuarterFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> which will do a DateTime Next Quarter filter.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeNextQuarterFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeNextQuarterFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeThisQuarterFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> which will do a DateTime This Quarter filter.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeThisQuarterFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeThisQuarterFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeLastQuarterFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> which will do a DateTime Last Quarter filter.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeLastQuarterFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeLastQuarterFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeNextYearFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> which will do a DateTime Next Year filter.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeNextYearFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeNextYearFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeThisYearFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> which will do a DateTime This Year filter.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeThisYearFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeThisYearFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeLastYearFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> which will do a DateTime Last Year filter.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeLastYearFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeLastYearFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeYearToDateFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> which will do a DateTime Year to Date filter.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeYearToDateFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeYearToDateFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeJanuaryFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> that will filter out all dates which are not in January.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeJanuaryFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeJanuaryFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeFebruaryFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> that will filter out all dates which are not in February.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeFebruaryFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeFebruaryFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeMarchFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> that will filter out all dates which are not in March.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeMarchFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeMarchFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeAprilFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> that will filter out all dates which are not in April.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeAprilFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeAprilFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeMayFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> that will filter out all dates which are not in May.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeMayFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeMayFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeJuneFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> that will filter out all dates which are not in June.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeJuneFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeJuneFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeJulyFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> that will filter out all dates which are not in July.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeJulyFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeJulyFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeAugustFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> that will filter out all dates which are not in August.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeAugustFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeAugustFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeSeptemberFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> that will filter out all dates which are not in September.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeSeptemberFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeSeptemberFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeOctoberFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> that will filter out all dates which are not in October.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeOctoberFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeOctoberFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeNovemberFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> that will filter out all dates which are not in November.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeNovemberFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeNovemberFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeDecemberFilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> that will filter out all dates which are not in December.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeDecemberFilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeDecemberFilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeQuarter1FilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> that will filter out all dates which are not in Quarter1.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeQuarter1FilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeQuarter1FilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeQuarter2FilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> that will filter out all dates which are not in Quarter2.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeQuarter2FilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeQuarter2FilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeQuarter3FilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> that will filter out all dates which are not in Quarter3.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeQuarter3FilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeQuarter3FilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateTimeQuarter4FilterOperand">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> that will filter out all dates which are not in Quarter4.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeQuarter4FilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateTimeQuarter4FilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.FilterColumnSettings">
            <summary>
            An object that controls filtering settings for a particular <see cref="P:Infragistics.Controls.Grids.FilterColumnSettings.Column"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FilterColumnSettings.#ctor(Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.FilterColumnSettings"/> class.
            </summary>
            <param name="column">The <see cref="P:Infragistics.Controls.Grids.FilterColumnSettings.Column"/> object which this settings object will be associated.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.FilterColumnSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.FilterColumnSettings"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterColumnSettings.FilteringOperand">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> which will be used during ColumnLayout filtering.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterColumnSettings.FilteringOperandResolved">
            <summary>
            Gets the resolved <see cref="T:Infragistics.Controls.Grids.FilterOperand"/>.  This value takes into account default values.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterColumnSettings.FilterCaseSensitive">
            <summary>
            Gets / sets if the filters applied are case sensitive.
            </summary>
            <remarks>This setting is only applied when the <see cref="P:Infragistics.Controls.Grids.ColumnBase.DataType"/> evaluates to <see cref="T:System.String"/> </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterColumnSettings.FilterCellValue">
            <summary>
            Gets / sets the value that is currently being used to filter the rows when using a <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRow"/>.
            </summary>
            <remarks>This value is only used when the <see cref="T:Infragistics.Controls.Grids.FilteringScope"/> resolves to ColumnLayout.</remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterColumnSettings.RowFilterOperands">
            <summary>
            Gets the filter operands which are available for this <see cref="P:Infragistics.Controls.Grids.FilterColumnSettings.Column"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterColumnSettings.FilterMenuClearFiltersString">
            <summary>
            Gets / sets the string value for the FilterMenu's Clear Filter text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterColumnSettings.FilterMenuClearFiltersStringResolved">
            <summary>
            Gets the string that will be used for the <see cref="P:Infragistics.Controls.Grids.FilterColumnSettings.FilterMenuClearFiltersString"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterColumnSettings.FilterMenuTypeSpecificFiltersString">
            <summary>
            Gets / sets the string that should be used for the type specific 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilterColumnSettings.FilterMenuCustomFilteringButtonVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilterColumnSettings.FilterMenuCustomFilteringButtonVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterColumnSettings.FilterMenuCustomFilteringButtonVisibility">
            <summary>
            Gets/Sets FilterMenuCustomFilteringButtonVisibility for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterColumnSettings.FilterMenuCustomFilteringButtonVisibilityResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.FilterColumnSettings.FilterMenuCustomFilteringButtonVisibility"/> property for a particular <see cref="T:Infragistics.Controls.Grids.FilterColumnSettings"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilterColumnSettings.FilterMenuFormatStringProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilterColumnSettings.FilterMenuFormatString"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterColumnSettings.FilterMenuFormatString">
            <summary>
            Gets / set the string that will be used to format items in the FilterMenu.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterColumnSettings.FilterMenuFormatStringResolved">
            <summary>
            Gets the string that will be used as to format the entries in the FilterMenu.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilterColumnSettings.FilterRowCellStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilterColumnSettings.FilterRowCellStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterColumnSettings.FilterRowCellStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that will be used for the <see cref="T:Infragistics.Controls.Grids.CellControl"/> objects on the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRow"/> for this <see cref="T:Infragistics.Controls.Grids.ColumnBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterColumnSettings.FilterMenuOperands">
            <summary>
            Gets a List of <see cref="T:Infragistics.Controls.Grids.FilterMenuTrackingObject"/> which will be displayed by the FilterMenu.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterColumnSettings.SilentUpdate">
            <summary>
            Gets / sets if the filters being built by modifing this object should call for a rebind of data.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterColumnSettings.Column">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.FilterColumnSettings.Column"/> object that this settings object is applying to.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FilterColumnSettings.ValidateFilterOperands">
            <summary>
            Called to ensure that the operand list that is set, if it was autogenerated, is correct with respect to the <see cref="P:Infragistics.Controls.Grids.ColumnBase.DataType"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FilterColumnSettings.ValidateFilterMenuOperands">
            <summary>
            Called to ensure that the filter menu list that is set, if it was autogenerated, is correct with respect to the <see cref="P:Infragistics.Controls.Grids.ColumnBase.DataType"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FilterColumnSettings.ValidateResolvedProperties">
            <summary>
            Resolved properties may have changed values from parent levels which won't be seen at things bound at this level.  So force the Resolved properties to 
            reevaluate and send values through their bindings.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FilterColumnSettings.OnLoadedCatchUp">
            <summary>
            Designed to be called during the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> OnLoaded to allow any processing         
            due to objects added in the XAML but not able to be processed until other objects populated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FilterColumnSettings.Reset">
            <summary>
            When overridden in derived classes allows the <see cref="T:Infragistics.Controls.Grids.ColumnSettings"/> object a chance to clean itself.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterColumnSettings.PropertiesToIgnore">
            <summary>
            Gets a List of properties that shouldn't be saved when the PersistenceManager goes to save them.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterColumnSettings.PriorityProperties">
            <summary>
            Gets a List of properties that should be applied, before even trying to look at any other property on the object.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.FilteringSettings">
            <summary>
            A class that controls the filter row editor settings for an object on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FilteringSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.FilteringSettings"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettings.AllowFilteringProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettings.AllowFiltering"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettings.AllowFiltering">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.FilterUIType"/> which will be provided for filtering.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettings.AllowFilterRowProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettings.AllowFilterRow"/> dependency property. 
            </summary>		
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettings.AllowFilterRow">
            <summary>
            Gets / sets where the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRow"/> will be visible for the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettings.ExpansionIndicatorStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettings.ExpansionIndicatorStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettings.ExpansionIndicatorStyle">
            <summary>
            Gets/sets the <see cref="P:Infragistics.Controls.Grids.FilteringSettings.Style"/> that will be used on the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowExpansionIndicatorCellControl"/> objects of the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettings.RowFiltersCollection">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.FilteringSettings.RowFiltersCollection"/> which is applied to the top level <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettings.StyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettings.Style"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettings.Style">
            <summary>
            Gets/Sets the Style for a FilterRowCell for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
            <remarks>This is only used when the FilterRow is used as the UI filtering mechanism.</remarks>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettings.RowSelectorStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettings.RowSelectorStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettings.RowSelectorStyle">
            <summary>
            Gets/Sets the style that will be applied to the RowSelector of an <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/> for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettings.FilteringScopeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettings.FilteringScope"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettings.FilteringScope">
            <summary>
            Gets/Sets RowFilteringScope for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettings.FilterRowHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettings.FilterRowHeight"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettings.FilterRowHeight">
            <summary>
            Gets/Sets the <see cref="T:Infragistics.Controls.Grids.RowHeight"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRow"/> for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettings.FilterMenuClearFiltersStringProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettings.FilterMenuClearFiltersString"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettings.FilterMenuClearFiltersString">
            <summary>
            Gets / sets the string that will be used for the clear text on the FilterMenu.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettings.FilterMenuCustomFilteringButtonVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettings.FilterMenuCustomFilteringButtonVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettings.FilterMenuCustomFilteringButtonVisibility">
            <summary>
            Gets/Sets FilterMenuCustomFilteringButtonVisibility for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettings.FilterSelectionControlStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettings.FilterSelectionControlStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettings.FilterSelectionControlStyle">
            <summary>
            Gets/Sets the style that will be used for the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterSelectionControl"/> for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettings.CustomFilterDialogStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettings.CustomFilterDialogStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettings.CustomFilterDialogStyle">
            <summary>
            Gets/Sets the style that will be used for the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl"/> for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettings.SelectAllTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettings.SelectAllText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettings.SelectAllText">
            <summary>
            Gets/Sets the text for the Select All Checkbox, in the FilterMenu.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettings.EmptyValueStringProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettings.EmptyValueString"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettings.EmptyValueString">
            <summary>
            Gets/Sets the text that is displayed for values in the FilterMenu that are equal to String.Empty
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettings.NullValueStringProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettings.NullValueString"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettings.NullValueString">
            <summary>
            Gets/Sets the text that is displayed for values in the Filtermenu that are equal to Null
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettings.FilterMenuSelectionListGenerationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettings.FilterMenuSelectionListGeneration"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettings.FilterMenuSelectionListGeneration">
            <summary>
            Gets/Sets the <see cref="T:Infragistics.Controls.Grids.FilterMenuCumulativeSelectionList"/> for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettings.PropertiesToIgnore">
            <summary>
            Gets a List of properties that shouldn't be saved when the PersistenceManager goes to save them.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettings.PriorityProperties">
            <summary>
            Gets a List of properties that should be applied, before even trying to look at any other property on the object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FilteringSettings.FinishedLoadingPersistence">
            <summary>
            Allows an object to perform an operation, after it's been loaded.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.FilteringSettingsOverride">
            <summary>
            A class that controls the editing settings for a filter row on the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.SettingsObject">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.SettingsBase"/> that is the counterpart to this <see cref="T:Infragistics.Controls.Grids.SettingsOverrideBase"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettingsOverride.AllowFilteringProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettingsOverride.AllowFiltering"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.AllowFiltering">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.FilterUIType"/> which will be provided for filtering.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.AllowFilteringResolved">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.FilterUIType"/> which will be provided for filtering.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettingsOverride.AllowFilterRowProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettingsOverride.AllowFilterRow"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.AllowFilterRow">
            <summary>
            Gets / sets where the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRow"/> will be located.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.AllowFilterRowResolved">
            <summary>
            Gets where the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRow"/> will be located.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettingsOverride.ExpansionIndicatorStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettingsOverride.Style"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.ExpansionIndicatorStyle">
            <summary>
            Gets/Sets the <see cref="P:Infragistics.Controls.Grids.FilteringSettingsOverride.Style"/> that should be applied to the visual object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.ExpansionIndicatorStyleResolved">
            <summary>
            Gets the actual <see cref="P:Infragistics.Controls.Grids.FilteringSettingsOverride.Style"/> of the visual object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettingsOverride.StyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettingsOverride.Style"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.Style">
            <summary>
            Gets/Sets the Style for a FilterRowCell for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
            <remarks>This is only used when the FilterRow is used as the UI filtering mechanism.</remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.StyleResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.FilteringSettingsOverride.Style"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettingsOverride.FilterSelectionControlStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettingsOverride.FilterSelectionControlStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.FilterSelectionControlStyle">
            <summary>
            Gets/Sets the style that will be used for the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterSelectionControl"/> for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.FilterSelectionControlStyleResolved">
            <summary>
            Gets the actual <see cref="P:Infragistics.Controls.Grids.FilteringSettingsOverride.Style"/> of the visual object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettingsOverride.CustomFilterDialogStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettingsOverride.CustomFilterDialogStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.CustomFilterDialogStyle">
            <summary>
            Gets/Sets the style that will be used for the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl"/> for a particual <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.CustomFilterDialogStyleResolved">
            <summary>
            Gets the actual <see cref="P:Infragistics.Controls.Grids.FilteringSettingsOverride.Style"/> of the visual object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettingsOverride.RowSelectorStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettingsOverride.RowSelectorStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.RowSelectorStyle">
            <summary>
            Gets/Sets the style that will be applied to the RowSelector of an <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRow"/> for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.RowSelectorStyleResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.FilteringSettingsOverride.RowSelectorStyle"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettingsOverride.FilteringScopeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettingsOverride.FilteringScope"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.FilteringScope">
            <summary>
            Gets/Sets RowFilteringScope for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.FilteringScopeResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.FilteringSettingsOverride.FilteringScope"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.RowFiltersCollection">
            <summary>
            Gets a <see cref="P:Infragistics.Controls.Grids.FilteringSettingsOverride.RowFiltersCollection"/> object that contains the filters being applied to this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
            <remarks>
            This collection is used when the <see cref="P:Infragistics.Controls.Grids.FilteringSettingsOverride.FilteringScope"/> is set to ColumnLayout.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.FilteringSettingsOverride.ResolveEditingType">
            <summary>
            Determines what <see cref="T:Infragistics.Controls.Grids.EditingType"/> will be supported by the <see cref="T:Infragistics.Controls.Grids.EditingSettingsBaseOverride"/> object.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettingsOverride.FilterRowHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettingsOverride.FilterRowHeight"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.FilterRowHeight">
            <summary>
            Gets/Sets the <see cref="T:Infragistics.Controls.Grids.RowHeight"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRow"/> for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.FilterRowHeightResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.FilteringSettingsOverride.FilterRowHeight"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettingsOverride.FilterMenuClearFiltersStringProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettingsOverride.FilterMenuClearFiltersString"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.FilterMenuClearFiltersString">
            <summary>
            Gets / sets the string value for the FilterMenu's Clear Filter text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.FilterMenuClearFiltersStringResolved">
            <summary>
            Gets the string will be used for the clear filter option of the FilterMenu feature.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringSettingsOverride.FilterMenuCustomFilteringButtonVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FilteringSettingsOverride.FilterMenuCustomFilteringButtonVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.FilterMenuCustomFilteringButtonVisibility">
            <summary>
            Gets/Sets FilterMenuCustomFilteringButtonVisibility for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteringSettingsOverride.FilterMenuCustomFilteringButtonVisibilityResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.FilteringSettingsOverride.FilterMenuCustomFilteringButtonVisibility"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FilteringSettingsOverride.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Infragistics.Controls.Grids.FilteringSettingsOverride"/> and optionally
            releases the managed resources.
            </summary>
            <param propertyName="disposing">
            true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Infragistics.Controls.Grids.FilteringSettingsOverride.Dispose">
            <summary>
            Releases the unmanaged and managed resources used by the <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGridFilteringCommand">
            <summary>
            Enum describing commands available on the filter control
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridFilteringCommand.ClearFilters">
            <summary>
            Removes filters for the given column
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGridFilteringCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Grids.Primitives.FilterControl"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridFilteringCommandSource.CommandType">
            <summary>
            The type of command that will be executed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridFilteringCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGridFilterMenuCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Grids.Primitives.FilterSelectionControl"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridFilterMenuCommandSource.CommandTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGridFilterMenuCommandSource.CommandType"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridFilterMenuCommandSource.CommandType">
            <summary>
            The type of command that will be executed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridFilterMenuCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGridFilterMenuFilterTextBoxCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Grids.Primitives.FilterTextBox"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridFilterMenuFilterTextBoxCommandSource.FilterSelectionControlProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGridFilterMenuFilterTextBoxCommandSource.CommandType"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridFilterMenuFilterTextBoxCommandSource.FilterSelectionControl">
            <summary>
            The type of command that will be executed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridFilterMenuFilterTextBoxCommandSource.CommandTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGridFilterMenuFilterTextBoxCommandSource.CommandType"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridFilterMenuFilterTextBoxCommandSource.CommandType">
            <summary>
            The type of command that will be executed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridFilterMenuFilterTextBoxCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.FilterMenuTrackingObject">
            <summary>
            An object that will be used aby the FilterMenu of the FilterSelectionControl to display filters.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FilterMenuTrackingObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.FilterMenuTrackingObject"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FilterMenuTrackingObject.#ctor(Infragistics.Controls.Grids.FilterOperand)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.FilterMenuTrackingObject"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterMenuTrackingObject.FilterOperands">
            <summary>
            Gets the List of <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> objects which can be displayed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterMenuTrackingObject.IsSeparator">
            <summary>
            Gets / sets if the <see cref="T:Infragistics.Controls.Grids.FilterMenuTrackingObject"/> is a visual separator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterMenuTrackingObject.IsCheckable">
            <summary>
            Gets if this <see cref="T:Infragistics.Controls.Grids.FilterMenuTrackingObject"/> is checkable, or if it is a parent menu option.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterMenuTrackingObject.Label">
            <summary>
            Gets / sets the text that will be displayed on the menu.
            </summary>        
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterMenuTrackingObject.IsChecked">
            <summary>
            Gets / sets if the option is currently checked.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterMenuTrackingObject.Children">
            <summary>
            Gets the List of <see cref="T:Infragistics.Controls.Grids.FilterMenuTrackingObject"/>s that will be child menu options.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterMenuTrackingObject.FilterColumnSettings">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.FilterMenuTrackingObject.FilterColumnSettings"/> object that is associated with this <see cref="T:Infragistics.Controls.Grids.FilterMenuTrackingObject"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FilterMenuTrackingObject.OnPropertyChanged(System.String)">
            <summary>
            Invoked when a property changes on the <see cref="T:Infragistics.Controls.Grids.TrackIsChecked"/> object.
            </summary>
            <param name="name">The name of the property that has changed.</param>
        </member>
        <member name="E:Infragistics.Controls.Grids.FilterMenuTrackingObject.PropertyChanged">
            <summary>
            Fired when a property changes on the <see cref="T:Infragistics.Controls.Grids.TrackIsChecked"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterMenuTrackingObject.PropertiesToIgnore">
            <summary>
            Gets a List of properties that shouldn't be saved when the PersistenceManager goes to save them.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterMenuTrackingObject.PriorityProperties">
            <summary>
            Gets a List of properties that should be applied, before even trying to look at any other property on the object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FilterMenuTrackingObject.FinishedLoadingPersistence">
            <summary>
            Allows an object to perform an operation, after it's been loaded.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.FilterOperandCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FilterOperandCollection.Remove(Infragistics.ComparisonOperator)">
            <summary>
            Removes an object based on the ComparisonOperator.
            </summary>
            <param name="condition"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterOperandCollection.Item(Infragistics.ComparisonOperator)">
            <summary>
            Returns the first object in the collection that shares the <see cref="T:Infragistics.ComparisonOperator"/>.
            </summary>
            <param name="op"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterOperandCollection.Item(System.Type)">
            <summary>
            Returns the first object in the collection that shares the Type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterOperandCollection.Item(System.Int32)">
            <summary>
            Gets the FilterOperand in the collection at the given index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.FilterOperand">
            <summary>
            A control which contains the information necessary to display the available filtering options.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FilterOperand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterOperand.DisplayName">
            <summary>
            Gets the string that will be displayed in the drop down for this <see cref="T:Infragistics.Controls.Grids.FilterOperand"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterOperand.Icon">
            <summary>
            Gets / sets the DataTemplate that will be used to visually indicate the filter option.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterOperand.IconResolved">
            <summary>
            Gets the <see cref="T:System.Windows.DataTemplate"/> which will be used as the graphical icon.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterOperand.RequiresFilteringInput">
            <summary>
            Gets if the then filter requires input to be applied or is standalone.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterOperand.DisplayNameWithInputFormat">
            <summary>
            Gets the format string that will be used to construct the string representation of the
            FilterOperand with its input.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>						
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterOperand.XamWebGrid">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.XamGrid"/> which will provide the icons for this <see cref="T:Infragistics.Controls.Grids.FilterOperand"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FilterOperand.FilteringExpression(System.Object)">
            <summary>
            Returns a Linq Expression which will be used for filtering.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.EqualsOperand">
            <summary>
            A class with the information for the Equals operand
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EqualsOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EqualsOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.NotEqualsOperand">
            <summary>
            A class with the information for the NotEquals operand
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.NotEqualsOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.NotEqualsOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.GreaterThanOperand">
            <summary>
            A class with the information for the GreaterThan operand
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GreaterThanOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GreaterThanOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.GreaterThanOrEqualOperand">
            <summary>
            A class with the information for the GreaterThanOrEquals operand
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GreaterThanOrEqualOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GreaterThanOrEqualOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.LessThanOperand">
            <summary>
            A class with the information for the LessThan operand
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.LessThanOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.LessThanOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.LessThanOrEqualOperand">
            <summary>
            A class with the information for the LessThanOrEquals operand
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.LessThanOrEqualOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.LessThanOrEqualOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.StartsWithOperand">
            <summary>
            A class with the information for the StartsWith operand
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.StartsWithOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.StartsWithOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.EndsWithOperand">
            <summary>
            A class with the information for the EndsWith operand
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EndsWithOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EndsWithOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ContainsOperand">
            <summary>
            A class with the information for the Contains operand
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ContainsOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ContainsOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DoesNotContainOperand">
            <summary>
            A class with the information for the DoesNotContain operand
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DoesNotContainOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DoesNotContainOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DoesNotStartWithOperand">
            <summary>
            A class with the information for the DoesNotStartWith operand
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DoesNotStartWithOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DoesNotStartWithOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DoesNotEndWithOperand">
            <summary>
            A class with the information for the DoesNotEndWith operand
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DoesNotEndWithOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DoesNotEndWithOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.InOperand">
            <summary>
            A class with the information for the In operand
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.InOperand.ComparisonOperatorValue">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.InOperand.DefaultDisplayName">
            <summary>
            Gets the string that will be displayed, when the DisplayName is not set. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.FilterSelectionControlCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Grids.Primitives.FilterSelectionControl"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterSelectionControlCommandSource.CommandType">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.FilterSelectionControlCommand"/> which is to be executed by the command.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FilterSelectionControlCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.FilterSelectionControlCommand">
            <summary>
            An enum describing the commands which can be executed on the <see cref="T:Infragistics.Controls.Grids.FilterSelectionControlCommandSource"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilterSelectionControlCommand.AcceptChanges">
            <summary>
            Accepts the changes from the control.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilterSelectionControlCommand.ClearSelectedItems">
            <summary>
            Clears the items selected in the filterable checkbox list. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ClearSelectedItemsCommand">
            <summary>
            A command which will unselect all the selected options in FilterSelectionControl.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ClearSelectedItemsCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ClearSelectedItemsCommand.Execute(System.Object)">
            <summary>
            Runs the command with the given parameter.
            </summary>
            <param name="parameter">An object containing any parameters for the command.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.CustomFilteringDialogCommand">
            <summary>
            An enum describing the commands which can be executed on the <see cref="T:Infragistics.Controls.Grids.CustomFilteringDialogCommandSource"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.CustomFilteringDialogCommand.ShowCustomFilterDialog">
            <summary>
            Shows the custome filter dialog.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.CustomFilteringDialogCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CustomFilteringDialogCommandSource.CommandType">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.CustomFilteringDialogCommand"/> which is to be executed by the command.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.CustomFilteringDialogCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.AcceptCustomFilterDialogChangesCommand">
            <summary>
            A command which will be used for the Accept action on the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.AcceptCustomFilterDialogChangesCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.AcceptCustomFilterDialogChangesCommand.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.CloseCustomFilterDialogCommand">
            <summary>
            A command that will close the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnFilterDialogControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.CloseCustomFilterDialogCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.CloseCustomFilterDialogCommand.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateFilterObjectStringFilter">
            <summary>
            A <see cref="T:Infragistics.CustomComparisonCondition"/> which will do a regular expression based contains search
            on various parts of a date field for a given text string.
            </summary>
            <remarks>This class is designed for internal use only.</remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateFilterObjectStringFilter.DateFilterObjectType">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.DateFilterObjectStringFilter.DateFilterObjectType"/> which will limit the search.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.DateFilterObjectStringFilter.GetCurrentExpression">
            <summary>
            Generates the current expression for this <see cref="T:Infragistics.ComparisonConditionBase"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.DateFilterObjectStringFilter.GetCurrentExpression(Infragistics.FilterContext,System.Object)">
            <summary>
            Generates the current expression for this <see cref="T:Infragistics.ComparisonConditionBase"/> using the inputted context.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.FilterValueProxyStringFilter">
            <summary>
            A <see cref="T:Infragistics.CustomComparisonCondition"/> which will do a regular expression based contains search over
            a given field.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FilterValueProxyStringFilter.GetCurrentExpression(Infragistics.FilterContext,System.Object)">
            <summary>
            Generates the current expression for this <see cref="T:Infragistics.ComparisonConditionBase"/> using the inputted context.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.FilterValueProxyRowsFilter">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.RowsFilter"/> object designed for filtering <see cref="T:Infragistics.Controls.Grids.Primitives.FilterValueProxy"/> objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FilterValueProxyRowsFilter.#ctor(System.Type,Infragistics.CachedTypedInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.FilterValueProxyRowsFilter"/> class.
            </summary>
            <param name="objectType"></param>
            <param name="typeInfo"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.FilterValueProxyRowsFilter.GetCurrentExpression">
            <summary>
            Generates the current expression for this <see cref="T:Infragistics.Controls.Grids.RowsFilter"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterValueProxyRowsFilter.FieldName">
            <summary>
            Gets the field name of the property that is being filtered on.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilterValueProxyRowsFilter.FieldType">
            <summary>
            Gets the Type of the FieldName property.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Features.Filtering.CheckedItemsOutsideVisibleRangeCache">
            <summary>
            This class encapsulates a list which represents the checked items in a Excel style filter, which aren't shown in it.
            For example, since the checkbox list can only show 10 000 items, if we have more items than that and we have checked (through the filter search box)
            we previously never kept track of that item, once the filter is shown again. This would cause the filter to think no item is checked and it
            would try to filter the grid on a query consisting of 10 000 if not equals clauses.
            In order to prevent this we need a list of the items that were previously checked, but aren't currently displayed in the grid's filter.
            The goal of this class is to properly conduct the access to this list and also to limit it only to the normal filter and disable it for the DateTime filter.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.RowFiltersCollection">
            <summary>
            A Collection of RowFilter objects which will be used to limit the amount of data currently visible.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowFiltersCollection.GetRowFilterByColumnKey(System.String)">
            <summary>
            Returns a RowFilter by its Key value.
            </summary>
            <param propertyName="columnKey"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowFiltersCollection.Item(System.String)">
            <summary>
            Accesses the members of the collection via the Key value.
            </summary>
            <param propertyName="key"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowFiltersCollection.OnItemAdded(System.Int32,Infragistics.IRecordFilter)">
            <summary>
            Invoked when a <see cref="T:Infragistics.IRecordFilter"/> is added at the specified index.
            </summary>
            <param propertyName="index"></param>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowFiltersCollection.AddItem(System.Int32,Infragistics.IRecordFilter)">
            <summary>
            Adds the item at the specified index. 
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowFiltersCollection.OnItemRemoved(System.Int32,Infragistics.IRecordFilter)">
            <summary>
            Invoked when a <see cref="T:Infragistics.IRecordFilter"/> is removed at the specified index.
            </summary>
            <param propertyName="index"></param>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowFiltersCollection.ResetItems">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.RowsFilter">
            <summary>
            An object that describes how the rows should be filtered.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsFilter.Conditions">
            <summary>
            Gets the collection of filter conditions which will be applied to this column
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsFilter.ObjectType">
            <summary>
            Gets the Type of the object that is being processed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsFilter.ObjectTypedInfo">
            <summary>
            The Type of the object along with any PropertyDescriptors.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsFilter.Column">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.RowsFilter.Column"/> which is being processed on.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsFilter.FieldName">
            <summary>
            Gets the field name of the property that is being filtered on.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsFilter.FieldType">
            <summary>
            Gets the Type of the FieldName property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsFilter.#ctor(System.Type,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.RowsFilter"/> class.
            </summary>
            <param propertyName="column">The <see cref="P:Infragistics.Controls.Grids.RowsFilter.Column"/> object these filters will be applied to.</param>
            <param propertyName="objectType">The type of the object being processed.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.RowsFilter"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsFilter.GetCurrentExpression">
            <summary>
            Generates the current expression for this <see cref="T:Infragistics.Controls.Grids.RowsFilter"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsFilter.GetCurrentExpression(Infragistics.FilterContext)">
            <summary>
            Generates the current expression for this <see cref="T:Infragistics.Controls.Grids.RowsFilter"/> using the inputted context.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsFilter.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.RowsFilter.PropertyChanged"/> event on this object.
            </summary>
            <param propertyName="propertyName">The propertyName of the property changed.</param>
        </member>
        <member name="E:Infragistics.Controls.Grids.RowsFilter.PropertyChanged">
            <summary>
            Fired when a property changes on the <see cref="T:Infragistics.Controls.Grids.RowsFilter"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsFilter.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Infragistics.Collections.CollectionBase`1"/> and optionally
            releases the managed resources.
            </summary>
            <param propertyName="disposing">
            true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsFilter.Dispose">
            <summary>
            Releases the unmanaged and managed resources used by the <see cref="T:Infragistics.Controls.Grids.RowsFilter"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGridConditionInfo">
            <summary>
            A class that is used by the <see cref="T:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl"/> to show the data on that form.
            </summary>
            <remarks>Not intended for general use.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridConditionInfo.#ctor(Infragistics.Controls.Grids.XamGridConditionInfoGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.XamGridConditionInfo"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridConditionInfo.Group">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.XamGridConditionInfoGroup"/> that owns this <see cref="T:Infragistics.Controls.Grids.XamGridConditionInfo"/> object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridConditionInfo.FilterOperand">
            <summary>
            Gets / sets the <see cref="P:Infragistics.Controls.Grids.XamGridConditionInfo.FilterOperand"/> that will be used in the filter.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridConditionInfo.FilterValue">
            <summary>
            Gets / sets the value that the filter will be applied to.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridConditionInfo.Value">
            <summary>
            Gets or sets the filtering value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridConditionInfo.ErrorMessage">
            <summary>
            Gets or sets the error message.
            </summary>
            <value>
            The error message.
            </value>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridConditionInfo.HasError">
            <summary>
            Gets a value indicating whether this condition has error.
            </summary>
            <value>
              <c>true</c> if this condition has error; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridConditionInfo.InfoObjectName">
            <summary>
            Gets the name of the info object.
            </summary>
            <value>
            The name of the info object.
            </value>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGridConditionInfo.PropertyChanged">
            <summary>
            Event raised when a property on this object changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridConditionInfo.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGridConditionInfoGroup">
            <summary>
            A class that is used by the <see cref="T:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl"/> to show the data on that form.
            </summary>
            <remarks>Not intended for general use.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridConditionInfoGroup.#ctor(Infragistics.Controls.Grids.XamGridConditionInfoGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.XamGridConditionInfoGroup"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridConditionInfoGroup.ParentGroup">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.XamGridConditionInfoGroup"/> which this instance belongs to.
            </summary>
            <remarks>
            The top level instance will return null for this property.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridConditionInfoGroup.Level">
            <summary>
            The depth of this <see cref="T:Infragistics.Controls.Grids.XamGridConditionInfoGroup"/>.
            </summary>
            <remarks>
            This property walks up the <see cref="P:Infragistics.Controls.Grids.XamGridConditionInfoGroup.ParentGroup"/> tree to figure out how many parents you have.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridConditionInfoGroup.Operator">
            <summary>
            The <see cref="T:Infragistics.LogicalOperator"/> that binds together the <see cref="T:Infragistics.Controls.Grids.XamGridConditionInfo"/>s.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridConditionInfoGroup.InfoObjects">
            <summary>
            The list of <see cref="T:Infragistics.Controls.Grids.XamGridConditionInfo"/> objects that are related by the <see cref="P:Infragistics.Controls.Grids.XamGridConditionInfoGroup.Operator"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridConditionInfoGroup.ChildGroups">
            <summary>
            A List of all the groups that have registered this <see cref="T:Infragistics.Controls.Grids.XamGridConditionInfoGroup"/> as it's parent.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridConditionInfoGroup.LevelName">
            <summary>
            Gets the string representation of the Level.  This is a generated field for sorting purposes.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGridConditionInfoGroup.PropertyChanged">
            <summary>
            Fired when a property changes on the <see cref="T:Infragistics.Controls.Grids.XamGridConditionInfoGroup"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridConditionInfoGroup.OnPropertyChanged(System.String)">
            <summary>
            Invoked when a property changes on the <see cref="T:Infragistics.Controls.Grids.XamGridConditionInfoGroup"/> object.
            </summary>
            <param propertyName="propertyName">The propertyName of the property that has changed.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.TrackIsChecked">
            <summary>
            Base abstract class for items which will appear in the <see cref="T:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TrackIsChecked.IsChecked">
            <summary>
            Gets / sets if the item is considered checked. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TrackIsChecked.Parent">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.TrackIsChecked"/> object which is the parent of this object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.TrackIsChecked.ChangeSilent(System.Nullable{System.Boolean})">
            <summary>
            Changes the value of the IsChecked property without executing the secondary operations on parent and children.
            </summary>
            <param name="newValue"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.TrackIsChecked.InvalidateIsChecked">
            <summary>
            Designed to be called by child objects so that the parent object can reevaluate it's state.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.TrackIsChecked.InvalidateChildren(System.Nullable{System.Boolean})">
            <summary>
            Changes the children to the parent's value.
            </summary>
            <param name="newValue"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.TrackIsChecked.OnPropertyChanged(System.String)">
            <summary>
            Invoked when a property changes on the <see cref="T:Infragistics.Controls.Grids.TrackIsChecked"/> object.
            </summary>
            <param name="name">The name of the property that has changed.</param>
        </member>
        <member name="E:Infragistics.Controls.Grids.TrackIsChecked.PropertyChanged">
            <summary>
            Fired when a property changes on the <see cref="T:Infragistics.Controls.Grids.TrackIsChecked"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.TrackIsCheckWithChildren`1">
            <summary>
            Base abstract class for items which will appear in the <see cref="T:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TrackIsCheckWithChildren`1.Children">
            <summary>
            A List of <see cref="T:Infragistics.Controls.Grids.TrackIsChecked"/> objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.TrackIsCheckWithChildren`1.InvalidateIsChecked">
            <summary>
            Designed to be called by child objects so that the parent object can reevaluate it's state.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.TrackIsCheckWithChildren`1.InvalidateChildren(System.Nullable{System.Boolean})">
            <summary>
            Changes the children to the parent's value.
            </summary>
            <param name="newValue"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGridFilterDate">
            <summary>
            Class which represents dates in the <see cref="T:Infragistics.Controls.Grids.Primitives.DateFilterSelectionControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridFilterDate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.XamGridFilterDate"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridFilterDate.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.XamGridFilterDate"/> class.
            </summary>
            <param name="date"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridFilterDate.Date">
            <summary>
            Gets / sets the Date that is represented by this instance of <see cref="T:Infragistics.Controls.Grids.XamGridFilterDate"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridFilterDate.DateFilterObjectType">
            <summary>
            Gets / sets the <see cref="P:Infragistics.Controls.Grids.XamGridFilterDate.DateFilterObjectType"/> which limit what the <see cref="P:Infragistics.Controls.Grids.XamGridFilterDate.Date"/> will be filtered on.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridFilterDate.ContentString">
            <summary>
            Gets the string that represets the <see cref="P:Infragistics.Controls.Grids.XamGridFilterDate.Date"/> limited by the <see cref="P:Infragistics.Controls.Grids.XamGridFilterDate.DateFilterObjectType"/>.
            </summary>
            <remarks>If the <see cref="P:Infragistics.Controls.Grids.XamGridFilterDate.DateFilterObjectType"/> is set to <see cref="T:Infragistics.Controls.Grids.DateFilterObjectType" />.All then this will return an empty string. </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridFilterDate.ContentStringMonth">
            <summary>
            Gets the text month of the <see cref="P:Infragistics.Controls.Grids.XamGridFilterDate.Date"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridFilterDate.NullDate">
            <summary>
            Gets if this object represents a null date object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridFilterDate.IsExpanded">
            <summary>
            Gets / sets if this object should be expanded or not.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridFilterDate.InvalidateIsChecked">
            <summary>
            Designed to be called by child objects so that the parent object can reevaluate it's state.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridFilterDate.GetMonthByDate(System.DateTime)">
            <summary>
            Gets a <see cref="T:Infragistics.Controls.Grids.XamGridFilterDate"/> based on the inputted <see cref="T:System.DateTime"/> if the month matches.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridFilterDate.GetDayByDate(System.DateTime)">
            <summary>
            Gets a <see cref="T:Infragistics.Controls.Grids.XamGridFilterDate"/> based on the inputted <see cref="T:System.DateTime"/> if the date matches.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridFilterDate.GetHourByDate(System.DateTime)">
            <summary>
            Gets a <see cref="T:Infragistics.Controls.Grids.XamGridFilterDate"/> based on the inputted <see cref="T:System.DateTime"/> if the hour matches.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridFilterDate.GetMinuteByDate(System.DateTime)">
            <summary>
            Gets a <see cref="T:Infragistics.Controls.Grids.XamGridFilterDate"/> based on the inputted <see cref="T:System.DateTime"/> if the minute matches.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridFilterDate.GetSecondByDate(System.DateTime)">
            <summary>
            Gets a <see cref="T:Infragistics.Controls.Grids.XamGridFilterDate"/> based on the inputted <see cref="T:System.DateTime"/> if the second matches.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGridFilterYearCollection">
            <summary>
             For Internal use only. Used for managing the Unique list of items for the FilterMenu.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridFilterYearCollection.GetItemByYear(System.DateTime)">
            <summary>
            Gets the item from the collection that matches the year of the Date. Null if not found.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.FixedColumnsCollection">
            <summary>
            A collection that contains the <see cref="T:Infragistics.Controls.Grids.Column"/> objects that are pinned in a specific direction.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FixedColumnsCollection.#ctor(Infragistics.Controls.Grids.FixedState)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Controls.Grids.FixedColumnsCollection"/>
            </summary>
            <param propertyName="direction">The <see cref="T:Infragistics.Controls.Grids.FixedState"/> that a <see cref="T:Infragistics.Controls.Grids.Column"/> should be set to when added to the collection.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnsCollection.Direction">
            <summary>
            Gets/Sets the <see cref="T:Infragistics.Controls.Grids.FixedState"/> that items should be set to when added to this collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FixedColumnsCollection.AddItem(System.Int32,Infragistics.Controls.Grids.Column)">
            <summary>
            Adds the item at the specified index. 
            </summary>
            <param propertyName="index"></param>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.FixedColumnsCollection.InsertItem(System.Int32,Infragistics.Controls.Grids.Column)">
            <summary>
            Adds the item at the specified index. 
            </summary>
            <param propertyName="index"></param>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.FixedColumnsCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param propertyName="index"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.FixedColumnsCollection.ResetItems">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FixedColumnsCollection.AddItemSilently(Infragistics.Controls.Grids.Column)">
            <summary>
            Adds a <see cref="T:Infragistics.Controls.Grids.Column"/> to the collection without setting it's IsFixed property.
            </summary>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.FixedColumnsCollection.RemoveItemSilently(Infragistics.Controls.Grids.Column)">
            <summary>
            Removes a <see cref="T:Infragistics.Controls.Grids.Column"/> from the collection without setting it's IsFixed property.
            </summary>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.FixedColumnsCollection.Save">
            <summary>
            Gets the string representation of the object, that can be later be passed into the Load method of this object, in order to rehydrate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.FixedColumnsCollection.Load(System.Object,System.String)">
            <summary>
            Takes the string that was created in the Save method, and rehydrates the object. 
            </summary>
            <param name="owner">This is the object who owns this object as a property.</param>
            <param name="value"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.FixedColumnSettings">
            <summary>
            An object that contains settings for using FixedColumns on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedColumnSettings.AllowFixedColumnsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FixedColumnSettings.AllowFixedColumns"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettings.AllowFixedColumns">
            <summary>
            Gets/Sets how Fixed columns will be enabled via the UI for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedColumnSettings.FixedIndicatorDirectionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FixedColumnSettings.FixedIndicatorDirection"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettings.FixedIndicatorDirection">
            <summary>
            Gets/Sets what side of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> a column should be locked to if the <see cref="P:Infragistics.Controls.Grids.Column.IsFixed"/> property is set to true for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedColumnSettings.FixedDropAreaLocationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FixedColumnSettings.FixedDropAreaLocation"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettings.FixedDropAreaLocation">
            <summary>
            Gets/Sets where a drop area will be displayed on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> when a <see cref="T:Infragistics.Controls.Grids.Column"/> is dragged,
            so that user can drop a column in order to lock it in place so that it can'type be scrolled.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedColumnSettings.FixedBorderStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FixedColumnSettings.FixedBorderStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettings.FixedBorderStyle">
            <summary>
            Gets/sets the <see cref="T:System.Windows.Style"/> that will be used on the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderCellControl"/> objects of the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedColumnSettings.FixedBorderHeaderStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FixedColumnSettings.FixedBorderHeaderStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettings.FixedBorderHeaderStyle">
            <summary>
            Gets/sets the <see cref="T:System.Windows.Style"/> that will be used on the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderHeaderCellControl"/> objects of the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedColumnSettings.FixedBorderFooterStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FixedColumnSettings.FixedBorderFooterStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettings.FixedBorderFooterStyle">
            <summary>
            Gets/sets the <see cref="T:System.Windows.Style"/> that will be used on the <see cref="T:Infragistics.Controls.Grids.Primitives.FixedBorderFooterCellControl"/> objects of the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedColumnSettings.FixedDropAreaLeftStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FixedColumnSettings.FixedDropAreaLeftStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettings.FixedDropAreaLeftStyle">
            <summary>
            Gets/sets the <see cref="T:System.Windows.Style"/> that will be for the Left DropArea for fixed columns.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedColumnSettings.FixedDropAreaRightStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FixedColumnSettings.FixedDropAreaRightStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettings.FixedDropAreaRightStyle">
            <summary>
            Gets/sets the <see cref="T:System.Windows.Style"/> that will be for the Left DropArea for fixed columns.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettings.FixedColumnsLeft">
            <summary>
            Gets a collection of <see cref="T:Infragistics.Controls.Grids.Column"/> objects that are pinned to the left side of a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettings.FixedColumnsRight">
            <summary>
            Gets a collection of <see cref="T:Infragistics.Controls.Grids.Column"/> objects that are pinned to the right side of a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.FixedColumnSettingsOverride">
            <summary>
            An object that contains settings for using FixedColumns on a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedColumnSettingsOverride.AllowFixedColumnsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.AllowFixedColumns"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.AllowFixedColumns">
            <summary>
            Gets/Sets whether the an Indicator for Fixed Columns will be displayed on all Columns in a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.AllowFixedColumnsResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.AllowFixedColumns"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedIndicatorDirectionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedIndicatorDirection"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedIndicatorDirection">
            <summary>
            Gets/Sets what side of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> a column should be locked to if the <see cref="P:Infragistics.Controls.Grids.Column.IsFixed"/> property is set to true on a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedIndicatorDirectionResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedIndicatorDirection"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedDropAreaLocationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedDropAreaLocation"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedDropAreaLocation">
            <summary>
            Gets/Sets where a drop area will be displayed on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> when a <see cref="T:Infragistics.Controls.Grids.Column"/> is dragged,
            so that user can drop a column in order to lock it in place so that it can'type be scrolled.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedDropAreaLocationResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedDropAreaLocation"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedBorderStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedBorderStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedBorderStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that should be applied to the visual object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedBorderStyleResolved">
            <summary>
            Gets the actual <see cref="T:System.Windows.Style"/> of the visual object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedBorderHeaderStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedBorderStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedBorderHeaderStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that should be applied to the visual object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedBorderHeaderStyleResolved">
            <summary>
            Gets the actual <see cref="T:System.Windows.Style"/> of the visual object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedBorderFooterStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedBorderStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedBorderFooterStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that should be applied to the visual object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedBorderFooterStyleResolved">
            <summary>
            Gets the actual <see cref="T:System.Windows.Style"/> of the visual object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedDropAreaLeftStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedDropAreaLeftStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedDropAreaLeftStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that should be applied to the visual object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedDropAreaLeftStyleResolved">
            <summary>
            Gets the actual <see cref="T:System.Windows.Style"/> of the visual object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedDropAreaRightStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedDropAreaRightStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedDropAreaRightStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that should be applied to the visual object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedDropAreaRightStyleResolved">
            <summary>
            Gets the actual <see cref="T:System.Windows.Style"/> of the visual object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedColumnsLeft">
            <summary>
            Gets a collection of <see cref="T:Infragistics.Controls.Grids.Column"/> objects that are pinned to the left side of a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.FixedColumnsRight">
            <summary>
            Gets a collection of <see cref="T:Infragistics.Controls.Grids.Column"/> objects that are pinned to the right side of a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FixedColumnSettingsOverride.SettingsObject">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.SettingsBase"/> that is the counterpart to this <see cref="T:Infragistics.Controls.Grids.SettingsOverrideBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.FixedColumnSettingsOverride.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Infragistics.Controls.Grids.FixedColumnSettingsOverride"/> and optionally
            releases the managed resources.
            </summary>
            <param propertyName="disposing">
            true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Infragistics.Controls.Grids.FixedColumnSettingsOverride.Dispose">
            <summary>
            Releases the unmanaged and managed resources used by the <see cref="T:Infragistics.Controls.Grids.FixedColumnSettingsOverride"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGroupByAreaCommand">
            <summary>
            An enumeration of available commands for the GroupByArea of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGroupByAreaCommand.ToggleExpansion">
            <summary>
            Toggles the expansion of the GroupByArea of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGroupByAreaCommand.Expand">
            <summary>
            Expands the GroupByArea of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGroupByAreaCommand.Collapse">
            <summary>
            Collapses the GroupByArea of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGroupByAreaCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCellControl"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGroupByAreaCommandSource.CommandType">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.XamGroupByAreaCommand"/> which is to be executed by the command.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGroupByAreaCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.GroupByColumnsCollection">
            <summary>
            A collection that contains the <see cref="T:Infragistics.Controls.Grids.Column"/> objects that are Grouped.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupByColumnsCollection.OnGroupingChanged(System.Collections.Generic.IList{Infragistics.Controls.Grids.Column},System.Collections.Generic.IList{Infragistics.Controls.Grids.Column})">
            <summary>
            Called when the GroupBy collection has changed. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupByColumnsCollection.Save">
            <summary>
            Gets the string representation of the object, that can be later be passed into the Load method of this object, in order to rehydrate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupByColumnsCollection.Load(System.Object,System.String)">
            <summary>
            Takes the string that was created in the Save method, and rehydrates the object. 
            </summary>
            <param name="owner">This is the object who owns this object as a property.</param>
            <param name="value"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupByColumnsCollection.Grid">
            <summary>
            Gets a reference to the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> that this collection belongs to. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupByColumnsCollection.Item(Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Gets a read-only collection of <see cref="T:Infragistics.Controls.Grids.Column"/> objects for the specified <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
            <param propertyName="layout"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupByColumnsCollection.AddItem(System.Int32,Infragistics.Controls.Grids.Column)">
            <summary>
            Adds the item at the specified index. 
            </summary>
            <param propertyName="index"></param>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupByColumnsCollection.InsertItem(System.Int32,Infragistics.Controls.Grids.Column)">
            <summary>
            Adds the item at the specified index. 
            </summary>
            <param propertyName="index"></param>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupByColumnsCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param propertyName="index"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupByColumnsCollection.ReplaceItem(System.Int32,Infragistics.Controls.Grids.Column)">
            <summary>
            Replaces the item at the specified index with the specified item.
            </summary>
            <param propertyName="index"></param>
            <param propertyName="newItem"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupByColumnsCollection.ResetItems">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupByColumnsCollection.Compare(Infragistics.Controls.Grids.Column,Infragistics.Controls.Grids.Column)">
            <summary>
            Compares the <see cref="T:Infragistics.Controls.Grids.Column"/> objects by looking at their position in the collection. 
            </summary>
            <param propertyName="x"></param>
            <param propertyName="y"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.GroupBySettings">
            <summary>
            An object that contains settings for using GroupBy on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupBySettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.GroupBySettings"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupBySettings.AllowGroupByAreaProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.GroupBySettings.AllowGroupByArea"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettings.AllowGroupByArea">
            <summary>
            Gets/Sets the location of the GroupByArea in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupBySettings.IsGroupableProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.GroupBySettings.IsGroupable"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettings.IsGroupable">
            <summary>
            Gets/Sets whether <see cref="T:Infragistics.Controls.Grids.Column"/> objects can be grouped via the UI for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettings.GroupByColumns">
            <summary>
            Gets a collection of <see cref="T:Infragistics.Controls.Grids.Column"/> objects that the data is GroupedBy.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupBySettings.EmptyGroupByAreaContentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.GroupBySettings.EmptyGroupByAreaContent"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettings.EmptyGroupByAreaContent">
            <summary>
            Gets/Sets the content that will be displayed in the GroupByArea of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> when there are no Grouped columns.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupBySettings.GroupByMovingIndicatorStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.GroupBySettings.GroupByMovingIndicatorStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettings.GroupByMovingIndicatorStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByMovingIndicator"/> when rearranging headers in the GroupByArea for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupBySettings.GroupByAreaStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.GroupBySettings.GroupByAreaStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettings.GroupByAreaStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that will be applied to the droppable display area for the GroupBy feature.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupBySettings.GroupByHeaderStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.GroupBySettings.GroupByHeaderStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettings.GroupByHeaderStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that will be applied to the draggable <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl"/> objects in the GroupByArea for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupBySettings.GroupByColumnLayoutHeaderStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.GroupBySettings.GroupByColumnLayoutHeaderStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettings.GroupByColumnLayoutHeaderStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that will be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByColumnLayoutHeaderCellControl"/> which represents the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> of a <see cref="T:Infragistics.Controls.Grids.Column"/> that is grouped for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupBySettings.GroupByRowStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.GroupBySettings.GroupByRowStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettings.GroupByRowStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that will be applied to every GroupBy row for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupBySettings.IsGroupByAreaExpandedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.GroupBySettings.IsGroupByAreaExpanded"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettings.IsGroupByAreaExpanded">
            <summary>
            Gets/Sets whether the GroupByArea is expanded. 
            </summary>
            <remarks>
            Note: this property is ignored, if the <see cref="P:Infragistics.Controls.Grids.GroupBySettings.ExpansionIndicatorVisibility"/> property is set to <see cref="F:System.Windows.Visibility.Collapsed"/>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupBySettings.ExpansionIndicatorVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.GroupBySettings.ExpansionIndicatorVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettings.ExpansionIndicatorVisibility">
            <summary>
            Gets/Sets whether the ExpansionIndicator in the GroupByArea is visible. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupBySettings.GroupByRowHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.GroupBySettings.GroupByRowHeight"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettings.GroupByRowHeight">
            <summary>
            Gets/Sets the RowHeight for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByRow"/> for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupBySettings.GroupByAreaRowHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.GroupBySettings.GroupByAreaRowHeight"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettings.GroupByAreaRowHeight">
            <summary>
            Gets/Sets the RowHeight for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaRow"/> for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupBySettings.GroupByOperationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.GroupBySettings.GroupByOperation"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettings.GroupByOperation">
            <summary>
            Gets/Sets the type of operation that should occur when a column is grouped.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupBySettings.DisplayCountOnGroupedRowProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.GroupBySettings.DisplayCountOnGroupedRow"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettings.DisplayCountOnGroupedRow">
            <summary>
            Gets/Sets whether the count of how many child items are in the grouping is displayed on the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByRow"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupBySettings.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Infragistics.Controls.Grids.GroupBySettings"/> and optionally
            releases the managed resources.
            </summary>
            <param propertyName="disposing">
            true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupBySettings.Dispose">
            <summary>
            Releases the unmanaged and managed resources used by the <see cref="T:Infragistics.Controls.Grids.GroupBySettings"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.GroupBySettingsOverride">
            <summary>
            An object that contains settings for using GropuBy on a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupBySettingsOverride.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.GroupBySettingsOverride"/> class.
            </summary>		
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettingsOverride.SettingsObject">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.SettingsBase"/> that is the counterpart to this <see cref="T:Infragistics.Controls.Grids.SettingsOverrideBase"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupBySettingsOverride.IsGroupableProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.GroupBySettingsOverride.IsGroupable"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettingsOverride.IsGroupable">
            <summary>
            Gets/Sets whether <see cref="T:Infragistics.Controls.Grids.Column"/> objects can be grouped via the UI for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettingsOverride.IsGroupableResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.GroupBySettingsOverride.IsGroupable"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByMovingIndicatorStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByMovingIndicatorStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByMovingIndicatorStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByMovingIndicator"/> when rearranging headers in the GroupByArea for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByMovingIndicatorStyleResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByMovingIndicatorStyle"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByHeaderStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByHeaderStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByHeaderStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that will be applied to the draggable <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl"/> objects in the GroupByArea for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByHeaderStyleResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByHeaderStyle"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByColumnLayoutHeaderStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByColumnLayoutHeaderStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByColumnLayoutHeaderStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that will be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByColumnLayoutHeaderCellControl"/> which represents the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> of a <see cref="T:Infragistics.Controls.Grids.Column"/> that is grouped for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByColumnLayoutHeaderStyleResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByColumnLayoutHeaderStyle"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByRowStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByRowStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByRowStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that will be applied to every GroupBy row for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByRowStyleResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByRowStyle"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByRowHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByRowHeight"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByRowHeight">
            <summary>
            Gets/Sets the RowHeight for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByRow"/> for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByRowHeightResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByRowHeight"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByAreaRowHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByAreaRowHeight"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByAreaRowHeight">
            <summary>
            Gets/Sets the RowHeight for the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaRow"/> for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByAreaRowHeightResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.GroupBySettingsOverride.GroupByAreaRowHeight"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.PagerSettings">
            <summary>
            An object that contains settings for using PagerSettings on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.PagerSettings.AllowPagingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.PagerSettings.AllowPaging"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.PagerSettings.AllowPaging">
            <summary>
            Gets / sets if paging will be allowed by default.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.PagerSettings.DisplayPagerWhenOnlyOnePageProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.PagerSettings.DisplayPagerWhenOnlyOnePage"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.PagerSettings.DisplayPagerWhenOnlyOnePage">
            <summary>
            Gets / sets if the Pager Row should be displayed, when there is only enough data for 1 page.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.PagerSettings.PageSizeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.PagerSettings.PageSize"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.PagerSettings.PageSize">
            <summary>
            Gets / sets the maximum number of rows that will be available per page.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.PagerSettings.CurrentPageIndex">
            <summary>
            Gets / sets what page of data will be displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.PagerSettings.PagerRowHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.PagerSettings.PagerRowHeight"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.PagerSettings.PagerRowHeight">
            <summary>
            Gets/Sets the RowHeight for the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerRow"/> for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.PagerSettingsOverride">
            <summary>
            An object that contains settings for using PagerSettings on a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.PagerSettingsOverride.SettingsObject">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.SettingsBase"/> that is the counterpart to this <see cref="T:Infragistics.Controls.Grids.SettingsOverrideBase"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.PagerSettingsOverride.AllowPagingProperty">
            <summary>   
            Identifies the <see cref="P:Infragistics.Controls.Grids.PagerSettingsOverride.AllowPaging"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.PagerSettingsOverride.AllowPaging">
            <summary>
            Gets / sets if paging should be allowed at this level.  A null value will use the setting from the <see cref="P:Infragistics.Controls.Grids.PagerSettings.AllowPaging"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.PagerSettingsOverride.AllowPagingResolved">
            <summary>
            Gets if PagingLocation is enabled on the ColumnLayout object.  If it is not explicitly set will take the value from the <see cref="P:Infragistics.Controls.Grids.PagerSettings.AllowPaging"/> value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.PagerSettingsOverride.PageSizeProperty">
            <summary>   
            Identifies the <see cref="P:Infragistics.Controls.Grids.PagerSettingsOverride.PageSize"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.PagerSettingsOverride.PageSize">
            <summary>
            Gets / sets the maximum number of rows that will be available per page.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.PagerSettingsOverride.PageSizeResolved">
            <summary>
            Gets what the page size will be.  If it is not explicitly set will take the value from the <see cref="P:Infragistics.Controls.Grids.SortingSettings.AllowMultipleColumnSorting"/> value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.PagerSettingsOverride.PagerRowHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.PagerSettingsOverride.PagerRowHeight"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.PagerSettingsOverride.PagerRowHeight">
            <summary>
            Gets/Sets the RowHeight for the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerRow"/> for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.PagerSettingsOverride.PagerRowHeightResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.PagerSettingsOverride.PagerRowHeight"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGridPagingCommand">
            <summary>
            An enumeration of available commands for paging.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridPagingCommand.FirstPage">
            <summary>
            Goes to the first page of data.		
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridPagingCommand.PreviousPage">
            <summary>
            Goes to the previous page of data.		
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridPagingCommand.NextPage">
            <summary>
            Goes to the next page of data.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridPagingCommand.LastPage">
            <summary>
            Goes to the last page of data.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridPagingCommand.GoToPage">
            <summary>
            Goes to a expressed page of data.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGridPagingCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Grids.Primitives.PagerCell"/> object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridPagingCommandSource.CommandType">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.XamGridPagingCommand"/> which is to be executed by the command.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridPagingCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGridPagingControlsCommandSource">
            <summary>
            A <see cref="T:Infragistics.Controls.CommandSource"/> for the controls which control the paging action.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridPagingControlsCommandSource.CommandType">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.XamGridPagingCommand"/> which is to be executed by the command.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridPagingControlsCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.RowSelectorSettings">
            <summary>
            An object that contains settings for using RowSelectorSettings on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowSelectorSettings.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Controls.Grids.RowSelectorSettings"/> object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowSelectorSettings.EnableRowNumberingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.RowSelectorSettings.EnableRowNumbering"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowSelectorSettings.EnableRowNumbering">
            <summary>
            Gets / sets if the RowSelectors should show row numbers.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowSelectorSettings.HeaderStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.RowSelectorSettings.HeaderStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowSelectorSettings.HeaderStyle">
            <summary>
            Gets/sets the <see cref="T:System.Windows.Style"/> that will be used on the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorHeaderCellControl"/> objects of the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowSelectorSettings.FooterStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.RowSelectorSettings.FooterStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowSelectorSettings.FooterStyle">
            <summary>
            Gets/sets the <see cref="T:System.Windows.Style"/> that will be used on the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorFooterCellControl"/> objects of the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowSelectorSettings.RowNumberingSeedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.RowSelectorSettings.RowNumberingSeed"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowSelectorSettings.RowNumberingSeed">
            <summary>
            Gets / sets the value that will be used to start the row numbering on each <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.RowSelectorSettingsOverride">
            <summary>
            An object that contains settings for using RowSelectors on a particular  <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowSelectorSettingsOverride.SettingsObject">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.SettingsBase"/> that is the counterpart to this <see cref="T:Infragistics.Controls.Grids.SettingsOverrideBase"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowSelectorSettingsOverride.HeaderStyleProperty">
            <summary>
            Identifies the <see cref="T:System.Windows.Style"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowSelectorSettingsOverride.HeaderStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that should be applied to the visual object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowSelectorSettingsOverride.HeaderStyleResolved">
            <summary>
            Gets the actual <see cref="T:System.Windows.Style"/> of the visual object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowSelectorSettingsOverride.FooterStyleProperty">
            <summary>
            Identifies the <see cref="T:System.Windows.Style"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowSelectorSettingsOverride.FooterStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that should be applied to the visual object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowSelectorSettingsOverride.FooterStyleResolved">
            <summary>
            Gets the actual <see cref="T:System.Windows.Style"/> of the visual object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowSelectorSettingsOverride.RowNumberingSeedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.RowSelectorSettingsOverride.RowNumberingSeed"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowSelectorSettingsOverride.RowNumberingSeed">
            <summary>
            Gets / sets the value that will be used to start the row numbering on this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowSelectorSettingsOverride.RowNumberingSeedResolved">
            <summary>
            Gets what value for the <see cref="P:Infragistics.Controls.Grids.RowSelectorSettingsOverride.RowNumberingSeed"/> will be used for the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowSelectorSettingsOverride.EnableRowNumberingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.RowSelectorSettingsOverride.EnableRowNumbering"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowSelectorSettingsOverride.EnableRowNumbering">
            <summary>
            Gets / sets if the RowSelectors should show row numbers.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowSelectorSettingsOverride.EnableRowNumberingResolved">
            <summary>
            Resolves if row numbering is enabled for this particular <see cref="T:Infragistics.Controls.Grids.RowSelectorSettings"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.SelectedCellsCollection">
            <summary>
            A collection of selected <see cref="T:Infragistics.Controls.Grids.Cell"/> objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SelectedCellsCollection.OnSelectionChanged(Infragistics.Controls.Grids.SelectedCollectionBase{Infragistics.Controls.Grids.Cell},Infragistics.Controls.Grids.SelectedCollectionBase{Infragistics.Controls.Grids.Cell})">
            <summary>
            Called when the Selection collection has changed. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SelectedCellsCollection.CreateNewInstance">
            <summary>
            Creates a new instance of this collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SelectedCellsCollection.AddItem(System.Int32,Infragistics.Controls.Grids.Cell)">
            <summary>
            Adds the Cell at the specified index. 
            </summary>
            <param propertyName="index"></param>
            <param propertyName="item"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.SelectedCollectionBase`1">
            <summary>
             A collection of selectable items. 
            </summary>
            <typeparam propertyName="T">An object of type <see cref="T:Infragistics.ISelectableObject"/></typeparam>
        </member>
        <member name="M:Infragistics.Controls.Grids.SelectedCollectionBase`1.AddRange(Infragistics.Controls.Grids.SelectedCollectionBase{`0})">
            <summary>
            Adds the specified collection of items to this collection. 
            </summary>
            <param propertyName="items"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.SelectedCollectionBase`1.SelectItem(`0,System.Boolean)">
            <summary>
            Selects the specified item. 
            </summary>
            <param propertyName="item">The item being selected</param>
            <param propertyName="shiftKey">Whether or not the shift key is down.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.SelectedCollectionBase`1.OnSelectionChanged(Infragistics.Controls.Grids.SelectedCollectionBase{`0},Infragistics.Controls.Grids.SelectedCollectionBase{`0})">
            <summary>
            Called when the Selection collection has changed. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SelectedCollectionBase`1.CreateNewInstance">
            <summary>
            Creates a new instance of this collection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SelectedCollectionBase`1.Grid">
            <summary>
            Gets a reference to the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> that this collection belongs to. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SelectedCollectionBase`1.ShiftSelectedItems">
            <summary>
            Gets a collection of items that were selected while the shift key was down. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SelectedCollectionBase`1.PivotItem">
            <summary>
            Gets the item that was first selected when the shift key was pressed down. 
            </summary>
            <remarks> This is important to know, so that selected ranges can be changed.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.SelectedCollectionBase`1.AddItem(System.Int32,`0)">
            <summary>
            Adds the item at the specified index. 
            </summary>
            <param propertyName="index"></param>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.SelectedCollectionBase`1.InsertItem(System.Int32,`0)">
            <summary>
            Adds the item at the specified index. 
            </summary>
            <param propertyName="index"></param>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.SelectedCollectionBase`1.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param propertyName="index"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.SelectedCollectionBase`1.ReplaceItem(System.Int32,`0)">
            <summary>
            Replaces the item at the specified index with the specified item.
            </summary>
            <param propertyName="index"></param>
            <param propertyName="newItem"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.SelectedCollectionBase`1.ResetItems">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.SelectedColumnsCollection">
            <summary>
            A collection of selected <see cref="T:Infragistics.Controls.Grids.Column"/> objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SelectedColumnsCollection.OnSelectionChanged(Infragistics.Controls.Grids.SelectedCollectionBase{Infragistics.Controls.Grids.Column},Infragistics.Controls.Grids.SelectedCollectionBase{Infragistics.Controls.Grids.Column})">
            <summary>
            Called when the Selection collection has changed. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SelectedColumnsCollection.CreateNewInstance">
            <summary>
            Creates a new instance of this collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SelectedColumnsCollection.AddItem(System.Int32,Infragistics.Controls.Grids.Column)">
            <summary>
            Adds the Column at the specified index. 
            </summary>
            <param propertyName="index"></param>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.SelectedColumnsCollection.Save">
            <summary>
            Gets the string representation of the object, that can be later be passed into the Load method of this object, in order to rehydrate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.SelectedColumnsCollection.Load(System.Object,System.String)">
            <summary>
            Takes the string that was created in the Save method, and rehydrates the object. 
            </summary>
            <param name="owner">This is the object who owns this object as a property.</param>
            <param name="value"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.SelectedRowsCollection">
            <summary>
            A collection of selected <see cref="T:Infragistics.Controls.Grids.Row"/> objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SelectedRowsCollection.OnSelectionChanged(Infragistics.Controls.Grids.SelectedCollectionBase{Infragistics.Controls.Grids.Row},Infragistics.Controls.Grids.SelectedCollectionBase{Infragistics.Controls.Grids.Row})">
            <summary>
            Called when the Selection collection has changed. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SelectedRowsCollection.CreateNewInstance">
            <summary>
            Creates a new instance of this collection.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.SelectionSettings">
            <summary>
            An object that contains settings for selection on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SelectionSettings.CellSelectionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.SelectionSettings.CellSelection"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SelectionSettings.CellSelection">
            <summary>
            Gets/Sets how Cell selection will work on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SelectionSettings.RowSelectionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.SelectionSettings.RowSelection"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SelectionSettings.RowSelection">
            <summary>
            Gets/Sets how Row selection will work on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SelectionSettings.ColumnSelectionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.SelectionSettings.ColumnSelection"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SelectionSettings.ColumnSelection">
            <summary>
            Gets/Sets how Column selection will work on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SelectionSettings.CellClickActionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.SelectionSettings.CellClickAction"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SelectionSettings.CellClickAction">
            <summary>
            Gets/Sets whether a row or cell should be selected when a Click occurs on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SelectionSettings.SelectedRows">
            <summary>
            Gets the collection of currently selected <see cref="T:Infragistics.Controls.Grids.Row"/> objects.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SelectionSettings.SelectedCells">
            <summary>
            Gets the collection of currently selected <see cref="T:Infragistics.Controls.Grids.Cell"/> objects.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SelectionSettings.SelectedColumns">
            <summary>
            Gets the collection of currently selected <see cref="T:Infragistics.Controls.Grids.Column"/> objects.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SelectionSettings.PropertiesToIgnore">
            <summary>
            Gets a List of properties that shouldn't be saved when the PersistenceManager goes to save them.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SelectionSettings.PriorityProperties">
            <summary>
            Gets a List of properties that should be applied, before even trying to look at any other property on the object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SelectionSettings.FinishedLoadingPersistence">
            <summary>
            Allows an object to perform an operation, after it's been loaded.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SelectionSettings.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Infragistics.Controls.Grids.SelectionSettings"/> and optionally
            releases the managed resources.
            </summary>
            <param propertyName="disposing">
            true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Infragistics.Controls.Grids.SelectionSettings.Dispose">
            <summary>
            Releases the unmanaged and managed resources used by the <see cref="T:Infragistics.Controls.Grids.SelectionSettings"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.SettingsBase">
            <summary>
            An Abstract class that controls the settings for an object on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SettingsBase.Grid">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> that owns the <see cref="T:Infragistics.Controls.Grids.SettingsBase"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SettingsBase.OnGridSet">
            <summary>
            Method called when the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> property is changed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.SettingsOverrideBase">
            <summary>
            An Abstract class that controls the settings for an object on the <see cref="P:Infragistics.Controls.Grids.SettingsOverrideBase.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SettingsOverrideBase.ColumnLayout">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.SettingsOverrideBase.ColumnLayout"/> that owns the <see cref="T:Infragistics.Controls.Grids.SettingsOverrideBase"/> object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SettingsOverrideBase.SettingsObject">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.SettingsBase"/> that is the counterpart to this <see cref="T:Infragistics.Controls.Grids.SettingsOverrideBase"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.SortedColumnsCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Controls.Grids.Column"/> objects which define how sorting will be applied to the 
            <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
            <remarks>
            The order that the sort is applied is driven by the order of the SortedColumn objects in this collection.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.SortedColumnsCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.Column"/> from the collection based on the inputted key.
            </summary>
            <param propertyName="columnKey">The <see cref="T:Infragistics.Controls.Grids.Column"/> Key value that should be paired in the collection.</param>
            <returns>The SortedColumn with the matching key, null if not found.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.SortedColumnsCollection.AddItemSilently(Infragistics.Controls.Grids.Column)">
            <summary>
            Adds a <see cref="T:Infragistics.Controls.Grids.Column"/> to the collection without setting it's IsSorted property.
            </summary>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.SortedColumnsCollection.InsertItemSilently(Infragistics.Controls.Grids.Column,System.Int32)">
            <summary>
            Adds a <see cref="T:Infragistics.Controls.Grids.Column"/> to the collection without setting it's IsSorted property.
            </summary>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.SortedColumnsCollection.RemoveItemSilently(Infragistics.Controls.Grids.Column)">
            <summary>
            Removes a <see cref="T:Infragistics.Controls.Grids.Column"/> from the collection without sett it's IsSorted property.
            </summary>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.SortedColumnsCollection.ClearSilently">
            <summary>
            Removes a <see cref="T:Infragistics.Controls.Grids.Column"/> from the collection setting it's IsSorted property silently.
            </summary>	
        </member>
        <member name="M:Infragistics.Controls.Grids.SortedColumnsCollection.Save">
            <summary>
            Gets the string representation of the object, that can be later be passed into the Load method of this object, in order to rehydrate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.SortedColumnsCollection.Load(System.Object,System.String)">
            <summary>
            Takes the string that was created in the Save method, and rehydrates the object. 
            </summary>
            <param name="owner">This is the object who owns this object as a property.</param>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.SortedColumnsCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param propertyName="index"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.SortedColumnsCollection.ResetItems">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SortedColumnsCollection.AddItem(System.Int32,Infragistics.Controls.Grids.Column)">
            <summary>
            Adds the item at the specified index. 
            </summary>
            <param propertyName="index"></param>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.SortedColumnsCollection.InsertItem(System.Int32,Infragistics.Controls.Grids.Column)">
            <summary>
            Adds the item at the specified index. 
            </summary>
            <param propertyName="index"></param>
            <param propertyName="item"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.SortingSettings">
            <summary>
            An object that contains settings for using SortingSettings on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SortingSettings.AllowSortingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.SortingSettings.AllowSorting"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SortingSettings.AllowSorting">
            <summary>
            Gets / sets if sorting will be allowed by default.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SortingSettings.ShowSortIndicatorProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.SortingSettings.ShowSortIndicator"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SortingSettings.ShowSortIndicator">
            <summary>
            Gets / sets if the sort indicator will be visible by default.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SortingSettings.AllowMultipleColumnSortingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.SortingSettings.AllowMultipleColumnSorting"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SortingSettings.AllowMultipleColumnSorting">
            <summary>
            Gets / sets if sorting will be allowed on multiple columns by default.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SortingSettings.SortedColumns">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.SortedColumnsCollection"/> which will describe how the rows will be sorted.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SortingSettings.MultiSortingKeyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.SortingSettings.MultiSortingKey"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SortingSettings.MultiSortingKey">
            <summary>
            Gets / sets which keyboard key will be used to designate multiple column sorting.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SortingSettings.FirstSortDirectionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.SortingSettings.FirstSortDirection"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SortingSettings.FirstSortDirection">
            <summary>
            Gets/Sets FirstSortDirection for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SortingSettings.PropertiesToIgnore">
            <summary>
            Gets a List of properties that shouldn't be saved when the PersistenceManager goes to save them.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SortingSettings.PriorityProperties">
            <summary>
            Gets a List of properties that should be applied, before even trying to look at any other property on the object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SortingSettings.FinishedLoadingPersistence">
            <summary>
            Allows an object to perform an operation, after it's been loaded.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.SortingSettingsOverride">
            <summary>
            An object that contains settings for using SortingSettings on a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SortingSettingsOverride.SettingsObject">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.SettingsBase"/> that is the counterpart to this <see cref="T:Infragistics.Controls.Grids.SettingsOverrideBase"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SortingSettingsOverride.AllowSortingProperty">
            <summary>   
            Identifies the <see cref="P:Infragistics.Controls.Grids.SortingSettingsOverride.AllowSorting"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SortingSettingsOverride.AllowSorting">
            <summary>
            Gets / sets if sorting should be allowed at this level.  A null value will use the setting from the <see cref="P:Infragistics.Controls.Grids.SortingSettings.AllowSorting"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SortingSettingsOverride.AllowSortingResolved">
            <summary>
            Gets if sorting is enabled on the ColumnLayout object.  If it is not explicitly set will take the value from the <see cref="P:Infragistics.Controls.Grids.SortingSettings.AllowSorting"/> value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SortingSettingsOverride.ShowSortIndicatorProperty">
            <summary>   
            Identifies the <see cref="P:Infragistics.Controls.Grids.SortingSettingsOverride.ShowSortIndicator"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SortingSettingsOverride.ShowSortIndicator">
            <summary>
            Gets / sets if sorting should be allowed at this level.  A null value will use the setting from the <see cref="P:Infragistics.Controls.Grids.SortingSettings.ShowSortIndicator"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SortingSettingsOverride.ShowSortIndicatorResolved">
            <summary>
            Gets if sorting is enabled on the ColumnLayout object.  If it is not explicitly set will take the value from the <see cref="P:Infragistics.Controls.Grids.SortingSettings.ShowSortIndicator"/> value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SortingSettingsOverride.AllowMultipleColumnSortingProperty">
            <summary>   
            Identifies the <see cref="P:Infragistics.Controls.Grids.SortingSettingsOverride.AllowMultipleColumnSorting"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SortingSettingsOverride.AllowMultipleColumnSorting">
            <summary>
            Gets / sets if multiple column sorting will be allowed at this level.  A null value will use the setting from the <see cref="P:Infragistics.Controls.Grids.SortingSettings.AllowMultipleColumnSorting"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SortingSettingsOverride.AllowMultipleColumnSortingResolved">
            <summary>
            Gets if multiple column sorting is enabled on the ColumnLayout object.  If it is not explicitly set will take the value from the <see cref="P:Infragistics.Controls.Grids.SortingSettings.AllowMultipleColumnSorting"/> value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SortingSettingsOverride.SortedColumns">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.SortedColumnsCollection"/> which will describe how the rows will be sorted.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SortingSettingsOverride.MultiSortingKeyResolved">
            <summary>
            Gets what keyboard key will designate multiple column sorting.
            </summary>		
        </member>
        <member name="F:Infragistics.Controls.Grids.SortingSettingsOverride.FirstSortDirectionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.SortingSettingsOverride.FirstSortDirection"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SortingSettingsOverride.FirstSortDirection">
            <summary>
            Gets/Sets FirstSortDirection for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SortingSettingsOverride.FirstSortDirectionResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.SortingSettingsOverride.FirstSortDirection"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SortingSettingsOverride.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Infragistics.Controls.Grids.SortingSettingsOverride"/> and optionally
            releases the managed resources.
            </summary>
            <param propertyName="disposing">
            true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Infragistics.Controls.Grids.SortingSettingsOverride.Dispose">
            <summary>
            Releases the unmanaged and managed resources used by the <see cref="T:Infragistics.Controls.Grids.SortingSettingsOverride"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.StyleSettingsBase">
            <summary>
            An Abstract class that controls the settings for an object that have a Style aspect on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.StyleSettingsBase.StyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.StyleSettingsBase.Style"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.StyleSettingsBase.Style">
            <summary>
            Gets/sets the <see cref="P:Infragistics.Controls.Grids.StyleSettingsBase.Style"/> that will be used on all <see cref="T:Infragistics.Controls.Grids.StyleSettingsBase"/> objects of the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.StyleSettingsBase.OnStyleChanged">
            <summary>
            Invoked when the Style property changes.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.StyleSettingsOverrideBase">
            <summary>
            An Abstract class that controls the settings for an object that have a Style aspect on the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.StyleSettingsOverrideBase.StyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.StyleSettingsOverrideBase.Style"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.StyleSettingsOverrideBase.Style">
            <summary>
            Gets/Sets the <see cref="P:Infragistics.Controls.Grids.StyleSettingsOverrideBase.Style"/> that should be applied to the visual object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.StyleSettingsOverrideBase.StyleResolved">
            <summary>
            Gets the actual <see cref="P:Infragistics.Controls.Grids.StyleSettingsOverrideBase.Style"/> of the visual object.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.MaximumSummaryCalculator">
            <summary>
            A <see cref="T:Infragistics.SummaryCalculatorBase"/> base which will execute the LINQ Maximum summary.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.MaximumSummaryCalculator.Infragistics#ISupportLinqSummaries#SummaryType">
            <summary>
            Gets the <see cref="T:Infragistics.LinqSummaryOperator"/> which designates which LINQ summary to use.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.MaximumSummaryCalculator.Infragistics#ISupportLinqSummaries#SummaryContext">
            <summary>
            Gets / sets the <see cref="T:Infragistics.SummaryContext"/> that will be used by the summary framework to build the summary.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.MinimumSummaryCalculator">
            <summary>
            A <see cref="T:Infragistics.SummaryCalculatorBase"/> base which will execute the LINQ Minimum summary.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.MinimumSummaryCalculator.Infragistics#ISupportLinqSummaries#SummaryType">
            <summary>
            Gets the <see cref="T:Infragistics.LinqSummaryOperator"/> which designates which LINQ summary to use.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.MinimumSummaryCalculator.Infragistics#ISupportLinqSummaries#SummaryContext">
            <summary>
            Gets / sets the <see cref="T:Infragistics.SummaryContext"/> that will be used by the summary framework to build the summary.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.CountSummaryCalculator">
            <summary>
            A <see cref="T:Infragistics.SummaryCalculatorBase"/> base which will execute the LINQ Count summary.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CountSummaryCalculator.Infragistics#ISupportLinqSummaries#SummaryType">
            <summary>
            Gets the <see cref="T:Infragistics.LinqSummaryOperator"/> which designates which LINQ summary to use.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CountSummaryCalculator.Infragistics#ISupportLinqSummaries#SummaryContext">
            <summary>
            Gets / sets the <see cref="T:Infragistics.SummaryContext"/> that will be used by the summary framework to build the summary.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.SumSummaryCalculator">
            <summary>
            A <see cref="T:Infragistics.SummaryCalculatorBase"/> base which will execute the LINQ Sum summary.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SumSummaryCalculator.Infragistics#ISupportLinqSummaries#SummaryType">
            <summary>
            Gets the <see cref="T:Infragistics.LinqSummaryOperator"/> which designates which LINQ summary to use.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SumSummaryCalculator.Infragistics#ISupportLinqSummaries#SummaryContext">
            <summary>
            Gets / sets the <see cref="T:Infragistics.SummaryContext"/> that will be used by the summary framework to build the summary.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.AverageSummaryCalculator">
            <summary>
            A <see cref="T:Infragistics.SummaryCalculatorBase"/> base which will execute the LINQ Average summary.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.AverageSummaryCalculator.Infragistics#ISupportLinqSummaries#SummaryType">
            <summary>
            Gets the <see cref="T:Infragistics.LinqSummaryOperator"/> which designates which LINQ summary to use.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.AverageSummaryCalculator.Infragistics#ISupportLinqSummaries#SummaryContext">
            <summary>
            Gets / sets the <see cref="T:Infragistics.SummaryContext"/> that will be used by the summary framework to build the summary.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.SummaryColumnSettings">
            <summary>
            An object that controls summary settings for a particular <see cref="T:Infragistics.Controls.Grids.Column"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SummaryColumnSettings.#ctor(Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.SummaryColumnSettings"/> class.
            </summary>
            <param name="column">The <see cref="T:Infragistics.Controls.Grids.Column"/> object which this settings object will be associated.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.SummaryColumnSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.SummaryColumnSettings"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryColumnSettings.SummaryOperands">
            <summary>
            The <see cref="T:Infragistics.SummaryOperandCollection"/> which will be allowed to be selected by the user.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryColumnSettings.GroupBySummaryDefinitions">
            <summary>
            The SummaryDefinitions that will be applied when this particular column is grouped.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SummaryColumnSettings.SummaryRowCellStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.SummaryColumnSettings.SummaryRowCellStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryColumnSettings.SummaryRowCellStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that will be used for the <see cref="T:Infragistics.Controls.Grids.CellControl"/> objects on the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRow"/> for this <see cref="T:Infragistics.Controls.Grids.ColumnBase"/>.
            </summary>        
            <remarks>
            This style should target a <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowCellControl"/>.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.SummaryColumnSettings.Dispose">
            <summary>
            Releases the unmanaged and managed resources used by the <see cref="T:Infragistics.Controls.Grids.SummaryColumnSettings"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SummaryColumnSettings.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Infragistics.Controls.Grids.SummaryColumnSettings"/> and optionally
            releases the managed resources.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Infragistics.Controls.Grids.SummaryColumnSettings.OnLoadedCatchUp">
            <summary>
            Designed to be called during the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> OnLoaded to allow any processing 
            due to objects added in the XAML but not able to be processed until other objects populated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SummaryColumnSettings.ValidateSummaryOperands">
            <summary>
            Called to ensure that the operand list that is set, if it was autogenerated, is correct with respect to the <see cref="P:Infragistics.Controls.Grids.ColumnBase.DataType"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.MaximumSummaryOperand">
            <summary>
            A <see cref="T:Infragistics.SummaryOperandBase"/> implementation which executes a LINQ Maximum summary.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.MaximumSummaryOperand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.MaximumSummaryOperand"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.MaximumSummaryOperand.SummaryCalculator">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.MaximumSummaryOperand.SummaryCalculator"/> which will be used to calculate the summary.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.MaximumSummaryOperand.DefaultSelectionDisplayLabel">
            <summary>
            Get's the default text that will be displayed in the drop down for this <see cref="T:Infragistics.SummaryOperandBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.MaximumSummaryOperand.DefaultRowDisplayLabel">
            <summary>
            Get's the default text that will be displayed in the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRow"/> when this <see cref="T:Infragistics.SummaryOperandBase"/> is selected.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.MaximumSummaryOperand.LinqSummaryOperator">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>						
        </member>
        <member name="T:Infragistics.Controls.Grids.MinimumSummaryOperand">
            <summary>
            A <see cref="T:Infragistics.SummaryOperandBase"/> implementation which executes a LINQ Minimum summary.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.MinimumSummaryOperand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.MinimumSummaryOperand"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.MinimumSummaryOperand.SummaryCalculator">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.MinimumSummaryOperand.SummaryCalculator"/> which will be used to calculate the summary.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.MinimumSummaryOperand.DefaultSelectionDisplayLabel">
            <summary>
            Get's the default text that will be displayed in the drop down for this <see cref="T:Infragistics.SummaryOperandBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.MinimumSummaryOperand.DefaultRowDisplayLabel">
            <summary>
            Get's the default text that will be displayed in the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRow"/> when this <see cref="T:Infragistics.SummaryOperandBase"/> is selected.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.MinimumSummaryOperand.LinqSummaryOperator">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>						
        </member>
        <member name="T:Infragistics.Controls.Grids.CountSummaryOperand">
            <summary>
            A <see cref="T:Infragistics.SummaryOperandBase"/> implementation which executes a LINQ Count summary.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.CountSummaryOperand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.CountSummaryOperand"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CountSummaryOperand.SummaryCalculator">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.CountSummaryOperand.SummaryCalculator"/> which will be used to calculate the summary.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CountSummaryOperand.DefaultSelectionDisplayLabel">
            <summary>
            Get's the default text that will be displayed in the drop down for this <see cref="T:Infragistics.SummaryOperandBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CountSummaryOperand.DefaultRowDisplayLabel">
            <summary>
            Get's the default text that will be displayed in the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRow"/> when this <see cref="T:Infragistics.SummaryOperandBase"/> is selected.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CountSummaryOperand.LinqSummaryOperator">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>						
        </member>
        <member name="T:Infragistics.Controls.Grids.SumSummaryOperand">
            <summary>
            A <see cref="T:Infragistics.SummaryOperandBase"/> implementation which executes a LINQ Sum summary.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SumSummaryOperand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.SumSummaryOperand"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SumSummaryOperand.SummaryCalculator">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.SumSummaryOperand.SummaryCalculator"/> which will be used to calculate the summary.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SumSummaryOperand.DefaultSelectionDisplayLabel">
            <summary>
            Get's the default text that will be displayed in the drop down for this <see cref="T:Infragistics.SummaryOperandBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SumSummaryOperand.DefaultRowDisplayLabel">
            <summary>
            Get's the default text that will be displayed in the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRow"/> when this <see cref="T:Infragistics.SummaryOperandBase"/> is selected.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SumSummaryOperand.LinqSummaryOperator">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>						
        </member>
        <member name="T:Infragistics.Controls.Grids.AverageSummaryOperand">
            <summary>
            A <see cref="T:Infragistics.SummaryOperandBase"/> implementation which executes a LINQ Average summary.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.AverageSummaryOperand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.AverageSummaryOperand"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.AverageSummaryOperand.SummaryCalculator">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.AverageSummaryOperand.SummaryCalculator"/> which will be used to calculate the summary.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.AverageSummaryOperand.DefaultSelectionDisplayLabel">
            <summary>
            Get's the default text that will be displayed in the drop down for this <see cref="T:Infragistics.SummaryOperandBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.AverageSummaryOperand.DefaultRowDisplayLabel">
            <summary>
            Get's the default text that will be displayed in the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRow"/> when this <see cref="T:Infragistics.SummaryOperandBase"/> is selected.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.AverageSummaryOperand.LinqSummaryOperator">
            <summary>
            Gets the operator that will be associated with this operand.
            </summary>						
        </member>
        <member name="T:Infragistics.Controls.Grids.SummaryRowSettings">
            <summary>
            A class that defines the SummaryRow settings for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SummaryRowSettings.AllowSummaryRowProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.SummaryRowSettings.AllowSummaryRow"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryRowSettings.AllowSummaryRow">
            <summary>
            Gets/Sets the location of the SummaryRow for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SummaryRowSettings.StyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.SummaryRowSettings.Style"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryRowSettings.Style">
            <summary>
            Gets/Sets the style that will be applied to every <see cref="T:Infragistics.Controls.Grids.Cell"/> in the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRow"/> for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SummaryRowSettings.ExpansionIndicatorStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.SummaryRowSettings.ExpansionIndicatorStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryRowSettings.ExpansionIndicatorStyle">
            <summary>
            Gets/sets the <see cref="P:Infragistics.Controls.Grids.SummaryRowSettings.Style"/> that will be used on the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRowExpansionIndicatorCellControl"/> objects of the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SummaryRowSettings.RowSelectorStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.SummaryRowSettings.RowSelectorStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryRowSettings.RowSelectorStyle">
            <summary>
            Gets/Sets the style that will be applied to the RowSelector of an <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRow"/> for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SummaryRowSettings.SummaryScopeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.SummaryRowSettings.SummaryScope"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryRowSettings.SummaryScope">
            <summary>
            Gets / sets SummaryScope for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SummaryRowSettings.SummaryExecutionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.SummaryRowSettings.SummaryExecution"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryRowSettings.SummaryExecution">
            <summary>
            Gets/Sets SummaryExecution for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryRowSettings.SummaryDefinitionCollection">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.SummaryRowSettings.SummaryDefinitionCollection"/> which will be applied to the top level of rows.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryRowSettings.SummaryResultCollection">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.SummaryRowSettings.SummaryResultCollection"/> object that contains the results of the summaries being applied to this <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SummaryRowSettings.OnGridSet">
            <summary>
            Method called when the grid is set on the settings object to allow for catch up code to be processed regarding 
            values that may have been set in Xaml.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SummaryRowSettings.Dispose">
            <summary>
            Releases the unmanaged and managed resources used by the <see cref="T:Infragistics.Controls.Grids.SummaryRowSettings"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SummaryRowSettings.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Infragistics.Controls.Grids.SummaryRowSettings"/> and optionally
            releases the managed resources.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="T:Infragistics.Controls.Grids.SummaryRowSettingsOverride">
            <summary>
            A class that defines the SummaryRow settings for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.SettingsObject">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.SettingsBase"/> that is the counterpart to this <see cref="T:Infragistics.Controls.Grids.SettingsOverrideBase"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SummaryRowSettingsOverride.AllowSummaryRowProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.AllowSummaryRow"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.AllowSummaryRow">
            <summary>
            Gets/Sets the location of the SummaryRow for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.AllowSummaryRowResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.AllowSummaryRow"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SummaryRowSettingsOverride.ExpansionIndicatorStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.Style"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.ExpansionIndicatorStyle">
            <summary>
            Gets/Sets the <see cref="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.Style"/> that should be applied to the visual object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.ExpansionIndicatorStyleResolved">
            <summary>
            Gets the actual <see cref="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.Style"/> of the visual object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SummaryRowSettingsOverride.StyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.Style"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.Style">
            <summary>
            Gets/Sets the style that will be applied to every <see cref="T:Infragistics.Controls.Grids.Cell"/> in the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRow"/> for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.StyleResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.Style"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SummaryRowSettingsOverride.RowSelectorStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.RowSelectorStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.RowSelectorStyle">
            <summary>
            Gets/Sets the style that will be applied to the RowSelector of an <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRow"/> for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.RowSelectorStyleResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.RowSelectorStyle"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.SummaryDefinitionCollection">
            <summary>
            A collection of <see cref="T:Infragistics.SummaryDefinition"/> objects that will define which summaries should be calculated.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SummaryRowSettingsOverride.SummaryScopeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.SummaryScope"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.SummaryScope">
            <summary>
            Gets/Sets RowSummaryScope for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.SummaryScopeResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.SummaryScope"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SummaryRowSettingsOverride.SummaryExecutionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.SummaryExecution"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.SummaryExecution">
            <summary>
            Gets/Sets SummaryExecution for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.SummaryExecutionResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.SummaryRowSettingsOverride.SummaryExecution"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SummaryRowSettingsOverride.Dispose">
            <summary>
            Releases the unmanaged and managed resources used by the <see cref="T:Infragistics.Controls.Grids.SummaryRowSettingsOverride"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SummaryRowSettingsOverride.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Infragistics.Controls.Grids.SummaryRowSettingsOverride"/> and optionally
            releases the managed resources.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="T:Infragistics.Controls.Grids.SummarySelectionControlCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Grids.Primitives.SummarySelectionControl"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SummarySelectionControlCommandSource.CommandType">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.SummarySelectionControlCommand"/> which is to be executed by the command.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.SummarySelectionControlCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.SummarySelectionControlCommand">
            <summary>
            An enum describing the commands which can be executed on the <see cref="T:Infragistics.Controls.Grids.SummarySelectionControlCommandSource"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SummarySelectionControlCommand.AcceptChanges">
            <summary>
            Accepts the changes from the control.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.AcceptChangesCommand">
            <summary>
            A command which will accept changes made to the selected items of this control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.AcceptChangesCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.AcceptChangesCommand.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.VisualSettingsBase">
            <summary>
            An Abstract class that controls the settings for an object that have a Visual aspect on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.VisualSettingsBase.VisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.VisualSettingsBase.Visibility"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.VisualSettingsBase.Visibility">
            <summary>
            Gets/sets whether the VisualSettingsBase will be visible on the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.VisualSettingsOverrideBase">
            <summary>
            An Abstract class that controls the settings for an object that have a Visual aspect on the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.VisualSettingsOverrideBase.VisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.VisualSettingsOverrideBase.Visibility"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.VisualSettingsOverrideBase.Visibility">
            <summary>
            Gets/sets whether the visual object will be visible on the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.VisualSettingsOverrideBase.VisibilityResolved">
            <summary>
            Resolves if the visual boject for this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> should be visible. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.FixedRowAlignment">
            <summary>
            An Enum that describes where a FixedRow should be aligned. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedRowAlignment.Top">
            <summary>
            A FixedRow should be aligned to the top of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedRowAlignment.Bottom">
            <summary>
            A FixedRow should be aligned to the bottom of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnWidthType">
            <summary>
            An Enum that describes the type of width for the Column.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnWidthType.Auto">
            <summary>
            A column's width will size to the largest header or cell in the column. 
            Note: while scrolling the width of the column may grow as larger content comes into view, however,
            it will never decrease in width.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnWidthType.InitialAuto">
            <summary>
            A column's width will size to the largest header or cell in the column. However, this will only occur
            when the grid first loads. Or when a user double clicks on the edge of a column header to resize. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnWidthType.SizeToHeader">
            <summary>
            A column's width will size to the header of a column. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnWidthType.SizeToCells">
            <summary>
            A column's width will size to the largest cell in the column. 
            Note: while scrolling the width of the column may grow as larger content comes into view, however,
            it will never decrease in width.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnWidthType.Star">
            <summary>
            A column's width will size to fill any remaing space in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>. 
            If more than one column has a star value specified, the remaing width will be split
            evenly amongst the columns. 
            If other columns already are taking up the majority of the space, the column's width will be zero.
            If the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>'s width is Infinity, then the column will act as ColumnWidthType.Auto width.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnWidthType.Numeric">
            <summary>
            A column's width will size to the value specified. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnLayoutHeaderVisibility">
            <summary>
            An Enum that describes whether a <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>'s header row will be visible. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnLayoutHeaderVisibility.SiblingsExist">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>'s header row will be visible only if the ColumnLayout has siblings.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnLayoutHeaderVisibility.Always">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>'s header row will always be visible.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnLayoutHeaderVisibility.Never">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>'s header row will never be visible.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnMovingType">
            <summary>
            Describes how Column Moving will work in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnMovingType.Disabled">
            <summary>
            Column moving is turned off.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnMovingType.Indicator">
            <summary>
            An Indicator will show where a column will be inserted.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnMovingType.Immediate">
            <summary>
            Moves the column immediately into the column position closest to the mouse pointer.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.SortDirection">
            <summary>
            Describes options available for sorting in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SortDirection.None">
            <summary>
            No sort is applied.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SortDirection.Ascending">
            <summary>
            InvalidateSort in an ascending manner.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SortDirection.Descending">
            <summary>
            InvalidateSort in a descending manner.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.KeyboardNavigation">
            <summary>
            Describes options for Keyboard navigation in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.KeyboardNavigation.CurrentLayout">
            <summary>
            When using the UP/Down arrows, the ActiveCell will stay on the current band.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.KeyboardNavigation.AllLayouts">
            <summary>
            When using the UP/Down arrows, the ActiveCell will go into child and parent bands.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.CellSelectionAction">
            <summary>
            Describes how selection should work when a user clicks on a cell in the grid. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.CellSelectionAction.SelectRow">
            <summary>
            The Entire row should be selected. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.CellSelectionAction.SelectCell">
            <summary>
            The particular cell should be selected. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.SelectionType">
            <summary>
            Describes the type of selection that should be performed. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SelectionType.None">
            <summary>
            Selection should be disabled
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SelectionType.Single">
            <summary>
            Only one item should be selected at a given time. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SelectionType.Multiple">
            <summary>
            Multiple items can be selected via the ctrl and shift keys. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.CellAlignment">
            <summary>
            Specifies how a cell should be aligned. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.CellAlignment.Top">
            <summary>
            The Cell should be aligned to the top.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.CellAlignment.Bottom">
            <summary>
            The Cell should be aligned to the bottom. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.CellAlignment.NotSet">
            <summary>
            The Cell can be aligned wherever it needs to. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.InvokeAction">
            <summary>
            An enumeration of different interactions.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.InvokeAction.Keyboard">
            <summary>
            An action was raised via the keyboard. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.InvokeAction.MouseMove">
            <summary>
            An action was raised via the mouse moving. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.InvokeAction.Click">
            <summary>
            An action was raised via a MouseDown or Spacebar press.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.InvokeAction.Code">
            <summary>
            An action was raised via the API.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DragSelectType">
            <summary>
            Describes the type of drag selection that should occur in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DragSelectType.None">
            <summary>
            A DragSelect operation shouldn'type occur.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DragSelectType.Cell">
            <summary>
            A Cell DragSelection should occur. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DragSelectType.Row">
            <summary>
            A Row DragSelection should occur. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DragSelectType.Column">
            <summary>
            A Column DragSelection should occur. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.FixedIndicatorDirection">
            <summary>
            An enumeration that describes how a <see cref="T:Infragistics.Controls.Grids.Column"/> should be fixed when it's indicator is pressed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedIndicatorDirection.Left">
            <summary>
            Determines what side of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> a <see cref="T:Infragistics.Controls.Grids.Column"/>'s will be locked so that it 
            can'type be scrolled, when the pinned indicator is pressed
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedIndicatorDirection.Right">
            <summary>
            Determines what side of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> a <see cref="T:Infragistics.Controls.Grids.Column"/>'s will be locked so that it 
            can'type be scrolled, when the pinned indicator is pressed
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.FixedDropAreaLocation">
            <summary>
            An enumeration that describes where a <see cref="T:Infragistics.Controls.Grids.Column"/> can be dragged to be fixed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedDropAreaLocation.Left">
            <summary>
            When a <see cref="T:Infragistics.Controls.Grids.Column"/> is dragged, a drop area will be displayed on the left side of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            that will allow the user to drop the column in order to lock it in place so that it can'type be scrolled.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedDropAreaLocation.Right">
            <summary>
            When a <see cref="T:Infragistics.Controls.Grids.Column"/> is dragged, a drop area will be displayed on the right side of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            that will allow the user to drop the column in order to lock it in place so that it can'type be scrolled.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedDropAreaLocation.Both">
            <summary>
            When a <see cref="T:Infragistics.Controls.Grids.Column"/> is dragged, a drop area will be displayed on both the left and right side of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            that will allow the user to drop the column in order to lock it in place so that it can'type be scrolled.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.FixedColumnType">
            <summary>
            An enumeration that describes if fixed columns are turned on, and if so then how it should be used.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedColumnType.Disabled">
            <summary>
            Fixed columns are turned off.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedColumnType.Indicator">
            <summary>
            Fixed columns are turned on and a <see cref="T:Infragistics.Controls.Grids.Column"/> can be fixed by clicking on an indicator.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedColumnType.DropArea">
            <summary>
            Fixed columns are turned on and a <see cref="T:Infragistics.Controls.Grids.Column"/> can be fixed by dragging it to a designated are of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedColumnType.Both">
            <summary>
            Fixed columns are turned on and a <see cref="T:Infragistics.Controls.Grids.Column"/> can be fixed by both indicator and drop area.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.FixedState">
            <summary>
            An enumeration that describes if a column is fixed, and if so on what side is it fixed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedState.NotFixed">
            <summary>
            Column is not fixed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedState.Left">
            <summary>
            Column is fixed to the left.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FixedState.Right">
            <summary>
            Column is fixed to the right. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DropOperationType">
            <summary>
            An enumeration that describes the type of operation that caused a Drop during a Column moving operation.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DropOperationType.ColumnMoved">
            <summary>
            Column has been moved.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DropOperationType.ColumnFixed">
            <summary>
            Column has been fixed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DropOperationType.FixColumnMoved">
            <summary>
            A fixed column has been moved. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DropOperationType.ColumnGrouped">
            <summary>
            A Column has been Grouped
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DropOperationType.GroupedColumnIndexChanged">
            <summary>
            A Column's grouped index has changed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DragCancelType">
            <summary>
            An enumeration that describes why a drop operation was cancelled.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DragCancelType.ColumnUnfixed">
            <summary>
            Column has been unpinned.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DragCancelType.MoveCanceled">
            <summary>
            A column wasnt moved. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DragCancelType.ColumnUngrouped">
            <summary>
            A column was ungrouped.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.MouseEditingAction">
            <summary>
            Describes the type of action that can cause a <see cref="T:Infragistics.Controls.Grids.Cell"/> to enter edit mode with a mouse.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.MouseEditingAction.SingleClick">
            <summary>
            Clicking on a <see cref="T:Infragistics.Controls.Grids.Cell"/> will cause it to enter edit mode.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.MouseEditingAction.DoubleClick">
            <summary>
            Double clicking on a <see cref="T:Infragistics.Controls.Grids.Cell"/> will cause it to enter edit mode.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.MouseEditingAction.None">
            <summary>
            No mouse action will cause a <see cref="T:Infragistics.Controls.Grids.Cell"/> to enter edit mode.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.EditingType">
            <summary>
            Describes the different types of editing modes.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.EditingType.None">
            <summary>
            Editing will not occur.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.EditingType.Cell">
            <summary>
            All editing actions will put a single <see cref="F:Infragistics.Controls.Grids.EditingType.Cell"/> into edit mode.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.EditingType.Row">
            <summary>
            All editing actions will put an entire <see cref="F:Infragistics.Controls.Grids.EditingType.Row"/> into edit mode.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.EditingType.Hover">
            <summary>
            Hovering a cell will place either the <see cref="F:Infragistics.Controls.Grids.EditingType.Row"/> or the <see cref="F:Infragistics.Controls.Grids.EditingType.Cell"/> into edit mode, specified by the RowHover Property on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.PagingLocation">
            <summary>
            Enumeration describing where paging will be on the row island.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.PagingLocation.None">
            <summary>
            PagingLocation is not enabled.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.PagingLocation.Top">
            <summary>
            PagingLocation is enabled and the pager is on top.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.PagingLocation.Bottom">
            <summary>
            PagingLocation is enabled and the pager is on bottom.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.PagingLocation.Both">
            <summary>
            PagingLocation is enabled and the pager is on the top and the bottom.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.PagingLocation.Hidden">
            <summary>
            PagingLocation is enabled, without the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerRow"/> rendering. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.AddNewRowLocation">
            <summary>
            Enumeration describing where the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/> will be displayed on the row island.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.AddNewRowLocation.None">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/> will not be displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.AddNewRowLocation.Top">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/> will be displayed at the top of the row island.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.AddNewRowLocation.Bottom">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/> will be displayed at the bottom of the row island.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.AddNewRowLocation.Both">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/> will be displayed at the top and the bottom of the row island.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnResizingType">
            <summary>
            Describes how Column Resizing will work in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnResizingType.Disabled">
            <summary>
            Column resizing is turned off.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnResizingType.Indicator">
            <summary>
            An Indicator will show where a column is sized.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnResizingType.Immediate">
            <summary>
            Resizes a column as the mouse is moved.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DropAreaIndicatorState">
            <summary>
            An enumeration that describes the states that a DropAreaIndcator can be in. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DropAreaIndicatorState.Left">
            <summary>
            The indicator is currently being displayed on the left.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DropAreaIndicatorState.Right">
            <summary>
            The indicator is currently being displayed on the right.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DropAreaIndicatorState.Hidden">
            <summary>
            The indicator is curently being hidden.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DropAreaIndicatorState.MouseOver">
            <summary>
            The mouse is currently over the indicator.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.RowType">
            <summary>
            An enumeration that contains all the different types of rows that the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> contains.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowType.DataRow">
            <summary>
            A row that represents a record of data.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowType.HeaderRow">
            <summary>
            A row that represents the header of an island of rows.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowType.FooterRow">
            <summary>
            A row that represents the footer of an island of rows.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowType.GroupByRow">
            <summary>
            A row that represents a row that represents a grouped item.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowType.PagerRow">
            <summary>
            A row that contains the pager.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowType.ColumnLayoutHeaderRow">
            <summary>
            A row that represents the header of a <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowType.AddNewRow">
            <summary>
            A row that represents the <see cref="F:Infragistics.Controls.Grids.RowType.AddNewRow"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowType.GroupByAreaRow">
            <summary>
            A row that represents the <see cref="F:Infragistics.Controls.Grids.RowType.GroupByAreaRow"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowType.FilterRow">
            <summary>
            A row that represents the <see cref="F:Infragistics.Controls.Grids.RowType.FilterRow"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowType.ColumnLayoutTemplateRow">
            <summary>
            A row that represents the <see cref="F:Infragistics.Controls.Grids.RowType.ColumnLayoutTemplateRow"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowType.SummaryRow">
            <summary>
            A row that represents the <see cref="F:Infragistics.Controls.Grids.RowType.SummaryRow"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowType.MergedSummaryRow">
            <summary>
            A row that represents the <see cref="F:Infragistics.Controls.Grids.RowType.MergedSummaryRow"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.FilterRowLocation">
            <summary>
            An enumeration that describes where the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRow"/> will be located.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilterRowLocation.None">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRow"/> will not be displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilterRowLocation.Top">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRow"/> will be displayed at the top of the row island.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilterRowLocation.Bottom">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRow"/> will be displayed at the bottom of the row island.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.FilterUIType">
            <summary>
            An enumeration that describes which Filtering UI will be used.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilterUIType.None">
            <summary>
            A Filtering UI will not be displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilterUIType.FilterRowTop">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRow"/> will be displayed at the top of the row island.
            The Filter Menu will not be used.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilterUIType.FilterRowBottom">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRow"/> will be displayed at the bottom of the row island.
            The Filter Menu will not be used.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilterUIType.FilterMenu">
            <summary>
            The FilterMenu will be available in the HeaderCell. 
            The <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRow"/> will not be used.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.GroupByAreaLocation">
            <summary>
            The location of the GroupByArea
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupByAreaLocation.Hidden">
            <summary>
            The GroupByArea will be hidden, however users will still be able to GroupBy a column via the API.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupByAreaLocation.Top">
            <summary>
            The GroupByArea will be aligned to the Top of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupByAreaLocation.Bottom">
            <summary>
            The GroupByArea will be aligned to the Bottom of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.RowHeightType">
            <summary>
            An Enum that describes the type of height for the Row.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowHeightType.SizeToLargestCell">
            <summary>
            A row's height will size to the tallest cell in the row. 
            Note: while scrolling the height of the row may grow as larger content comes into view, however,
            it will never decrease in height.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowHeightType.Dynamic">
            <summary>
            A row's height will size to the tallest cell in the row, that is currently in view. 
            Note: while scrolling the height of the row may grow as larger  or smaller as content comes in and out of view
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowHeightType.Numeric">
            <summary>
            A rows's height will size to the value specified. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DeferredScrollingType">
            <summary>
            An Enum that describes the type of DeferredScrolling that the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> will use.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DeferredScrollingType.None">
            <summary>
            DeferredScrolling will be disabled.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DeferredScrollingType.Default">
            <summary>
            A template will be displayed when using the thumb of the vertical scrollbar, and display the data of the row that would 
            be currently displayed at the very top of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.FilteringScope">
            <summary>
            An Enum that describes the type of Filtering that the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> will use.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringScope.ChildBand">
            <summary>
            Each child band of data is filtered independently.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilteringScope.ColumnLayout">
            <summary>
            All rows which share a <see cref="F:Infragistics.Controls.Grids.FilteringScope.ColumnLayout"/> will be filtered together.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.SummaryScope">
            <summary>
            An Enum that describes the type of summary that the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> will use.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SummaryScope.ChildBand">
            <summary>
            Each child band of data is summed independently.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SummaryScope.ColumnLayout">
            <summary>
            All rows which share a <see cref="F:Infragistics.Controls.Grids.SummaryScope.ColumnLayout"/> will be summed together.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DeleteKeyAction">
            <summary>
            An Enum that describes the action that will take place when a user presses the Delete Key on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DeleteKeyAction.None">
            <summary>
            Nothing should happen when the Delete key is pressed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DeleteKeyAction.DeleteSelectedRows">
            <summary>
            All selected rows should be deleted.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DeleteKeyAction.DeleteRowOfActiveCell">
            <summary>
            Only the <see cref="T:Infragistics.Controls.Grids.Row"/> of the ActiveCell should be deleted.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DeleteKeyAction.DeleteRowsOfSelectedCells">
            <summary>
            Only the unique rows of the the selected cells should be deleted.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DeleteKeyAction.DeleteRowsOfSelectedCellsAndRows">
            <summary>
            The unique rows of the selected cells and all of the selected rows should be deleted.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.RowHoverType">
            <summary>
            An enum that describes the types of hovering that can occur when the mouse is over a Cell.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowHoverType.Cell">
            <summary>
            A hover effect will only be applied to a cell
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowHoverType.Row">
            <summary>
            A hover effect will be applied to all Cell objects in that Row.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.RowHoverType.None">
            <summary>
            No hover effect will be applied. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.MultiSortingKey">
            <summary>
            An enum that describes which keyboard key will be used to designate multiple additive sorting.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.MultiSortingKey.Control">
            <summary>
            The Control (Ctrl) key will be used to designate multiple sorting.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.MultiSortingKey.Shift">
            <summary>
            The Shift key will be used to designate multiple sorting.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.SummaryRowLocation">
            <summary>
            An enumeration that describes where the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRow"/> will be located.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SummaryRowLocation.None">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRow"/> will not be displayed.
            </summary>	
        </member>
        <member name="F:Infragistics.Controls.Grids.SummaryRowLocation.Top">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRow"/> will be displayed at the top of the row island.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SummaryRowLocation.Bottom">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRow"/> will be displayed at the bottom of the row island.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.SummaryRowLocation.Both">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRow"/> will be displayed at the top and the bottom of the row island.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.StyleScope">
            <summary>
            An enumeration that describes which style will be altered during conditional formatting.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.StyleScope.Cell">
            <summary>
            The individual cell's style will be altered.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.StyleScope.Row">
            <summary>
            The cell style for all cells in the row will be altered.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ValueType">
            <summary>
            An enumeration that describes what an inputted value in a conditional formatting rule should be interpretted as.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ValueType.GeneratedValue">
            <summary>
            During processing of the rule, an value will be determined by the XamGrid.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ValueType.Number">
            <summary>
            A user inputted value will be expected.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ValueType.Percent">
            <summary>
            The percentage value based on the range of the data.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ValueType.Percentile">
            <summary>
            The percentile value with respect to where the given value falls in the given set.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.IconGroupOperator">
            <summary>
            An enumeration that describes what operand should be used for Icon based conditional formatting rules.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.IconGroupOperator.GreaterThan">
            <summary>
            The icon will be used if the value is greater than the inputted value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.IconGroupOperator.GreaterThanOrEqualTo">
            <summary>
            The icon will be used if the value is greater than or equal to the inputted value.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.IconRuleValueType">
            <summary>
            An enumeration that describes what an inputted value in a conditional formatting rule should be interpretted as for icon rules.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.IconRuleValueType.Number">
            <summary>
            A user inputted value will be expected.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.IconRuleValueType.Percent">
            <summary>
            The percentage value based on the range of the data.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.IconRuleValueType.Percentile">
            <summary>
            The percentile value with respect to where the given value falls in the given set.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DataBarPositiveNegative">
            <summary>
            Enumeration that describes if the databar that is displayed should be considered a negative bar for styling.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DataBarPositiveNegative.Positive">
            <summary>
            The value is positive or should use the postive styling.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DataBarPositiveNegative.Negative">
            <summary>
            The value is negative or shoulduse the negative styling
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DataBarDirection">
            <summary>
            Enumeration that describes what direction the data bars will be drawn when using Conditional Formatting.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DataBarDirection.UnidirectionalLeftToRight">
            <summary>
            A single directional bar will be drawn from the left edge to the right edge.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DataBarDirection.UnidirectionalRightToLeft">
            <summary>
            A single directional bar will be drawn from the right edge to the left edge.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DataBarDirection.Bidirectional">
            <summary>
            The positive bar will be drawn from the center of the cell to the right, the negative bar will be drawn from the center to the left.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.AverageFormattingTarget">
            <summary>
            Enumeration describing which cells will have their style set in the AverageValueConditionalFormatRule.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.AverageFormattingTarget.Above">
            <summary>
            Values above the average will be styled.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.AverageFormattingTarget.EqualOrAbove">
            <summary>
            Values equal or above the average will be styled.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.AverageFormattingTarget.Below">
            <summary>
            Values below the average will be styled.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.AverageFormattingTarget.EqualOrBelow">
            <summary>
            Values equal or below the average will be styled.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.AllowToolTips">
            <summary>
            An enumeration that describes when tooltips should be displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.AllowToolTips.Never">
            <summary>
            Tooltips should never be displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.AllowToolTips.Always">
            <summary>
            Tooltips should always be displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.AllowToolTips.Overflow">
            <summary>
            Tooltips should only be displayed if the content is clipped.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.GridClipboardCopyOptions">
            <summary>
            An Enum that defines how Ctrl-C should be handled on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GridClipboardCopyOptions.ExcludeHeaders">
            <summary>
            Copy to clipboard all selected items, but dont copy the corresponding headers.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GridClipboardCopyOptions.IncludeHeaders">
            <summary>
            Copy to clipboard all selected items, and include the coresponding headers.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.GridClipboardCopyType">
            <summary>
            An enum that describes what should be copied using Ctrl-c in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GridClipboardCopyType.SelectedCells">
            <summary>
            Only copy selected cells to the clipboard. For this option, you need to have Cell Selection turned on.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GridClipboardCopyType.SelectedRows">
            <summary>
            Only copy selected rows to the clipboard. For this option, you need to have Row Selection turned on.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GridClipboardCopyType.Default">
            <summary>
            Depending on CellClickAction property, selected cells or rows will be copied.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.GroupByOperation">
            <summary>
            An enum that describes what type of operation should occur, when you groupby a column
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupByOperation.GroupByRows">
            <summary>
            A standard groupby operation will occur, where expandable rows will be used to show the grouped data.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.GroupByOperation.MergeCells">
            <summary>
            The data will still appear flat, however cells in the grouped column that have the same data will be merged into one larger cell that spans
            all rows with that data.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.FilterMenuCumulativeSelectionList">
            <summary>
            An enum that describes how the selection list on the FilterMenu drop down will be populated.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilterMenuCumulativeSelectionList.ExcelStyle">
            <summary>
            With <see cref="T:Infragistics.Controls.Grids.FilterMenuCumulativeSelectionList"/>.ExcelStyle, the list generated will be limited based on other filters which are applied.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.FilterMenuCumulativeSelectionList.CompleteList">
            <summary>
            With <see cref="T:Infragistics.Controls.Grids.FilterMenuCumulativeSelectionList"/>.CompleteList, this list will have all unique values from the given ItemsSource.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.EditorDisplayBehaviors">
            <summary>
            An Enum that defines how Editor Control is rendered on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.EditorDisplayBehaviors.Default">
            <summary>
            Default behavior for the display of the Editor Control.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.EditorDisplayBehaviors.Always">
            <summary>
            Editor Control is Always displayed and accessible.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.EditorDisplayBehaviors.EditMode">
            <summary>
            Editor Control is only displayed in Edit Mode.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateFilterObjectType">
            <summary>
            An Enum for date filtering.   
            </summary>
            <remarks>
            In the DateFilterSelectionControl, there is a drop down which limits how the search is going to proceed.
            This enum can be used to limit the search over a given criteria.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Grids.DateFilterObjectType.None">
            <summary>
            A special value designating that the value was not set.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DateFilterObjectType.All">
            <summary>
            Searches over all parts of the date time field.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DateFilterObjectType.Year">
            <summary>
            Searches over the <see cref="P:System.DateTime.Year"/> part of the field.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DateFilterObjectType.Month">
            <summary>
            Searches over the <see cref="P:System.DateTime.Month"/> of the field.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DateFilterObjectType.Date">
            <summary>
            Searches over the <see cref="P:System.DateTime.Date"/> of the field.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DateFilterObjectType.Hour">
            <summary>
            Searches over the <see cref="P:System.DateTime.Hour"/> of the field.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DateFilterObjectType.Minute">
            <summary>
            Searches over the <see cref="P:System.DateTime.Month"/> of the field.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.DateFilterObjectType.Second">
            <summary>
            Searches over the <see cref="P:System.DateTime.Second"/> of the field.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ClipboardPasteErrorType">
            <summary>
            An Enum for the different types of errors to be raised during excel like paste.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ClipboardPasteErrorType.CastError">
            <summary>
            Designates that the error happened because of a bad cast.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ClipboardPasteErrorType.TruncationError">
            <summary>
            Designates that the error happened because of an issue with truncation.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ClipboardPasteErrorType.InvalidInputSelection">
            <summary>
            Designates that the error happened because of data stored in the clipboard is not compatible to paste into the desired area.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ClipboardPasteErrorType.InvalidDestinationSelection">
            <summary>
            Designates that the error happened because the desired destination for pasting was invalid.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ClipboardPasteErrorType.ReadOnlyColumn">
            <summary>
            Triggers to let the consumer know that paste operation is being denied due to a Read Only Column.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ClipboardPasteErrorType.UnboundColumn">
            <summary>
            Triggers to let the consumer know that paste operation is being denied, due to an Unbound Column.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ClipboardPasteErrorType.UnknownError">
            <summary>
            Designates that an unknown Error happened while attempting to paste a value into a cell.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.CellControlGenerationMode">
            <summary>
            Enumeration used to indicate how/whether <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> elements within a <see cref="T:Infragistics.Controls.Grids.Primitives.CellsPanel"/> are created.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.CellControlGenerationMode.Virtualize">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> is only ever used for a specific <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> and is lazily allocated as needed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.CellControlGenerationMode.Recycle">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> can be reused between <see cref="!:ColummBase"/> objects of the same type in the same <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> within the <see cref="T:Infragistics.Controls.Grids.Primitives.CellsPanel"/> of a row.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.SortingCancellableEventArgs">
            <summary>
            A class listing the information needed during the <see cref="E:Infragistics.Controls.Grids.XamGrid.ColumnSorting"/> event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SortingCancellableEventArgs.PreviousSortDirection">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.SortDirection"/> prior to the change being made.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SortingCancellableEventArgs.NewSortDirection">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.SortDirection"/> as it will be applied.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.SortedColumnEventArgs">
            <summary>
            A class listing the <see cref="T:Infragistics.Controls.Grids.Column"/> that corresponds to the sorting event that was fired.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SortedColumnEventArgs.PreviousSortDirection">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.SortDirection"/>that was previously applied.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ActiveCellChangingEventArgs">
            <summary>
            A class listing the information needed during the <see cref="E:Infragistics.Controls.Grids.XamGrid.ActiveCellChanging"/> event. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ActiveCellChangingEventArgs.PreviousActiveCell">
            <summary>
            Gets the Cell that was previously Active.  
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ActiveCellChangingEventArgs.NewActiveCell">
            <summary>
            Gets the Cell that is about to become the ActiveCell. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.SelectionCollectionChangedEventArgs`1">
            <summary>
            A class listing the information needed during selection collection events of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
            <typeparam propertyName="T"></typeparam>
        </member>
        <member name="P:Infragistics.Controls.Grids.SelectionCollectionChangedEventArgs`1.PreviouslySelectedItems">
            <summary>
            A collection of items that were previously selected. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.SelectionCollectionChangedEventArgs`1.NewSelectedItems">
            <summary>
            A collection of items that are currently selected.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.CellControlAttachedEventArgs">
            <summary>
            A class listing the information needed during the <see cref="E:Infragistics.Controls.Grids.XamGrid.CellControlAttached"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellControlAttachedEventArgs.Cell">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.CellControlAttachedEventArgs.Cell"/> object that was just recently made visible.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellControlAttachedEventArgs.IsDirty">
            <summary>
            Gets/Sets whether the <see cref="T:Infragistics.Controls.Grids.CellControl"/> for the <see cref="P:Infragistics.Controls.Grids.CellControlAttachedEventArgs.Cell"/> should be disposed of when it scrolls out of view.
            </summary>
            <remarks>
            This flag must be set to true when changing a property on the <see cref="T:Infragistics.Controls.Grids.CellControl"/> object. Otherwise it will 
            be recycled and the properties that were applied to the control will be applied to another cell that you may 
            not have wanted the changes to be applied to. 
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.InitializeRowEventArgs">
            <summary>
            A class listing the information needed during the <see cref="E:Infragistics.Controls.Grids.XamGrid.InitializeRow"/> 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.RowSelectorClickedEventArgs">
            <summary>
            A class listing the information needed during the <see cref="E:Infragistics.Controls.Grids.XamGrid.RowSelectorClicked"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowSelectorClickedEventArgs.Row">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.RowSelectorClickedEventArgs.Row"/> whose RowSelector has been clicked.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.CellClickedEventArgs">
            <summary>
            A class listing the information needed when the mouse clicks on a <see cref="P:Infragistics.Controls.Grids.CellClickedEventArgs.Cell"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellClickedEventArgs.Cell">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.CellClickedEventArgs.Cell"/> that was clicked.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnFixedStateEventArgs">
            <summary>
            A class listing the <see cref="T:Infragistics.Controls.Grids.Column"/> that corresponds to the event that was fired.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnFixedStateEventArgs.PreviousFixedState">
            <summary>
            Gets the old fixed state of the column.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.CancellableColumnFixedStateEventArgs">
            <summary>
            A class listing the <see cref="T:Infragistics.Controls.Grids.Column"/> that corresponds to the event that was fired.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CancellableColumnFixedStateEventArgs.FixedState">
            <summary>
            Gets the new fixed state of the column.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnLayoutAssignedEventArgs">
            <summary>
            A class listing the <see cref="P:Infragistics.Controls.Grids.ColumnLayoutAssignedEventArgs.ColumnLayout"/> that corresponds to the event that was fired.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayoutAssignedEventArgs.ColumnLayout">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.ColumnLayoutAssignedEventArgs.ColumnLayout"/> that this event was triggered for.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayoutAssignedEventArgs.Level">
            <summary>
            The depth at which the <see cref="P:Infragistics.Controls.Grids.ColumnLayoutAssignedEventArgs.ColumnLayout"/> is representing. 
            </summary>
            <remarks>Level 0 is the root level.</remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayoutAssignedEventArgs.Key">
            <summary>
            Gets the key that this <see cref="P:Infragistics.Controls.Grids.ColumnLayoutAssignedEventArgs.ColumnLayout"/> represetns.
            </summary>
            <remarks>A null key would be the root level.</remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayoutAssignedEventArgs.DataType">
            <summary>
            Gets the type of data that this <see cref="P:Infragistics.Controls.Grids.ColumnLayoutAssignedEventArgs.ColumnLayout"/> will represent.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayoutAssignedEventArgs.Rows">
            <summary>
            Gets the collection of rows or row island that this particular <see cref="P:Infragistics.Controls.Grids.ColumnLayoutAssignedEventArgs.ColumnLayout"/> will represent.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.CancellableRowExpansionChangedEventArgs">
            <summary>
            A class listing the information needed for expandable row events.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CancellableRowExpansionChangedEventArgs.Row">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.Primitives.ExpandableRowBase"/> who has been expanded or collapsed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.RowExpansionChangedEventArgs">
            <summary>
            A class listing the information needed for expandable row events.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowExpansionChangedEventArgs.Row">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.Primitives.ExpandableRowBase"/> who has been expanded or collapsed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnDragStartEventArgs">
            <summary>
            A class listing the information needed for starting a column drag.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnMovingEventArgs">
            <summary>
            A class listing the information needed for moving a column.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnMovingEventArgs.DraggingHeader">
            <summary>
            Gets a reference to the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCellControl"/> that is visually being dragged.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnMovingEventArgs.MouseArgs">
            <summary>
            The <see cref="T:System.Windows.Input.MouseEventArgs"/> for the event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnMovingEventArgs.GetPosition(System.Windows.UIElement)">
            <summary>
            Returns the x- and y-coordinates of the mouse pointer position, relative to the specified <see cref="T:System.Windows.UIElement"/>.
            </summary>
            <param propertyName="relativeTo"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnDroppedEventArgs">
            <summary>
            A class listing the information needed for dropping a Column
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnDroppedEventArgs.PreviousIndex">
            <summary>
            The index of the column prior to the move.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnDroppedEventArgs.NewIndex">
            <summary>
            The index of the column that resulted because of the move.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnDroppedEventArgs.DropType">
            <summary>
            The type of operation that occured.
            </summary>
            <remarks>
            <para>ColumnMoved -	A column has been moved, look at the <see cref="P:Infragistics.Controls.Grids.ColumnDroppedEventArgs.PreviousIndex"/> and <see cref="P:Infragistics.Controls.Grids.ColumnDroppedEventArgs.NewIndex"/> properties.</para>
            <para>ColumnFixed - A column has been fixed, the <see cref="P:Infragistics.Controls.Grids.ColumnDroppedEventArgs.PreviousIndex"/> and <see cref="P:Infragistics.Controls.Grids.ColumnDroppedEventArgs.NewIndex"/> propreties don't mean anything.	</para>
            <para>FixColumnMoved - A fixed column has been moved, the <see cref="P:Infragistics.Controls.Grids.ColumnDroppedEventArgs.PreviousIndex"/> and <see cref="P:Infragistics.Controls.Grids.ColumnDroppedEventArgs.NewIndex"/> are in reference to the FixedColumns collection.</para>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnDragCanceledEventArgs">
            <summary>
            A class listing the information needed when a drag operation is canceled. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnDragCanceledEventArgs.CancelType">
            <summary>
            The type of operation that occured.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnDragEndedEventArgs">
            <summary>
            A class listing the information needed when a drag operation is finished. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.BeginEditingCellEventArgs">
            <summary>
            Provides information needed during the <see cref="E:Infragistics.Controls.Grids.XamGrid.CellEnteringEditMode"/> event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.BeginEditingCellEventArgs.Cell">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.BeginEditingCellEventArgs.Cell"/> entering edit mode.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.EditingCellEventArgs">
            <summary>
            Provides information to editing events.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditingCellEventArgs.Cell">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.EditingCellEventArgs.Cell"/> that is currently being edited.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditingCellEventArgs.Editor">
            <summary>
            Gets the editor that is being displayed in the <see cref="P:Infragistics.Controls.Grids.EditingCellEventArgs.Cell"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.CellExitedEditingEventArgs">
            <summary>
            Provides information to editing events.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellExitedEditingEventArgs.Cell">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.CellExitedEditingEventArgs.Cell"/> that is currently being edited.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ExitEditingCellEventArgs">
            <summary>
            Provides information needed during the <see cref="E:Infragistics.Controls.Grids.XamGrid.CellExitingEditMode"/> event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ExitEditingCellEventArgs.Cell">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.ExitEditingCellEventArgs.Cell"/> exiting edit mode.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ExitEditingCellEventArgs.NewValue">
            <summary>
            Gets/sets the value that will be set in the cell.
            </summary>
            <remarks>
            For some columns (like <see cref="T:Infragistics.Controls.Grids.TemplateColumn"/> and <see cref="T:Infragistics.Controls.Grids.UnboundColumn"/>) the new value cannot
            be predetermined becuase of the use of DataTemplates and user-defined bindings. In these cases
            the <see cref="P:Infragistics.Controls.Grids.ExitEditingCellEventArgs.NewValue"/> will be <c>null</c>.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.ExitEditingCellEventArgs.EditingCanceled">
            <summary>
            Gets whether editing was canceled in the UI.
            </summary>
            <remarks>
            For example: the escape key was pressed.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.ExitEditingCellEventArgs.Editor">
            <summary>
            Gets the editor that is being displayed in the <see cref="P:Infragistics.Controls.Grids.ExitEditingCellEventArgs.Cell"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.BeginEditingRowEventArgs">
            <summary>
            Provides information needed during the <see cref="E:Infragistics.Controls.Grids.XamGrid.RowEnteringEditMode"/> event.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.EditingRowEventArgs">
            <summary>
            Provides information to editing events.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ExitEditingRowEventArgs">
            <summary>
            Provides information needed during the <see cref="E:Infragistics.Controls.Grids.XamGrid.RowExitingEditMode"/> event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ExitEditingRowEventArgs.Row">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.ExitEditingRowEventArgs.Row"/> exiting edit mode.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ExitEditingRowEventArgs.EditingCanceled">
            <summary>
            Gets whether editing was canceled in the UI.
            </summary>
            <remarks>
            For example: the escape key was pressed.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.ExitEditingRowEventArgs.NewCellValues">
             <summary>
             A Dictionary of updated cell values.
             </summary>
            <remarks>
            To change a cell's value, use this Dictionary.
            The lookup key for the dictionary is the key of the column of a cell. 
            For example: e.Rows.Cells[0].Column.Key
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.ExitEditingRowEventArgs.OriginalCellValues">
             <summary>
             A Dictionary of original cell values before editing began on the <see cref="P:Infragistics.Controls.Grids.ExitEditingRowEventArgs.Row"/>
             </summary>
            <remarks>
            The lookup key for the dictionary is the key of the column of a cell. 
            For example: e.Rows.Cells[0].Column.Key
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.CancellablePageChangingEventArgs">
            <summary>
            A class listing the information needed when a paging operation is started.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CancellablePageChangingEventArgs.NextPageIndex">
            <summary>
            The PageIndex of the page of data that will become visible.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CancellablePageChangingEventArgs.ColumnLayout">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.CancellablePageChangingEventArgs.ColumnLayout"/> that this event was triggered for.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CancellablePageChangingEventArgs.Level">
            <summary>
            The depth at which the <see cref="P:Infragistics.Controls.Grids.CancellablePageChangingEventArgs.ColumnLayout"/> is representing. 
            </summary>
            <remarks>Level 0 is the root level.</remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.CancellablePageChangingEventArgs.Rows">
            <summary>
            Gets the collection of rows or row island that this particular <see cref="P:Infragistics.Controls.Grids.CancellablePageChangingEventArgs.ColumnLayout"/> will represent.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.PageChangedEventArgs">
            <summary>
            A class listing the information needed after a pager operation is completed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.PageChangedEventArgs.OldPageIndex">
            <summary>
            The PageIndex of the page that was visible.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnLayoutEventArgs">
            <summary>
            A class listing the <see cref="P:Infragistics.Controls.Grids.ColumnLayoutEventArgs.ColumnLayout"/> that was modified for an event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayoutEventArgs.ColumnLayout">
            <summary>
            The ColumnLayout that was modified in some way.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.CancellableColumnResizingEventArgs">
            <summary>
            A class listing the EventArgs for a user driven column resizing.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CancellableColumnResizingEventArgs.Columns">
            <summary>
            A Collection of columns that will be resized during this resizing action.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CancellableColumnResizingEventArgs.Width">
            <summary>
            The starting width of the column.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnResizedEventArgs">
            <summary>
            A class listing the EventArgs after a column is finished resizing.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnResizedEventArgs.Columns">
            <summary>
            A Collection of columns that was resized during the action.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.CancellableRowAddingEventArgs">
            <summary>
            A class listing the <see cref="T:Infragistics.CancellableEventArgs"/> for Adding and Inserting a new row.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CancellableRowAddingEventArgs.InsertionIndex">
            <summary>
            The index at which the row is being inserted.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.RowEventArgs">
            <summary>
            A class listing the EventArgs for an event with a <see cref="P:Infragistics.Controls.Grids.RowEventArgs.Row"/> input.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowEventArgs.Row">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.RowEventArgs.Row"/> that was modified.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.CancellableRowEventArgs">
            <summary>
            A class listing the EventArgs for a cancellable event with a row input.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CancellableRowEventArgs.Row">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.CancellableRowEventArgs.Row"/> that was modified.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.GroupByCollectionChangedEventArgs">
            <summary>
            A class listing the information needed during GroupBy collection events of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupByCollectionChangedEventArgs.PreviousGroupedColumns">
            <summary>
            A collection of items that were previously grouped. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupByCollectionChangedEventArgs.NewGroupedColumns">
            <summary>
            A collection of items that are currently grouped.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.CellValidationErrorEventArgs">
            <summary>
            A class listing the information needed when a Cell fails validation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellValidationErrorEventArgs.ValidationErrorEventArgs">
            <summary>
            The actual <see cref="P:Infragistics.Controls.Grids.CellValidationErrorEventArgs.ValidationErrorEventArgs"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellValidationErrorEventArgs.Cell">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.CellValidationErrorEventArgs.Cell"/> whose validation failed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellValidationErrorEventArgs.Handled">
            <summary>
            Gets/sets whether the event is handled. If true, then the <see cref="P:Infragistics.Controls.Grids.CellValidationErrorEventArgs.Cell"/> will treat the validation as if it had passed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DataObjectCreationEventArgs">
            <summary>
            A class listing the information needed when a new object needs to be created.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DataObjectCreationEventArgs.NewObject">
            <summary>
            Gets / sets an object of the <see cref="P:Infragistics.Controls.Grids.DataObjectCreationEventArgs.ObjectType"/> which will be used as the newly created object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DataObjectCreationEventArgs.ObjectType">
            <summary>
            Gets the <see cref="T:System.Type"/> of object that the DataManager expects to be created.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DataObjectCreationEventArgs.ColumnLayout">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.DataObjectCreationEventArgs.ColumnLayout"/> which the object would be created under.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DataObjectCreationEventArgs.ParentRow">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.Row"/> object which is the parent for this object.  
            </summary>		
        </member>
        <member name="P:Infragistics.Controls.Grids.DataObjectCreationEventArgs.CollectionType">
            <summary>
            Gets the <see cref="T:System.Type"/> which is contained in the underlying collection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DataObjectCreationEventArgs.RowTypeCreated">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.RowType"/> of the row that the newly created object will be associated with.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnEventArgs">
            <summary>
            A class listing the EventArgs for an event with a <see cref="P:Infragistics.Controls.Grids.ColumnEventArgs.Column"/> input.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnEventArgs.Column">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.ColumnEventArgs.Column"/> that this event was triggered for.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.CancellableColumnEventArgs">
            <summary>
            A class listing the EventArgs for an cancellable event with a <see cref="P:Infragistics.Controls.Grids.CancellableColumnEventArgs.Column"/> input.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CancellableColumnEventArgs.Column">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.CancellableColumnEventArgs.Column"/> that this event was triggered for.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.PopulatingFiltersEventArgs">
            <summary>
            An event args for the PopulatingFilters Event
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.PopulatingFiltersEventArgs.FilterOperands">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.FilterOperandCollection"/> which represents the items which will be seen in the dropdown.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DataLimitingEventArgs">
            <summary>
            Event argument when event is raised that will limit data.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.DataLimitingEventArgs.#ctor(Infragistics.DataAcquisitionEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.DataLimitingEventArgs"/> class.
            </summary>
            <param name="args"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.DataLimitingEventArgs.DataSource">
            <summary>
            Gets / sets the IList that will be applied to the data manager.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DataLimitingEventArgs.EnablePaging">
            <summary>
            Gets if the DataManager expects paged data.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DataLimitingEventArgs.PageSize">
            <summary>
            Gets the maximum number of rows expected by the DataManager.  		
            </summary>
            <remarks>
            Used primarily when EnablePaging is true.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.DataLimitingEventArgs.CurrentPage">
            <summary>
            Gets the current page index
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DataLimitingEventArgs.CurrentSort">
            <summary>
            Gets a collection <see cref="T:Infragistics.SortContext"/> which will be applied.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DataLimitingEventArgs.GroupByContext">
            <summary>
            Gets the GroupBy that will be applied to the data.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DataLimitingEventArgs.Filters">
            <summary>
            Gets a collection that lists what filters will be applied.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DataLimitingEventArgs.ParentRow">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.Row"/> object which is the parent for this object.  
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DataLimitingEventArgs.ColumnLayout">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.DataLimitingEventArgs.ColumnLayout"/> which the object would be created under.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.CancellableFilteringEventArgs">
            <summary>
            A class listing the EventArgs when filtering the rows.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CancellableFilteringEventArgs.RowFiltersCollection">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.CancellableFilteringEventArgs.RowFiltersCollection"/> which is going to be modified.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CancellableFilteringEventArgs.FilterValue">
            <summary>
            The value which will be used by the filter.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CancellableFilteringEventArgs.FilteringOperand">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.FilterOperand"></see> which is being used to filter.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.FilteredEventArgs">
            <summary>
            A class listing the EventArgs after a filter has been applied.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.FilteredEventArgs.RowFiltersCollection">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.FilteredEventArgs.RowFiltersCollection"/> which was modified.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ClipboardCopyingEventArgs">
            <summary>
            Provides information about selected cells that will be copied to the clipboard.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ClipboardCopyingEventArgs.SelectedItems">
            <summary>
            The selected cells that will be copied to the clipboard.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ClipboardCopyingEventArgs.ClipboardValue">
            <summary>
            Gets or sets the text being copied to the clipboard.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ClipboardCopyingEventArgs.#ctor(Infragistics.Controls.Grids.XamGrid)">
            <summary>
            Internal Constructor used for building the event args and loading the XamGrid instance into it.
            </summary>
            <param name="grid"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ClipboardCopyingEventArgs.ValidateSelectedRectangle">
            <summary>
            Determines whether the selected region is valid for copying.
            </summary>
            <returns>
            <c>true</c> if the selection is valid; otherwise, <c>false</c>.
            </returns>
            <remarks>
            The selection is considered as valid if the selected cells form a rectangular region in a single band.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.ClipboardCopyingEventArgs.GetCopyTypeResolved">
            <summary>
            Gets the CopyType used by the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
            <returns>The resolved <see cref="T:Infragistics.Controls.Grids.GridClipboardCopyType"/>.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ClipboardCopyingEventArgs.IsSelectionCrossBand">
            <summary>
            Determines whether the selected cells/rows are in different bands.
            </summary>
            <returns>
            <c>true</c> if the selection is cross-band; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.ClipboardCopyingItemEventArgs">
            <summary>
            Provides information about a selected cell or a header that will be copied to the clipboard.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ClipboardCopyingItemEventArgs.Cell">
            <summary>
            Gets the cell being copied to the clipboard.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ClipboardCopyingItemEventArgs.ClipboardValue">
            <summary>
            Gets or sets the Value of the cell being copied to the clipboard.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ClipboardPastingEventArgs">
            <summary>
            Provides information about the selected sells's values from Excel that will be pasted.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ClipboardPastingEventArgs.#ctor(Infragistics.Controls.Grids.XamGrid)">
            <summary>
            Internal Constructor used for building the event args and loading the XamGrid instance into it.
            </summary>
            <param name="grid"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.ClipboardPastingEventArgs.Values">
            <summary>
            The parsed clipboard value that will be pasted.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ClipboardPastingEventArgs.ClipboardValue">
            <summary>
            The original clipboard value that will be pasted.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ClipboardPastingEventArgs.PasteAsExcel">
            <summary>
            Pastes data on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ClipboardPastingEventArgs.RevertCellValues(System.String[0:,0:],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Takes a group of cells, and reverts them to the previous values in the event an error occurred and the user does not wish to recover.
            </summary>
            <param name="values"></param>
            <param name="startingRow"></param>
            <param name="startingCol"></param>
            <param name="endingRow"></param>
            <param name="endingCol"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ClipboardPastingEventArgs.SetCellValue(Infragistics.Controls.Grids.Row,Infragistics.Controls.Grids.EditableColumn,System.String)">
            <summary>
            Sets the cell of a value.
            </summary>
            <param name="row">The <see cref="T:Infragistics.Controls.Grids.Row"/> containing the cell.</param>
            <param name="column">The <see cref="T:Infragistics.Controls.Grids.Column"/> containing the cell.</param>
            <param name="parsedCellValue">The parsed cell value.</param>
            <returns>
            <c>true</c> if the parsed value can be converted and set to the cell; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ClipboardPastingEventArgs.SelectCells(System.Collections.Generic.IEnumerable{Infragistics.Controls.Grids.Cell})">
            <summary>
            Selects cells of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
            <param name="cellsToSelect">The cells that will be selected.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ClipboardPastingEventArgs.GetRowCollectionResolved">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.RowCollection"/> containing the row of the <see cref="P:Infragistics.Controls.Grids.XamGrid.ActiveCell"/>.
            </summary>
            <returns>The <see cref="T:Infragistics.Controls.Grids.RowCollection"/> containing the row of the <see cref="P:Infragistics.Controls.Grids.XamGrid.ActiveCell"/>.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ClipboardPastingEventArgs.GetCellValue(Infragistics.Controls.Grids.Row,Infragistics.Controls.Grids.EditableColumn)">
            <summary>
            Gets the cell of a value.
            </summary>
            <param name="row">The <see cref="T:Infragistics.Controls.Grids.Row"/> containing the cell.</param>
            <param name="column">The <see cref="T:Infragistics.Controls.Grids.Column"/> containing the cell.</param>
            <returns>
            The Value in the Cell.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ClipboardPastingEventArgs.GetAllVisibleChildColumns">
            <summary>
            Gets all visible child columns in the same order as they are displayed.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.ClipboardPasteErrorEventArgs">
            <summary>
            Provides information about the selected sells's values from Excel that will be pasted.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ClipboardPasteErrorEventArgs.#ctor">
            <summary>
            The constructor for the Clipboard Paste Error Event Args, sets a couple of default values.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ClipboardPasteErrorEventArgs.ErrorType">
            <summary>
            The type of error that occurred during the excel style paste operation
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ClipboardPasteErrorEventArgs.IsRecoverable">
            <summary>
            Set by the Paste Process, dictates whether or not this error is recoverable
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ClipboardPasteErrorEventArgs.AttemptRecover">
            <summary>
            Set by the handler of the error, allows the paste process to attempt to recover from the error
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnAutoGeneratedEventArgs">
            <summary>
            Provides information about a newly generated column.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnAutoGeneratedEventArgs.Column">
            <summary>
            The Instance of the Column that was generated.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnVisibilityChangedEventArgs">
            <summary>
            Contains the arguments returned by the event fired when a <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> instance's visibility changes.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnVisibilityChangedEventArgs.Column">
            <summary>
            The Instance of the Column that was generated.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.InvalidColumnKeyException">
            <summary>
            An <see cref="T:System.Exception"/> that is thrown when a <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> is defined with a key that doesn'type have a corresponding <see cref="T:Infragistics.DataField"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.InvalidColumnKeyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.InvalidColumnKeyException"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.InvalidColumnKeyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.InvalidColumnKeyException"/> class.
            </summary>
            <param propertyName="keys">A string of all the keys that are invalid.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.InvalidColumnKeyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.InvalidColumnKeyException"/> class.
            </summary>
            <param propertyName="message">The message that should be displayed.</param>
            <param propertyName="innerException">An inner exception.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.EmptyColumnKeyException">
            <summary>
            An <see cref="T:System.Exception"/> that is thrown when a <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> is defined with a key that doesn'type have a corresponding <see cref="T:Infragistics.DataField"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.EmptyColumnKeyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.EmptyColumnKeyException"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.EmptyColumnKeyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.EmptyColumnKeyException"/> class.
            </summary>
            <param propertyName="message">The message to be displayed in the exception.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.EmptyColumnKeyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.EmptyColumnKeyException"/> class.
            </summary>
            <param propertyName="message">The message that should be displayed.</param>
            <param propertyName="innerException">An inner exception.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.DuplicateColumnKeyException">
            <summary>
            An <see cref="T:System.Exception"/> that is thrown when mulitiple columns are defined with the same key.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.DuplicateColumnKeyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.DuplicateColumnKeyException"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.DuplicateColumnKeyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.DuplicateColumnKeyException"/> class.
            </summary>
            <param propertyName="key">The key that has been duplicated.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.DuplicateColumnKeyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.DuplicateColumnKeyException"/> class.
            </summary>
            <param propertyName="message">The message that should be displayed.</param>
            <param propertyName="innerException">An inner exception.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.TypeResolutionException">
            <summary>
            An <see cref="T:System.Exception"/> that is thrown when the <see cref="T:Infragistics.Controls.Grids.Primitives.TypeTypeConverter"/> can not resolve a specified type.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.TypeResolutionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.TypeResolutionException"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.TypeResolutionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.TypeResolutionException"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.TypeResolutionException.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.TypeResolutionException"/> class.
            </summary>
            <param propertyName="type">The type that could not be resolved</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.TypeResolutionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.TypeResolutionException"/> class.
            </summary>
            <param propertyName="message">The message that should be displayed.</param>
            <param propertyName="innerException">An inner exception.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.InvalidColumnTypeMappingException">
            <summary>
            An <see cref="T:System.Exception"/> that is thrown when an invalid column type is added to the <see cref="P:Infragistics.Controls.Grids.XamGrid.ColumnTypeMappings"/> collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.InvalidColumnTypeMappingException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.InvalidColumnTypeMappingException"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.InvalidColumnTypeMappingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.InvalidColumnTypeMappingException"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.InvalidColumnTypeMappingException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.InvalidColumnTypeMappingException"/> class.
            </summary>
            <param propertyName="message">The message that should be displayed.</param>
            <param propertyName="innerException">An inner exception.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.InvalidPageIndexException">
            <summary>
            An <see cref="T:System.Exception"/> that is thrown when an invalid page index is used.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.InvalidPageIndexException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.InvalidPageIndexException"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.InvalidPageIndexException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.InvalidPageIndexException"/> class.
            </summary>
            <param propertyName="message">The message to be displayed in the exception.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.InvalidPageIndexException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.InvalidPageIndexException"/> class.
            </summary>
            <param propertyName="message">The message that should be displayed.</param>
            <param propertyName="innerException">An inner exception.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.InvalidActiveCellException">
            <summary>
            An <see cref="T:System.Exception"/> raised when an invalid active cell is detected in the control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.InvalidActiveCellException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.InvalidActiveCellException"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.InvalidActiveCellException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.InvalidActiveCellException"/> class.
            </summary>
            <param propertyName="message">The message to be displayed in the exception.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.InvalidActiveCellException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.InvalidActiveCellException"/> class.
            </summary>
            <param propertyName="message">The message that should be displayed.</param>
            <param propertyName="innerException">An inner exception.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.ResizingColumnCannotBeRemovedException">
            <summary>
            An <see cref="T:System.Exception"/> raised when the column being resized is removed from the resizing columns collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ResizingColumnCannotBeRemovedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ResizingColumnCannotBeRemovedException"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ResizingColumnCannotBeRemovedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ResizingColumnCannotBeRemovedException"/> class.
            </summary>
            <param propertyName="message">The message to be displayed in the exception.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ResizingColumnCannotBeRemovedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ResizingColumnCannotBeRemovedException"/> class.
            </summary>
            <param propertyName="message">The message that should be displayed.</param>
            <param propertyName="innerException">An inner exception.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.NullDataException">
            <summary>
            An <see cref="T:System.Exception"/> raised when the column being resized is removed from the resizing columns collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.NullDataException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.NullDataException"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.NullDataException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.NullDataException"/> class.
            </summary>
            <param propertyName="message">The message to be displayed in the exception.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.NullDataException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.NullDataException"/> class.
            </summary>
            <param propertyName="message">The message that should be displayed.</param>
            <param propertyName="innerException">An inner exception.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.DataTypeMismatchException">
            <summary>
            An <see cref="T:System.Exception"/> raised when the column being resized is removed from the resizing columns collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.DataTypeMismatchException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.DataTypeMismatchException"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.DataTypeMismatchException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.DataTypeMismatchException"/> class.
            </summary>
            <param propertyName="message">The message to be displayed in the exception.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.DataTypeMismatchException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.DataTypeMismatchException"/> class.
            </summary>
            <param propertyName="message">The message that should be displayed.</param>
            <param propertyName="innerException">An inner exception.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnLayoutException">
            <summary>
            An <see cref="T:System.Exception"/> raised when the column being resized is removed from the resizing columns collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayoutException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ColumnLayoutException"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayoutException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ColumnLayoutException"/> class.
            </summary>
            <param propertyName="message">The message to be displayed in the exception.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayoutException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ColumnLayoutException"/> class.
            </summary>
            <param propertyName="message">The message that should be displayed.</param>
            <param propertyName="innerException">An inner exception.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.ChildColumnIsSelectedAccessDeniedException">
            <summary>
            An <see cref="T:System.Exception"/> raised when a <see cref="T:Infragistics.Controls.Grids.Column"/> on a ColumnLayout, has its IsSelected property set in Xaml.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ChildColumnIsSelectedAccessDeniedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ChildColumnIsSelectedAccessDeniedException"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ChildColumnIsSelectedAccessDeniedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ChildColumnIsSelectedAccessDeniedException"/> class.
            </summary>
            <param propertyName="message">The message to be displayed in the exception.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ChildColumnIsSelectedAccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ChildColumnIsSelectedAccessDeniedException"/> class.
            </summary>
            <param propertyName="message">The message that should be displayed.</param>
            <param propertyName="innerException">An inner exception.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.ChildColumnIsGroupByAccessDeniedException">
            <summary>
            An <see cref="T:System.Exception"/> raised when a <see cref="T:Infragistics.Controls.Grids.Column"/> on a ColumnLayout, has its IsGroupBy property set in Xaml.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ChildColumnIsGroupByAccessDeniedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ChildColumnIsGroupByAccessDeniedException"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ChildColumnIsGroupByAccessDeniedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ChildColumnIsGroupByAccessDeniedException"/> class.
            </summary>
            <param propertyName="message">The message to be displayed in the exception.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ChildColumnIsGroupByAccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ChildColumnIsGroupByAccessDeniedException"/> class.
            </summary>
            <param propertyName="message">The message that should be displayed.</param>
            <param propertyName="innerException">An inner exception.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.InvalidRowIndexException">
            <summary>
            An <see cref="T:System.Exception"/> raised when the column being resized is removed from the resizing columns collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.InvalidRowIndexException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.InvalidRowIndexException"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.InvalidRowIndexException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.InvalidRowIndexException"/> class.
            </summary>
            <param propertyName="message">The message to be displayed in the exception.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.InvalidRowIndexException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.InvalidRowIndexException"/> class.
            </summary>
            <param propertyName="message">The message that should be displayed.</param>
            <param propertyName="innerException">An inner exception.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.NullConditionalFormatEvaluationValueException">
            <summary>
            An <see cref="T:System.Exception"/> raised when the column being resized is removed from the resizing columns collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.NullConditionalFormatEvaluationValueException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.NullConditionalFormatEvaluationValueException"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.NullConditionalFormatEvaluationValueException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.NullConditionalFormatEvaluationValueException"/> class.
            </summary>
            <param propertyName="message">The message to be displayed in the exception.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.NullConditionalFormatEvaluationValueException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.NullConditionalFormatEvaluationValueException"/> class.
            </summary>
            <param propertyName="message">The message that should be displayed.</param>
            <param propertyName="innerException">An inner exception.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.Cell">
            <summary>
            A standard Cell object in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Cell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Cell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.RowBase"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Cell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Column"/> object that the <see cref="T:Infragistics.Controls.Grids.Cell"/> represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Cell.IsSelected">
            <summary>
            Gets/Sets whether an item is currently selected. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Cell.IsEditing">
            <summary>
            Gets whether this <see cref="T:Infragistics.Controls.Grids.Cell"/> is currently in edit mode.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Cell.EditorStyle">
            <summary>
            Gets / sets the style that will used on the editor of the Cell.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Cell.EditorStyleResolved">
            <summary>
            Resovles the Style that will be applied to the editor for the cell.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Cell.ResolveColumn">
            <summary>
            Resolves the underlying <see cref="T:Infragistics.Controls.Grids.Column"/> object that this <see cref="T:Infragistics.Controls.Grids.Cell"/> represents
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Cell.RawValue">
            <summary>
            Gets the the underlying value that the cell represents. 
            Note: in order to retrieve the cell's value we use a binding since we don't know about the underlying object. 
            The most performant way to retrieve the cell's value is to grab the row's Data (this.Cell.Row.Data), 
            cast it as your object and grab the actual value manually. 
            </summary>
            <remarks>
            Unlike Value this does not apply the ValueConverter to the value before returning it.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.Cell.EnterEditMode(System.Boolean)">
            <summary>
            Places the specified <see cref="T:Infragistics.Controls.Grids.Cell"/> into edit mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Cell.CreateCellValueBinding(System.Boolean)">
            <summary>
            Creates the binding used by the CellValueObject for updating
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Cell.ExitEditMode(System.Object,System.Boolean,System.Boolean)">
            <summary>
            Takes the specified <see cref="T:Infragistics.Controls.Grids.Cell"/> out of edit mode.
            </summary>
            <param propertyName="newValue">The value that should be entered in the <see cref="T:Infragistics.Controls.Grids.Cell"/></param>
            <param propertyName="editingCanceled">Whether or not we're exiting edit mode, because it was cancelled.</param>
            <param propertyName="evaluateBindings">Whether or not we should evaluate the cell's bindings.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Cell.ResetDataValue(System.Object)">
            <summary>
            Resets the value for a cell, and triggeres an evalution of it's bindings. 
            Called when editing has been canceled.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Cell.ResetDataValue(System.Object,System.Boolean)">
            <summary>
            Resets the value for a cell, and triggeres an evalution of it's bindings. 
            Called when editing has been canceled.
            </summary>
            <param name="value"></param>
            <param name="validateBinding"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Cell.CreateCellBindingConverter">
            <summary>
            Creates the <see cref="T:System.Windows.Data.IValueConverter"/> which will be attached to this <see cref="T:Infragistics.Controls.Grids.Cell"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Cell.ResolveIsCellEditable">
            <summary>
            Gets if the particular Cell has a field attribute that says it can edit.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Cell.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Cell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Cell.CreateRecyclingIdentifier">
            <summary>
            Creates a recycling identifier with which can be used for identifying a recyclable element.
            </summary>
            <returns>The recycling identifier to be used for this element.</returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Cell.Value">
            <summary>
            Gets the the underlying value that the cell represents. 
            Note: in order to retrieve the cell's value we use a binding since we don't know about the underlying object. 
            The most performant way to retrieve the cell's value is to grab the row's Data (this.Cell.Row.Data), 
            cast it as your object and grab the actual value manually. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Cell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.CellControl"/> when it's attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Cell.IsEditable">
            <summary>
            Gets whether a particular <see cref="T:Infragistics.Controls.Grids.Cell"/> can enter edit mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Cell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.CellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Cell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.CellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.Cell.HandleKeyDown(System.Windows.Input.Key,System.Int32)">
            <summary>
            Should be handled by a derived class so that a cell can determine what to do with the given keyboard action.
            </summary>
            <param propertyName="key">The <see cref="T:System.Windows.Input.Key"/> that was pressed.</param>
            <param propertyName="platformKey">The integer that represents the key pressed</param>
            <returns>True if the key is handled.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Cell.EnsureCurrentState">
            <summary>
            Ensures that <see cref="T:Infragistics.Controls.Grids.Cell"/> is in the correct state.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Cell.OnCellMouseDown(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when a cell is clicked.
            </summary>
            <returns>Whether or not the method was handled.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Cell.OnCellDragging(Infragistics.Controls.Grids.DragSelectType)">
            <summary>
            Invoked when dragging the mouse over a cell. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Cell.OnCellClick(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when a cell is clicked.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Cell.OnCellDoubleClick">
            <summary>
            Invoked when a cell is double clicked.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Cell.SetSelected(System.Boolean)">
            <summary>
            Sets the selected state of an item. 
            </summary>
            <param propertyName="isSelected"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Cell.OnElementReleasing(Infragistics.Controls.Grids.Primitives.CellControlBase)">
            <summary>
            Invoked when a <see cref="T:System.Windows.FrameworkElement"/> is being released from an object.
            </summary>
            <param propertyName="element"></param>
            <returns>False, if the element shouldn't be released.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.Cell.CellValueObject">
            <summary>
            A Class used to store off the value of a Cell.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Cell.CellValueObject.ValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Cell.CellValueObject.Value"/> dependency property. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.CellBase">
            <summary>
            The base class for all cell objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellBase.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.CellBase"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.RowBase"/> object that owns the <see cref="T:Infragistics.Controls.Grids.CellBase"/></param>
            <param propertyName="column">The <see cref="P:Infragistics.Controls.Grids.CellBase.Column"/> object that the <see cref="T:Infragistics.Controls.Grids.CellBase"/> represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellBase.Content">
            <summary>
            The Content of the <see cref="T:Infragistics.Controls.Grids.CellBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellBase.Row">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.RowBase"/> that owns the <see cref="T:Infragistics.Controls.Grids.CellBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellBase.Column">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.CellBase.Column"/> that the <see cref="T:Infragistics.Controls.Grids.CellBase"/> represents.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellBase.Control">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> that is attached to the <see cref="T:Infragistics.Controls.Grids.CellBase"/>
            </summary>
            <remarks>A Control is only assoicated with a Cell when it's in the viewport of the <see cref="T:Infragistics.Controls.Grids.Primitives.RowsPanel"/></remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellBase.Value">
            <summary>
            Gets the the underlying value that the cell represents. 
            Note: in order to retrieve the cell's value we use a binding since we don't know about the underlying object. 
            The most performant way to retrieve the cell's value is to grab the row's Data (this.Cell.Row.Data), 
            cast it as your object and grab the actual value manually. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellBase.IsActive">
            <summary>
            Gets/Sets whether a cell is the ActiveCell in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellBase.IsSelected">
            <summary>
            Gets/Sets whether an item is currently selected. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellBase.Style">
            <summary>
            Gets/Sets the <see cref="P:Infragistics.Controls.Grids.CellBase.Style"/> that will be used for all <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> objects.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellBase.IsEditable">
            <summary>
            Determines if this <see cref="T:Infragistics.Controls.Grids.CellBase"/> can be edited via the UI.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellBase.Tag">
            <summary>
            Allows a user to store additional information about a <see cref="T:Infragistics.Controls.Grids.CellBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellBase.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> when it's attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellBase.BindingMode">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.CellBase.BindingMode"/> that will be applied when binding a <see cref="T:Infragistics.Controls.Grids.CellBase"/> to data.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellBase.EditingSettings">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.EditingSettingsBaseOverride"/> object that controls the settings for this object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellBase.ShouldClearDataContext">
            <summary>
            Gets whether the control attached to the cell should reset it DataContext when a new Cell is attached to it.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellBase.SupportsActivation">
            <summary>
            Gets whether this particular <see cref="T:Infragistics.Controls.Grids.CellBase"/> can be made Active
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellBase.EnableCustomEditorBehaviors">
            <summary>
            Allows a Cell to disable Editor Behavior Support if they choose to. For example: Filter and Add New Row Cells disable Editor Behavior support.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellBase.MeasuringSize">
            <summary>
            Used for storing the size of a cell, if it needs to be re-measured.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellBase.ActualMergedHeight">
            <summary>
            Gets/Sets the total height that the merged cell should be.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellBase.RawValue">
            <summary>
            Gets the the underlying value that the cell represents. 
            Note: in order to retrieve the cell's value we use a binding since we don't know about the underlying object. 
            The most performant way to retrieve the cell's value is to grab the row's Data (this.Cell.Row.Data), 
            cast it as your object and grab the actual value manually. 
            </summary>
            <remarks>
            Unlike Value this does not apply the ValueConverter to the value before returning it.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellBase.OnElementAttached(Infragistics.Controls.Grids.Primitives.CellControlBase)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> is attached to the <see cref="T:Infragistics.Controls.Grids.CellBase"/>
            </summary>
            <param propertyName="element">A <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellBase.OnElementReleasing(Infragistics.Controls.Grids.Primitives.CellControlBase)">
            <summary>
            Invoked when a <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> is being released from an object.
            </summary>
            <param name="element"></param>
            <returns>False, if the element shouldn't be released.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellBase.OnElementReleased(Infragistics.Controls.Grids.Primitives.CellControlBase)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> is removed from the <see cref="T:Infragistics.Controls.Grids.CellBase"/>
            </summary>
            <param propertyName="element">A <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellBase.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Cell"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellBase.RecyclingIdentifier">
            <summary>
            If a <see cref="P:Infragistics.Controls.Grids.CellBase.RecyclingElementType"/> isn't specified, this property can be used to offer another way of identifying 
            a reyclable element.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellBase.EnsureCurrentState">
            <summary>
            Ensures that <see cref="T:Infragistics.Controls.Grids.CellBase"/> is in the correct state.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellBase.HandleKeyDown(System.Windows.Input.Key,System.Int32)">
            <summary>
            Should be handled by a derived class so that a cell can determine what to do with the given keyboard action.
            </summary>
            <param propertyName="key">The <see cref="T:System.Windows.Input.Key"/> that was pressed.</param>
            <param propertyName="platformKey">The integer that represents the key pressed</param>
            <returns>True if the key is handled.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellBase.OnCellMouseDown(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when a cell is clicked.
            </summary>
            <returns>Whether or not the method was handled.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellBase.OnCellClick(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when a cell is clicked.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellBase.OnCellDoubleClick">
            <summary>
            Invoked when a cell is double clicked.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellBase.OnCellDragging(Infragistics.Controls.Grids.DragSelectType)">
            <summary>
            Invoked when dragging the mouse over a cell. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellBase.OnCellMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Executed when the mouse moves over a cell.
            </summary>
            <param propertyName="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellBase.OnCellMouseUp(System.Windows.Input.MouseEventArgs)">
            <summary>
            Executed when the mouse up happens on a cell.
            </summary>
            <param propertyName="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellBase.SetSelected(System.Boolean)">
            <summary>
            Sets the selected state of an item. 
            </summary>
            <param propertyName="isSelected"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellBase.ApplyStyle">
            <summary>
            Applies the resolved style of a Cell to it's <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellBase.EditorValueChanged(System.Object)">
            <summary>
            Method called when the editor of the column registers a value changed.
            </summary>
            <param propertyName="value"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellBase.CreateRecyclingIdentifier">
            <summary>
            Creates a recycling identifier with which can be used for identifying a recyclable element.
            </summary>
            <returns>The recycling identifier to be used for this element.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellBase.Refresh">
            <summary>
            Refreshes the content of the cell.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellBase.NormalState">
            <summary>
            Determines the string that should be used for the "Normal" Visual State of the <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellBase.MouseOverState">
            <summary>
            Determines the string that should be used for the "MouseOver" Visual State of the <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.CellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.Cell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellControl.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Grids.CellControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.CellControl"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellControl.AttachContent">
            <summary>
            Invoked when content is attached to the Control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellControl.EnsureContent">
            <summary>
            This will get called every time the control is measured, and allows the control to adjust it's content if necessary.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellControl.OnLoaded">
            <summary>
            Raised when the <see cref="T:Infragistics.Controls.Grids.CellControl"/> is Loaded. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellControl.ShowResizingArrow">
            <summary>
            Gets if a resizing arrow should be shown.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellControl.ReleaseContent">
            <summary>
            Invoked before content is released from the control.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellControl.ContentProvider">
            <summary>
            Resolves the <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase"/> for this <see cref="T:Infragistics.Controls.Grids.CellControl"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellControl.HasEditingBindings">
            <summary>
            Resolves whether the <see cref="T:System.Windows.FrameworkElement"/> that is being used for editing has any <see cref="T:System.Windows.Data.Binding"/> objects
            associated with it.
            </summary>
            <remarks>
            Note: this property is only valid when the <see cref="T:Infragistics.Controls.Grids.Cell"/> is currently in edit mode.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellControl.EditorAlreadyLoaded">
            <summary>
            Gets / sets if the editor control for this cell control is loaded.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CellControl.ToolTipContent">
            <summary>
             Allows a <see cref="T:Infragistics.Controls.Grids.CellControl"/> to provide different content for it's Tooltip.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellControl.ResolveEditorCellValue(System.Object)">
            <summary>
            Determines the value that will be used as the text for the editor control.
            </summary>
            <param propertyName="dataValue"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellControl.AddEditorToControl">
            <summary>
            Used during inline editing, sets up the cell control with the child editor needed to update this cell.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellControl.RemoveEditorFromControl">
            <summary>
            Used during inline editing, cleans up the cell control restoring it to display the data of the cell.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellControl.OnEditorLoaded(System.Windows.FrameworkElement)">
            <summary>
            This method is invoked when an editor has fired its Loaded event.
            And should be used to set focus and intialize anything in the editor that needs to be initialized.
            </summary>
            <param name="editor"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellControl.EvaluateEditingBindings">
            <summary>
            Loops through all the <see cref="T:System.Windows.Data.Binding"/> objects that are associated with an editor, and determines
            if there is a binding error. 
            </summary>
            <returns>False if a binding error is found.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellControl.ResolveBindingsFromChildren(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Loops through a <see cref="T:System.Windows.FrameworkElement"/>'s children, and find all <see cref="T:System.Windows.Data.Binding"/>s that are assoicated with them.
            </summary>
            <param propertyName="element">The element to recurse through</param>
            <param propertyName="forEditing">Whether certain element's should be traversed.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.CellControl.RefreshEditorBindings">
            <summary>
            Refreshes the bindings of the editor that is used for <see cref="P:System.Windows.Controls.ContentControl.Content"/> of the <see cref="T:Infragistics.Controls.Grids.CellControl"/>.
            </summary>
            <remarks>
            This method is used by the <see cref="T:Infragistics.Controls.Grids.Primitives.TemplateColumnContentProvider"/>, to refresh the list of bindings,
            when we have implicit data templates and the the content of the editor (<see cref="T:Infragistics.Controls.Grids.Primitives.TemplateColumnEditorContentPresenter"/>)
            is changed after it's added to the VisualTree.
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.ConditionalFormattingCell">
            <summary>
            A derived <see cref="T:Infragistics.Controls.Grids.Cell"/> object in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> which is used for Conditional Formatting.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormattingCell.#ctor(Infragistics.Controls.Grids.RowBase,Infragistics.Controls.Grids.Column)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingCell"/> class.
            </summary>
            <param propertyName="row">The <see cref="T:Infragistics.Controls.Grids.RowBase"/> object that owns the <see cref="T:Infragistics.Controls.Grids.Cell"/></param>
            <param propertyName="column">The <see cref="T:Infragistics.Controls.Grids.Column"/> object that the <see cref="T:Infragistics.Controls.Grids.Cell"/> represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingCell.ResolveStyle">
            <summary>
            Gets the Style that should be applied to the <see cref="T:Infragistics.Controls.Grids.CellControl"/> when it's attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingCell.Style">
            <summary>
            Gets/Sets the <see cref="P:Infragistics.Controls.Grids.ConditionalFormattingCell.Style"/> that will be used for all <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormattingCell.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Grids.CellControl"/> for the <see cref="T:Infragistics.Controls.Grids.Cell"/>.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.CellControl"/></returns>
            <remarks>This method should only be used by the <see cref="T:Infragistics.RecyclingManager"/></remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormattingCell.CreateCellBindingConverter">
            <summary>
            Creates the <see cref="T:System.Windows.Data.IValueConverter"/> which will be attached to this <see cref="T:Infragistics.Controls.Grids.Cell"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormattingCell.EnsureCurrentState">
            <summary>
            Ensures that <see cref="T:Infragistics.Controls.Grids.Cell"/> is in the correct state.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormattingCell.EnterEditMode(System.Boolean)">
            <summary>
            Places the specified <see cref="T:Infragistics.Controls.Grids.Cell"/> into edit mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormattingCell.ExitEditMode(System.Object,System.Boolean,System.Boolean)">
            <summary>
            Takes the specified <see cref="T:Infragistics.Controls.Grids.Cell"/> out of edit mode.
            </summary>
            <param propertyName="newValue">The value that should be entered in the <see cref="T:Infragistics.Controls.Grids.Cell"/></param>
            <param propertyName="editingCanceled">Whether or not we're exiting edit mode, because it was cancelled.</param>
            <param propertyName="evaluateBindings">Whether or not we should evaluate the cell's bindings.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormattingCell.ApplyStyle">
            <summary>
            Applies the resolved style of a Cell to it's <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormattingCell.Refresh">
            <summary>
            Refreshes the content of the cell.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingCell.ConditionalStyle">
            <summary>
            Get / set a <see cref="P:Infragistics.Controls.Grids.ConditionalFormattingCell.Style"/> that will override existing styles.  
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingCell.DisplayContent">
            <summary>
            Gets / sets if the Content of the cell will be displayed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingCell.ConditionalStyleControlTemplate">
            <summary>
            This property holds the ControlTemplate that would have been ripped out by the generated style in conditional formatting.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ConditionalFormattingCellControl">
            <summary>
            Visual object for the <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingCell"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormattingCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingCellControl"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ConditionalFormattingCellControl.IconProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ConditionalFormattingCellControl.Icon"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingCellControl.Icon">
            <summary>
            Get / set a DataTemplate to be used by the <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingCellControl"/> for icon based conditional formatting.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ConditionalFormattingCellControl.BarDirectionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ConditionalFormattingCellControl.BarDirection"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingCellControl.BarDirection">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.DataBarDirection"/> for the databars displayed by this control.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ConditionalFormattingCellControl.BarPercentageProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ConditionalFormattingCellControl.BarPercentage"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingCellControl.BarPercentage">
            <summary>
            Gets / sets the value of the data bar.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ConditionalFormattingCellControl.BarPositiveOrNegativeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ConditionalFormattingCellControl.BarPositiveOrNegative"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingCellControl.BarPositiveOrNegative">
            <summary>
            Gets / sets which data bar to use to display.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ConditionalFormattingCellControl.BarBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ConditionalFormattingCellControl.BarBrush"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingCellControl.BarBrush">
            <summary>
            Gets / sets the <see cref="T:System.Windows.Media.Brush"/> that will be used to color the positive data bar.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ConditionalFormattingCellControl.NegativeBarBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ConditionalFormattingCellControl.NegativeBarBrush"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingCellControl.NegativeBarBrush">
            <summary>
            Gets / sets the <see cref="T:System.Windows.Media.Brush"/> that will be used to color the negative data bar.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ConditionalFormattingCellControl.AltBackgroundProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ConditionalFormattingCellControl.AltBackground"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingCellControl.AltBackground">
            <summary>
            Gets / sets the <see cref="T:System.Windows.Media.Brush"/> that will be used by the <see cref="T:Infragistics.Controls.Grids.CellControl"/> on alternate rows.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingCellControl.CustomTemplateSet">
            <summary>
            If the ConditionalFormatting logic assigns a custom control template, we will need to know later.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ConditionalFormattingCellControl.CustomTemplateToApply">
            <summary>
            Gets or sets the Tempalte that needs to be apply on to the ConditionalFormattingCellControl, if Template needs to be set before load
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormattingCellControl.EnsureContent">
            <summary>
            This will get called every time the control is measured, and allows the control to adjust it's content if necessary.
            </summary>	
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormattingCellControl.EnsureCurrentState">
            <summary>
            Ensures that <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> is in the correct state.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormattingCellControl.OnReleased(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.CellBase"/> releases the <see cref="T:Infragistics.Controls.Grids.CellControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ConditionalFormattingCellControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.ConditionalFormattingCellControl"/> when a new template is applied. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.CheckBoxColumn">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Column"/> that generates a <see cref="T:System.Windows.Controls.CheckBox"/> as the content for a <see cref="T:Infragistics.Controls.Grids.Cell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.CheckBoxColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.CheckBoxColumn"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.CheckBoxColumn.GenerateContentProvider">
            <summary>
            Generates a new <see cref="T:Infragistics.Controls.Grids.Primitives.CheckBoxColumnContentProvider"/> that will be used to generate conent for <see cref="T:Infragistics.Controls.Grids.Cell"/> objects for this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.CheckBoxColumn.FilterMenuCustomFilterString">
            <summary>
            Gets the default string for the FilterMenu for the CustomFilter text
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Column">
            <summary>
            The base class for all standard column objects of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Column.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Column"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.WidthProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.Width"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.Width">
            <summary>
            Gets/sets the <see cref="T:Infragistics.Controls.Grids.ColumnWidth"/> of the <see cref="T:Infragistics.Controls.Grids.ColumnBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.WidthResolved">
            <summary>
            Resolves the <see cref="T:Infragistics.Controls.Grids.ColumnWidth"/> that is being applied to this <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.ActualWidth">
            <summary>
            Gets the Actual width of the column. 
            </summary>
            <remarks>Note: this value is only available when the column is rendered.</remarks>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.MinimumWidthProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.MinimumWidth"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.MinimumWidth">
            <summary>
            Gets/sets the minimum width the column is allowed to be.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.MaximumWidthProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.MaximumWidth"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.MaximumWidth">
            <summary>
            Gets/sets the maximum width the column is allowed to be.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.FooterTemplate">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.DataTemplate"/> used to define the Content of the Footer of the <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.FooterTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.FooterText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.FooterText">
            <summary>
            Gets/Sets the text that will be displayed in the Footer.
            </summary>
            <remarks>If the <see cref="P:Infragistics.Controls.Grids.Column.FooterTemplate"/> is set, this property will have no effect.</remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.IsFixed">
            <summary>
            Gets/Sets if a <see cref="T:Infragistics.Controls.Grids.Column"/> should be unpinned or pinned to the Left or Right side of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.FixedIndicatorDirection">
            <summary>
            Gets/Sets what side of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> should be locked to if the <see cref="P:Infragistics.Controls.Grids.Column.IsFixed"/> property is set to true.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.FixedIndicatorDirectionResolved">
            <summary>
            Resolves the actual <see cref="P:Infragistics.Controls.Grids.Column.FixedIndicatorDirection"/> of the <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.IsFixable">
            <summary>
            Gets/Sets if a Column can be fixed. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.HorizontalContentAlignment">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.HorizontalAlignment"/> of the content of all cells in this <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.VerticalContentAlignment">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.VerticalAlignment"/> of the content of all cells in this <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.IsSortable">
            <summary>
            Gets/Sets if a Column can be sorted. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.AllowCaseSensitiveSort">
            <summary>
            Gets/sets if a column should be sorted case sensitive.  This is only used for string columns.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.SortComparer">
            <summary>
            Gets/sets a custom IComparer template object which will be used when sorting data.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.IsMovable">
            <summary>
            Gets/Sets if a Column can be moved via the UI.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.IsResizable">
            <summary>
            Gets/Sets if a Column can be resized via the UI.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.IsFilterable">
            <summary>
            Gets/sets if a column can be filtered via the UI.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.IsSelected">
            <summary>
            Gets/Sets whether an item is currently selected. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.IsSorted">
            <summary>
            Gets / sets how the data in this column are sorted.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.IsSummable">
            <summary>
            Gets / sets if the column will show the UI for SummaryRow.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.IsGroupable">
            <summary>
            Gets/sets whether a user can group their data by this <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.IsGroupBy">
            <summary>
            Gets/Sets whether the data that this <see cref="T:Infragistics.Controls.Grids.Column"/> represents should be grouped by this column.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.ValueConverterProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.ValueConverter"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.ValueConverter">
            <summary>
            Gets/sets the <see cref="T:System.Windows.Data.IValueConverter"/> that will be used to display the value in the column.
            </summary>
            <remarks>
            For editing purposes the <see cref="P:Infragistics.Controls.Grids.EditableColumn.EditorValueConverter"/> is used.  This <see cref="T:System.Windows.Data.IValueConverter"/> is only used for display.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.ValueConverterParameterProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.ValueConverterParameter"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.ValueConverterParameter">
            <summary>
            Gets/sets the parameter that will be used with the <see cref="P:Infragistics.Controls.Grids.Column.ValueConverter"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.GroupByItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.GroupByItemTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.GroupByItemTemplate">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.DataTemplate"/> that will be used in a <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByCell"/> when a column is grouped.
            </summary>
            <remarks>
            The DataContext of the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByCell"/> will be of type <see cref="T:Infragistics.GroupByDataContext"/>.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.GroupByComparer">
            <summary>
            Gets/sets a custom <see cref="T:System.Collections.IEqualityComparer"/> template object which will be used when grouping data.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.SummaryColumnSettings">
            <summary>
            Gets / Sets the <see cref="P:Infragistics.Controls.Grids.Column.SummaryColumnSettings"/> which will control behavior for this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.FilterColumnSettings">
            <summary>
            Gets / Sets the <see cref="P:Infragistics.Controls.Grids.Column.FilterColumnSettings"/> which will control behavior for this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.FirstSortDirectionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.FirstSortDirection"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.FirstSortDirection">
            <summary>
            Gets/Sets DefaultSort for a particular <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.FirstSortDirectionResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.SortingSettingsOverride.FirstSortDirection"/> property for a particular <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.HeaderTextHorizontalAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.HeaderTextHorizontalAlignment"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.HeaderTextHorizontalAlignment">
            <summary>
            Gets/sets  the <see cref="T:System.Windows.HorizontalAlignment"/> of the content for this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.HeaderTextHorizontalAlignmentResolved">
            <summary>
            Gets the actual <see cref="T:System.Windows.HorizontalAlignment"/> of the content for this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.HeaderTextVerticalAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.HeaderTextVerticalAlignment"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.HeaderTextVerticalAlignment">
            <summary>
            Gets/sets  the <see cref="T:System.Windows.VerticalAlignment"/> of the content for this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.HeaderTextVerticalAlignmentResolved">
            <summary>
            Gets the actual <see cref="T:System.Windows.VerticalAlignment"/> of the content for this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.ConditionalFormatCollection">
            <summary>
            Get / set the <see cref="P:Infragistics.Controls.Grids.Column.ConditionalFormatCollection"/> which contains the formatting rules to be applied to this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.ToolTipStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.ToolTipStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.ToolTipStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> of the <see cref="T:System.Windows.Controls.ToolTip"/> object that is displayed for this particular <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.ToolTipContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.ToolTipContentTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.ToolTipContentTemplate">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.DataTemplate"/> that should be used to display the content of a <see cref="T:Infragistics.Controls.Grids.Column"/>'s tooltip.
            </summary>
            <remarks>
            The DataContext of the tooltip is the particualr Row's Data.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.AllowToolTipsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.AllowToolTips"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.AllowToolTips">
            <summary>
            Gets/Sets when a <see cref="T:System.Windows.Controls.ToolTip"/> should be displayed for every <see cref="T:Infragistics.Controls.Grids.Cell"/> in this <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.AllColumns">
            <summary>
            Gets a ReadOnly collection of all <see cref="T:Infragistics.Controls.Grids.Column"/> objects that belong to a particular <see cref="T:Infragistics.Controls.Grids.Column"/>. 
            </summary>
            <remarks>
            This includes Columns that are children of other Columns. 
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.AllVisibleChildColumns">
            <summary>
            Gets a ReadOnly collection of all visible <see cref="T:Infragistics.Controls.Grids.Column"/> objects that have no children columns.
            </summary>
            <remarks>
            This includes Columns that are children of other Columns. 
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.AddNewRowItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.AddNewRowItemTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.AddNewRowItemTemplate">
            <summary>
            Gets / sets the <see cref="T:System.Windows.DataTemplate"/> that will be used to generate content for the <see cref="T:Infragistics.Controls.Grids.CellBase"/> of the <see cref="T:Infragistics.Controls.Grids.EditableColumn"/> in the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowCell"/>.
            </summary>
            <remarks>
            If this property is null then the normal column content is used.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.AddNewRowEditorTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.AddNewRowEditorTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.AddNewRowEditorTemplate">
            <summary>
            Gets / sets the Editor that will be displayed when this <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRowCell"/> in this <see cref="T:Infragistics.Controls.Grids.EditableColumn"/> is in edit mode.
            </summary>
            <remarks>
            If this property is null then the normal editor content is used.        
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.AddNewRowItemTemplateHorizontalContentAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.AddNewRowItemTemplateHorizontalContentAlignment"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.AddNewRowItemTemplateHorizontalContentAlignment">
            <summary>
            Gets / sets the <see cref="T:System.Windows.HorizontalAlignment"/> which will be assigned to the content of the <see cref="P:Infragistics.Controls.Grids.Column.AddNewRowItemTemplate" />.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.AddNewRowItemTemplateVerticalContentAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.AddNewRowItemTemplateVerticalContentAlignment"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.AddNewRowItemTemplateVerticalContentAlignment">
            <summary>
            Gets / sets the <see cref="T:System.Windows.VerticalAlignment"/> which will be assigned to the content of the <see cref="P:Infragistics.Controls.Grids.Column.AddNewRowItemTemplate" />.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.AddNewRowEditorTemplateVerticalContentAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.AddNewRowEditorTemplateVerticalContentAlignment"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.AddNewRowEditorTemplateVerticalContentAlignment">
            <summary>
            Gets / sets the <see cref="T:System.Windows.VerticalAlignment"/> which will be assigned to the content of the <see cref="P:Infragistics.Controls.Grids.Column.AddNewRowEditorTemplate" />.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.AddNewRowEditorTemplateHorizontalContentAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.AddNewRowEditorTemplateHorizontalContentAlignment"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.AddNewRowEditorTemplateHorizontalContentAlignment">
            <summary>
            Gets / sets the <see cref="T:System.Windows.HorizontalAlignment"/> which will be assigned to the content of the <see cref="P:Infragistics.Controls.Grids.Column.AddNewRowEditorTemplate" />.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.MergedItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.MergedItemTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.MergedItemTemplate">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.DataTemplate"/> that will be used in a <see cref="T:Infragistics.Controls.Grids.Primitives.MergedContentControl"/> when a column is merged.
            </summary>
            <remarks>
            The DataContext of the <see cref="T:Infragistics.Controls.Grids.Primitives.MergedContentControl"/> will be of type <see cref="T:Infragistics.MergeDataContext"/>.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.AddNewRowCellStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.AddNewRowCellStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.AddNewRowCellStyle">
            <summary>
            Gets / sets the <see cref="T:System.Windows.Style"/> which will be applied to the <see cref="T:Infragistics.Controls.Grids.Cell"/> on the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.GroupByRowCellStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.GroupByRowStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.GroupByRowStyle">
            <summary>
            Gets / sets the <see cref="T:System.Windows.Style"/> which will be applied to the <see cref="T:Infragistics.Controls.Grids.Cell"/> on the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByRow"/>.
            </summary>
            <remarks>
            This style should target a <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByCellControl"/>.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.GroupByHeaderCellStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.GroupByHeaderStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.GroupByHeaderStyle">
            <summary>
            Gets / sets the <see cref="T:System.Windows.Style"/> which will be applied to the <see cref="T:Infragistics.Controls.Grids.Cell"/> on the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByRow"/>.
            </summary>
            <remarks>
            This style should target a <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByHeaderCellControl"/>.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Grids.Column.MergeCellStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.Column.MergeCellStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.MergeCellStyle">
            <summary>
            Gets / sets the <see cref="T:System.Windows.Style"/> which will be applied to the <see cref="T:Infragistics.Controls.Grids.Cell"/> for a merge cell.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.CachedParentColumn">
            <summary>
            CachedParentColumn returns the parent column stored off when a child column is temporary removed/moved
            when grouping (with <see cref="P:Infragistics.Controls.Grids.GroupBySettings.GroupByOperation"/> <see cref="F:Infragistics.Controls.Grids.GroupByOperation.MergeCells"/>)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.SupportsHeaderFooterContent">
            <summary>
            Gets whether a <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCell"/> or <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCell"/> are allowed to display
            content that's not directly set on them, such as the <see cref="P:Infragistics.Controls.Grids.XamGrid.ColumnsHeaderTemplate"/> property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.IsEditable">
            <summary>
            Resolves whether this <see cref="T:Infragistics.Controls.Grids.Column"/> supports editing.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.UniqueColumnContent">
            <summary>
            Resolves whether <see cref="T:Infragistics.Controls.Grids.Cell"/> objects can be recycled and shared amongst columns of the same type.
            </summary>
            <remarks>
            Note: If false, then the Cells generated by this Column's ContentProvider will be 
            shared between other column's of this specific type.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.DefaultFilterOperand">
            <summary>
            The default <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> for this column type;
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.AllowCellEditorValueChangedFiltering">
            <summary>
            Gets a value indicating whether filtering will be immediately applied after the value of the cell editor is changed.
            </summary>
            <value>
            	<c>true</c> if a filter should be applied immediately after the value of the cell editor is changed; otherwise, <c>false</c>.
            </value>
            <remarks>
            Designed to be used by <see cref="T:Infragistics.Controls.Grids.Column"/>s which need filtering while the editor control is being edited.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.FormatStringResolved">
            <summary>
            A format string for formatting data in this column.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.ParentColumn">
            <summary>
            Gets/Sets the <see cref="T:Infragistics.Controls.Grids.Column"/> that owns this particular column.
            </summary>
            <remarks>If a Column is not a direct child of a Column, then this property will return null.</remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.TopParentColumn">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.Column"/> that is the top parent this particular column, if any.
            </summary>
            <remarks>If a Column is not a direct child of any other <see cref="T:Infragistics.Controls.Grids.Column"/>, then this property will return null.</remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.ResizeColumnResolved">
            <summary>
            Resolves the <see cref="T:Infragistics.Controls.Grids.Column"/> that should be resized when dragging the right edge of this Column.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.SupportsActivationAndSelection">
            <summary>
            Determines if a <see cref="T:Infragistics.Controls.Grids.Cell"/> in this particular Column can be Selected or Activated. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.CanBeGroupedBy">
            <summary>
            Determines if a <see cref="T:Infragistics.Controls.Grids.Column"/> can be grouped by.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.CanBeSorted">
            <summary>
            Determines if a <see cref="T:Infragistics.Controls.Grids.Column"/> can be Sorted.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.CanBeFiltered">
            <summary>
            Determines if a <see cref="T:Infragistics.Controls.Grids.Column"/> can be Filtered.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.UseReadOnlyFlag">
            <summary>
            Determines if the <see cref="T:Infragistics.Controls.Grids.Column"/> should use the ReadOnly flag on a property, to determine if it can enter edit mode.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.ResetCellValueObjectAfterEditing">
            <summary>
            Gets if the <see cref="T:Infragistics.Controls.Grids.Column"/> should reset the CellValueObject when exiting edit mode.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.FilterMenuCustomFilterString">
            <summary>
            Gets the default string for the FilterMenu for the CustomFilter text
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Column.SetSelected(System.Boolean)">
            <summary>
            Sets the selected state of an item. 
            </summary>
            <param propertyName="isSelected"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Column.GenerateCell(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Based on the type of row that is passed in, this method generates a new <see cref="T:Infragistics.Controls.Grids.CellBase"/> object.
            </summary>
            <param propertyName="row">The row in which the cell should be created for.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Column.GenerateHeaderCell(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Returns a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCell"/>
            </summary>
            <param propertyName="row"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Column.GenerateFooterCell(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Returns a new instance of a <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCell"/>
            </summary>
            <param propertyName="row"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Column.GenerateDataCell(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Returns a new instance of a <see cref="T:Infragistics.Controls.Grids.Cell"/>
            </summary>
            <param propertyName="row"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Column.GenerateContentProvider">
            <summary>
            Generates a new <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase"/> that will be used to generate conent for <see cref="T:Infragistics.Controls.Grids.Cell"/> objects for this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Column.FillAvailableFilters(Infragistics.Controls.Grids.FilterOperandCollection)">
            <summary>
            Fills the <see cref="T:Infragistics.Controls.Grids.FilterOperandCollection"/> with the operands that the column expects as filter values.
            </summary>
            <param name="availableFilters"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Column.FillAvailableSummaries(Infragistics.SummaryOperandCollection)">
            <summary>
            Fills the <see cref="T:Infragistics.SummaryOperandCollection"/> with the operands that the column expects as summary values.
            </summary>
            <param name="availableSummaries"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Column.OnShowAvailableColumnFilterOperands">
            <summary>
            Raises the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> event notifying that the filter populating event is being fired.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Column.ValidateSortComparer">
            <summary>
            Used to validate the <see cref="P:Infragistics.Controls.Grids.Column.SortComparer"/> can be used on this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Column.ValidateGroupByComparer">
            <summary>
            Used to validate the <see cref="P:Infragistics.Controls.Grids.Column.GroupByComparer"/> can be used on this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Column.ResolveChildColumns">
            <summary>
            If a <see cref="T:Infragistics.Controls.Grids.Column"/> owns child Columns, return the collection of Columns.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Column.InvalidateVisibility(System.Boolean)">
            <summary>
            Changes the visibility of all subcolumns.
            </summary>
            <param name="makeFirstVisIfCollapsed"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Column.GenerateFilterSelectionControl">
            <summary>
            Returns a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.SelectionControl"/> which will be used by the FilterMenu.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Column.FillFilterMenuOptions(System.Collections.Generic.List{Infragistics.Controls.Grids.FilterMenuTrackingObject})">
            <summary>
            Fills the inputted list with options for the FilterMenu control.
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Column.OnVisibilityChanged">
            <summary>
            Raised when the Visiblity of a <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> has changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Column.OnDataTypeChanged">
            <summary>
            Raised when the DataType of the <see cref="T:Infragistics.Controls.Grids.ColumnBase" /> is changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Column.OnColumnLayoutChanged">
            <summary>
            Raised when the a <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> is assigned or removed from this <see cref="T:Infragistics.Controls.Grids.ColumnBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Column.PropertiesToIgnore">
            <summary>
            Gets a List of properties that shouldn't be saved when the PersistenceManager goes to save them.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnBase">
            <summary>
            The base class for all column objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnBase.KeyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnBase.Key"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBase.Key">
            <summary>
            Gets/sets a string that identifies the <see cref="T:Infragistics.Controls.Grids.ColumnBase"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnBase.VisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnBase.Visibility"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBase.Visibility">
            <summary>
            Gets/Sets the Visibility of the <see cref="T:Infragistics.Controls.Grids.ColumnBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnBase.OnVisibilityChanged">
            <summary>
            Raised when the Visiblity of a <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> has changed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBase.ColumnLayout">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.ColumnBase.ColumnLayout"/> thats owns this <see cref="T:Infragistics.Controls.Grids.ColumnBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBase.CellStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that will be used for all <see cref="T:Infragistics.Controls.Grids.CellControl"/> objects on this <see cref="T:Infragistics.Controls.Grids.ColumnBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBase.CellStyleResolved">
            <summary>
            Resolves the actual Style that will be applied to the <see cref="T:Infragistics.Controls.Grids.CellControl"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBase.HeaderStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that will be used for all <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCellControl"/> objects on this <see cref="T:Infragistics.Controls.Grids.ColumnBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBase.HeaderStyleResolved">
            <summary>
            Resolves the actual Style that will be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCellControl"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBase.FooterStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that will be used for all <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCellControl"/> objects on this <see cref="T:Infragistics.Controls.Grids.ColumnBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBase.FooterStyleResolved">
            <summary>
            Resolves the actual Style that will be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCellControl"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBase.IsAutoGenerated">
            <summary>
            Gets whether or not the <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> was predefined, or generated by the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> based on the 
            underlying data. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnBase.TagProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnBase.Tag"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBase.Tag">
            <summary>
            Allows additional information to be stored for a <see cref="T:Infragistics.Controls.Grids.ColumnBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBase.DataType">
            <summary>
            The DataType that the column's data is derived from.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnBase.HeaderTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnBase.HeaderText"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBase.HeaderText">
            <summary>
            Gets/Sets the text that will be displayed in the Header.
            </summary>
            <remarks>If the <see cref="P:Infragistics.Controls.Grids.ColumnBase.HeaderTemplate"/> is set, this property will have no effect.</remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBase.HeaderTemplate">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.DataTemplate"/> used to define the Content of the Header of the <see cref="T:Infragistics.Controls.Grids.ColumnBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBase.DisplayNameResolved">
            <summary>
            Gets a string that represents the Column, if the HeaderText property isn't used, it fallsback to the Column's Key.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBase.IsHideable">
            <summary>
            Gets/sets whether a <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> can be hidden via the UI.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBase.RequiresBoundDataKey">
            <summary>
            Gets whether an exception should be thrown if the key associated with the <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> doesn't 
            correspond with a property in the data that this object represents.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBase.PropertiesToIgnore">
            <summary>
            Gets a List of properties that shouldn't be saved when the PersistenceManager goes to save them.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBase.PriorityProperties">
            <summary>
            Gets a List of properties that should be applied, before even trying to look at any other property on the object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBase.DataField">
            <summary>
            Gets/Sets the <see cref="P:Infragistics.Controls.Grids.ColumnBase.DataField"/> associated with this particular <see cref="T:Infragistics.Controls.Grids.ColumnBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnBase.OnStyleChanged">
            <summary>
            Raised when any of the Style properties of the <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> have changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnBase.OnDataTypeChanged">
            <summary>
            Raised when the DataType of the <see cref="T:Infragistics.Controls.Grids.ColumnBase" /> is changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnBase.ResolveValue(System.Object,System.Globalization.CultureInfo)">
            <summary>
            If the <see cref="P:Infragistics.Controls.Grids.ColumnBase.DataType"/> is available, uses Convert to cast the inputted value.
            </summary>
            <param name="value"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnBase.ResolveValue(System.Object)">
            <summary>
            Resolves the value to the datatype of the column using the current culture.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnBase.FinishedLoadingPersistence">
            <summary>
            Allows an object to perform an operation, after it's been loaded.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnBase.OnColumnLayoutChanged">
            <summary>
            Raised when the a <see cref="P:Infragistics.Controls.Grids.ColumnBase.ColumnLayout"/> is assigned or removed from this <see cref="T:Infragistics.Controls.Grids.ColumnBase"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnBaseCollection">
            <summary>
            A Collection of <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnBaseCollection.#ctor(Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ColumnBaseCollection"/> class.
            </summary>
            <param propertyName="columnLayout">The <see cref="P:Infragistics.Controls.Grids.ColumnBaseCollection.ColumnLayout"/> object that owns the <see cref="T:Infragistics.Controls.Grids.ColumnBaseCollection"/>.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBaseCollection.ColumnLayout">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.ColumnBaseCollection.ColumnLayout"/> object that owns the <see cref="T:Infragistics.Controls.Grids.ColumnBaseCollection"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBaseCollection.ColumnLayouts">
            <summary>
            Gets the <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> of <see cref="P:Infragistics.Controls.Grids.ColumnBaseCollection.ColumnLayout"/>s that it owns.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBaseCollection.FixedAdornerColumns">
            <summary>
            A collection of <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> objects that should be displayed first and fixed in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            Note: these columns generally make up such columns that don't represent fields in the underlying data source such as the <see cref="P:Infragistics.Controls.Grids.ColumnBaseCollection.RowSelectorColumn"/> and <see cref="P:Infragistics.Controls.Grids.ColumnBaseCollection.ExpansionIndicatorColumn"/>. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBaseCollection.ExpansionIndicatorColumn">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.Column"/> that represents the ExpansionIndicator area of a specific <see cref="P:Infragistics.Controls.Grids.ColumnBaseCollection.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBaseCollection.RowSelectorColumn">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.Column"/> that represents the RowSelector area of a specific <see cref="P:Infragistics.Controls.Grids.ColumnBaseCollection.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBaseCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> that has the specified key. 
            </summary>
            <param propertyName="key"></param>
            <returns>
            The column with the specified Key. 
            If more than one <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> has the same key, the first Column is returned.
            </returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBaseCollection.DataColumns">
            <summary>
            Gets a list of columns that are of type <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBaseCollection.FillerColumn">
            <summary>
            Gets the column that is used to fill up empty space in a row. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBaseCollection.FixedBorderColumnLeft">
            <summary>
            Gets the column that seperates the pinned an unpinned columns.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBaseCollection.FixedBorderColumnRight">
            <summary>
            Gets the column that seperates the pinned an unpinned columns.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBaseCollection.FixedColumnsLeft">
            <summary>
            Gets a collection of <see cref="T:Infragistics.Controls.Grids.Column"/> objects that are pinned to the left side of a particular <see cref="P:Infragistics.Controls.Grids.ColumnBaseCollection.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBaseCollection.GroupByColumns">
            <summary>
            Gets a collection of <see cref="T:Infragistics.Controls.Grids.Column"/> objects that determine how a data should be grouped for a particular <see cref="P:Infragistics.Controls.Grids.ColumnBaseCollection.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBaseCollection.SelectedColumns">
            <summary>
            Gets a collection of <see cref="T:Infragistics.Controls.Grids.Column"/> that are currently selected in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBaseCollection.FixedColumnsRight">
            <summary>
            Gets a collection of <see cref="T:Infragistics.Controls.Grids.Column"/> objects that are pinned to the right side of a particular <see cref="P:Infragistics.Controls.Grids.ColumnBaseCollection.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBaseCollection.SortedColumns">
            <summary>
            Gets a collection of <see cref="T:Infragistics.Controls.Grids.Column"/> objects that are sorted in a particular <see cref="P:Infragistics.Controls.Grids.ColumnBaseCollection.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBaseCollection.AllColumns">
            <summary>
            Gets a recursive collection of all <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> objects in particular <see cref="P:Infragistics.Controls.Grids.ColumnBaseCollection.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBaseCollection.AllVisibleColumns">
            <summary>
            Gets a collection of all visible <see cref="T:Infragistics.Controls.Grids.Column"/> objects in particular <see cref="P:Infragistics.Controls.Grids.ColumnBaseCollection.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBaseCollection.PropertiesToIgnore">
            <summary>
            Gets a List of properties that shouldn't be saved when the PersistenceManager goes to save them.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBaseCollection.PriorityProperties">
            <summary>
            Gets a List of properties that should be applied, before even trying to look at any other property on the object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBaseCollection.AllVisibleChildColumns">
            <summary>
            Gets a collection of all visible <see cref="T:Infragistics.Controls.Grids.Column"/> objects that have no children a in particular <see cref="P:Infragistics.Controls.Grids.ColumnBaseCollection.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBaseCollection.VisibleColumns">
            <summary>
            Gets a readonly list of <see cref="T:Infragistics.Controls.Grids.Column"/> objects that are not hidden and are not <see cref="P:Infragistics.Controls.Grids.ColumnBaseCollection.ColumnLayout"/> objects.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnBaseCollection.StarColumns">
            <summary>
            Gets a readonly list of <see cref="T:Infragistics.Controls.Grids.Column"/> objects that have a width that are Star.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnBaseCollection.AddRange(System.Collections.Generic.IEnumerable{Infragistics.Controls.Grids.ColumnBase})">
            <summary>
            Adds an IEnumerable of ColumnBase to the collection.
            </summary>
            <param name="columns">The columns to be added to this collection</param>
            <remarks>
            This method is designed to be used when adding a large number of columns all at once. In that case it 
            performs a lot better than calling the Add method individually for each column.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnBaseCollection.RegisterFixedAdornerColumn(Infragistics.Controls.Grids.Column,System.Boolean)">
            <summary>
            Registers the specified <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> as a fixed column.
            </summary>
            <param propertyName="column"></param>
            <param propertyName="first">Specifies whether or not the column should be inserted at the first index position.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnBaseCollection.UnregisterFixedAdornerColumn(Infragistics.Controls.Grids.Column)">
            <summary>
            Unregisters the specified <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> as a fixed column.
            </summary>
            <param propertyName="column"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnBaseCollection.InvalidateColumnsCollections(System.Boolean)">
            <summary>
            Determines which columns are Fixed, Visible or Hidden. 
            </summary>
            <param propertyName="fullInvalidate"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnBaseCollection.GetLookupKeys">
            <summary>
            Gets a list of keys that each object in the collection has. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnBaseCollection.CanRehydrate(System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            Looks through the keys, and determines that all the keys are in the collection, and that the same about of objects are in the collection.
            If this isn't the case, false is returned, and the Control Persistence Framework, will not try to reuse the object that are already in the collection.
            </summary>
            <param name="lookupKeys"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnBaseCollection.FinishedLoadingPersistence">
            <summary>
            Allows an object to perform an operation, after it's been loaded.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnBaseCollection.AddItem(System.Int32,Infragistics.Controls.Grids.ColumnBase)">
            <summary>
            Inserts the <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> at the specified index.
            </summary>
            <param propertyName="index">The index that the Column should be inserted.</param>
            <param propertyName="item">The <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> that should be inserted.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnBaseCollection.Insert(System.Int32,Infragistics.Controls.Grids.ColumnBase)">
            <summary>
            Inserts the specified <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> as the specified index. 
            </summary>
            <param propertyName="index"></param>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnBaseCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> a the specified index. 
            </summary>
            <param propertyName="index">The index of the Column that should be removed.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnBaseCollection.ResetItems">
            <summary>
            Removes all <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> objects from the <see cref="T:Infragistics.Controls.Grids.ColumnBaseCollection"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnBaseCollection.AddItemSilently(System.Int32,Infragistics.Controls.Grids.ColumnBase)">
            <summary>
            Adds the item at the specified index, without triggering any events. 
            </summary>
            <param propertyName="index"></param>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnBaseCollection.RemoveItemSilently(System.Int32)">
            <summary>
            Removes the item at the specified index, without triggering any events. 
            </summary>
            <param propertyName="index"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGridColumnCommand">
            <summary>
            An enumeration of available commands for the <see cref="T:Infragistics.Controls.Grids.Column"/> object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridColumnCommand.SortAscending">
            <summary>
            Sorts the <see cref="T:Infragistics.Controls.Grids.Column"/> in an ascending manner.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridColumnCommand.SortToggle">
            <summary>
            Changes the <see cref="T:Infragistics.Controls.Grids.SortDirection"/> on the <see cref="T:Infragistics.Controls.Grids.Column"/> from nothing to ascending, ascending to descending, and descending to ascending.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridColumnCommand.SortDescending">
            <summary>
            Sorts the <see cref="T:Infragistics.Controls.Grids.Column"/> in an descending manner.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridColumnCommand.Unsort">
            <summary>
            Unsorts the <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridColumnCommand.SortAscendingToggle">
            <summary>
            Changes the <see cref="T:Infragistics.Controls.Grids.SortDirection"/> to ascending or none.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridColumnCommand.SortDescendingToggle">
            <summary>
            Changes the <see cref="T:Infragistics.Controls.Grids.SortDirection"/> to descending or none.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridColumnCommand.Fix">
            <summary>
            Fixes a <see cref="T:Infragistics.Controls.Grids.Column"/> to either the left or right based on the <see cref="P:Infragistics.Controls.Grids.Column.FixedIndicatorDirection"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridColumnCommand.FixLeft">
            <summary>
            Fixes a <see cref="T:Infragistics.Controls.Grids.Column"/> to the left side of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridColumnCommand.FixRight">
            <summary>
            Fixes a <see cref="T:Infragistics.Controls.Grids.Column"/> to the right side of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridColumnCommand.Unfix">
            <summary>
            Unfixes a <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridColumnCommand.Select">
            <summary>
            Selects the <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridColumnCommand.Unselect">
            <summary>
            Unselects the <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridColumnCommand.GroupBy">
            <summary>
            Groups the data in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> by this <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridColumnCommand.RemoveGroupBy">
            <summary>
            Removes the grouping of data in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridColumnCommand.Hide">
            <summary>
            Hides the <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridColumnCommand.Show">
            <summary>
            Shows the <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnCommandBase">
            <summary>
            Base class for all commands that deal with a <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnCommandBase.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnCommandBase.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param propertyName="parameter">The <see cref="T:Infragistics.Controls.Grids.CellBase"/> object that will be executed against.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnCommandBase.ExecuteCommand(Infragistics.Controls.Grids.Column)">
            <summary>
            Executes the specific command on the specified <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
            <param propertyName="col"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGridColumnCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Grids.Column"/> object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridColumnCommandSource.CommandType">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.XamGridColumnCommand"/> which is to be executed by the command.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridColumnCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnLayout">
            <summary>
            An object that organizes a group of columns and contains settings that dictates how the data for those columns will be displayed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.#ctor(Infragistics.Controls.Grids.XamGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> class.
            </summary>
            <param propertyName="grid">The <see cref="T:Infragistics.Controls.Grids.XamGrid"/> that owns the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.</param>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnLayout.TargetTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.TargetType"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.TargetType">
            <summary>
            Get/sets the Type of data that the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> should represent.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnLayout.TargetTypeNameProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.TargetTypeName"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.TargetTypeName">
            <summary>
            Get/Sets the System.Type.Name or <see cref="P:System.Type.FullName"/> that this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> object should represent.
            </summary>
            <remarks>
            The property is only used if the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> is defined in the <see cref="P:Infragistics.Controls.Grids.XamGrid.ColumnLayouts"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.Columns">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.ColumnBaseCollection"/> that the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> owns.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.Grid">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> that the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> belongs to.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnLayout.HeaderVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.HeaderVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.HeaderVisibility">
            <summary>
            Gets/sets the visibility of the Header of the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.HeaderVisibilityResolved">
            <summary>
            Resolves if the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderRow"/> of this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> is actually Visible.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnLayout.FooterVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.FooterVisibility"/> dependency property. 
            </summary>		
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.FooterVisibility">
            <summary>
            Gets/sets the visibility of the Footer of the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.FooterVisibilityResolved">
            <summary>
            Resolves if the <see cref="T:Infragistics.Controls.Grids.Primitives.FooterRow"/> of this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> is actually Visible.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnLayout.AutoGenerateColumnsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.AutoGenerateColumns"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.AutoGenerateColumns">
            <summary>
            Gets/sets whether the columns of the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> should be generated if otherwise not specified.
            </summary>
            <remarks>
            This property must be set before the ItemSource is set. 
            As setting the ItemSource will trigger the object model of the grid to be setup.
            That includes the property being set in XAML before the ItemSource is set. 
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.AutoGenerateColumnsResolved">
            <summary>
            Resolves if <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> objects should be generated automatically for this particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnLayout.IndentationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.Indentation"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.Indentation">
            <summary>
            Gets/Sets the Indentation of the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.IndentationResolved">
            <summary>
            Resolves what the actual Indentation of this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> should be. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnLayout.ColumnLayoutHeaderVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.ColumnLayoutHeaderVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.ColumnLayoutHeaderVisibility">
            <summary>
            Gets/sets whether a header should be displayed for the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>. 
            The header generally contains the propertyName of the data field that owns the collection that the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> is displaying.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.ColumnLayoutHeaderVisibilityResolved">
            <summary>
            Gets the actual visibility of the <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/> for this particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnLayout.IsAlternateRowsEnabledProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.IsAlternateRowsEnabled"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.IsAlternateRowsEnabled">
            <summary>
            Gets/sets whether Alternate Row styling is enabled.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.IsAlternateRowsEnabledResolved">
            <summary>
            Resolves if this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> had Alternate row styling.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.ChildBandHeaderStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that will be used for all <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBandCellControl"/> objects on this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.ChildBandHeaderStyleResolved">
            <summary>
            Resolves the actual Style that will be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBandCellControl"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnLayout.ColumnsHeaderTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.ColumnsHeaderTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.ColumnsHeaderTemplate">
            <summary>
            Gets the <see cref="T:System.Windows.DataTemplate"/> that will be applied to the header of every <see cref="T:Infragistics.Controls.Grids.Column"/> in this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.ColumnsHeaderTemplateResolved">
            <summary>
            Gets the actual ColumnsHeaderTemplate value of this ColumnLayout.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnLayout.ColumnsFooterTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.ColumnsFooterTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.ColumnsFooterTemplate">
            <summary>
            Gets the <see cref="T:System.Windows.DataTemplate"/> that will be applied to the footer of every <see cref="T:Infragistics.Controls.Grids.Column"/> in this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.ColumnsFooterTemplateResolved">
            <summary>
            Gets the actual <see cref="P:Infragistics.Controls.Grids.ColumnLayout.ColumnsFooterTemplate"/> value of this ColumnLayout.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.RowSelectorSettings">
            <summary>
            /// Gets a reference to the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.RowSelectorSettings"/> object that controls all the properties of the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorColumn"/> of this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.ExpansionIndicatorSettings">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.ExpansionIndicatorSettings"/> object that controls all the properties of the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn"/> of this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.ColumnMovingSettings">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.ColumnMovingSettings"/> object that controls all the properties for moving columns on this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.EditingSettings">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.EditingSettings"/> object that controls all the properties for moving columns on this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.SortingSettings">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.SortingSettings"/> object that controls all the properties for sorting columns on this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.GroupBySettings">
            <summary>
            Gets a reference to the <see cref="T:Infragistics.Controls.Grids.GroupBySettingsOverride"/> object that controls all the properties for grouping data by columns on this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.DeferredScrollingSettings">
            <summary>
            Gets a reference to the <see cref="T:Infragistics.Controls.Grids.DeferredScrollingSettingsOverride"/> object that controls all the properties for DeferredScrolling on this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.PagerSettings">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.PagerSettings"/> object that controls all the properties for paging rows on this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.CellStyleResolved">
            <summary>
            Resolves the actual Style that will be applied to the <see cref="T:Infragistics.Controls.Grids.CellControl"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.HeaderStyleResolved">
            <summary>
            Resolves the actual Style that will be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCellControl"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.FooterStyleResolved">
            <summary>
            Resolves the actual Style that will be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCellControl"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.FixedColumnSettings">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.FixedColumnSettings"/> object that controls all the properties concerning locking <see cref="T:Infragistics.Controls.Grids.Column"/> objects to the left or right side of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.ColumnResizingSettings">
            <summary>
            Gets a reference to the <see cref="T:Infragistics.Controls.Grids.ColumnResizingSettingsOverride"/> object that controls all the properties for resizing columns on this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.AddNewRowSettings">
            <summary>
            Gets a reference to the <see cref="T:Infragistics.Controls.Grids.AddNewRowSettingsOverride"/> object that controls all the properties for the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/> on this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.SummaryRowSettings">
            <summary>
            Gets a reference to the <see cref="T:Infragistics.Controls.Grids.SummaryRowSettingsOverride"/> object that controls all the properties for the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRow"/> on this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.FilteringSettings">
            <summary>
            Gets a reference to the <see cref="T:Infragistics.Controls.Grids.FilteringSettingsOverride"/> object that controls all the properties for the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRow"/> on this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnLayout.RowHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.RowHeight"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.RowHeight">
            <summary>
            Gets/Sets the Height that will be applied to every row in this particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.RowHeightResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.RowHeight"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnLayout.MinimumRowHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.MinimumRowHeight"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.MinimumRowHeight">
            <summary>
            Gets/Sets the Minimum Height for every <see cref="T:Infragistics.Controls.Grids.RowBase"/> on this particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> 
            </summary>
            <remarks>
            This value is ignored if RowHeight is of Type Numeric.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.MinimumRowHeightResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.MinimumRowHeight"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnLayout.DeleteKeyActionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.DeleteKeyAction"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.DeleteKeyAction">
            <summary>
            Gets/Sets the action that should be taken when the Delete Key is pressed for a specific <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.DeleteKeyActionResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.DeleteKeyAction"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnLayout.HeaderRowHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.HeaderRowHeight"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.HeaderRowHeight">
            <summary>
            Gets/Sets the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.RowHeight"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderRow"/> for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.HeaderRowHeightResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.HeaderRowHeight"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnLayout.FooterRowHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.FooterRowHeight"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.FooterRowHeight">
            <summary>
            Gets/Sets the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.RowHeight"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.FooterRow"/> for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.FooterRowHeightResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.FooterRowHeight"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnLayout.ChildBandHeaderHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.ChildBandHeaderHeight"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.ChildBandHeaderHeight">
            <summary>
            Gets/Sets the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.RowHeight"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/> for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.ChildBandHeaderHeightResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.ChildBandHeaderHeight"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnLayout.ColumnWidthProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.ColumnWidth"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.ColumnWidth">
            <summary>
            Gets/Sets the Width that will be applied to every <see cref="T:Infragistics.Controls.Grids.Column"/> in this particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.ColumnWidthResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.ColumnWidth"/> property for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.FillerColumnSettings">
            <summary>
            Gets an object that contains settings that pertain to the <see cref="T:Infragistics.Controls.Grids.Primitives.FillerColumn"/> of a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnLayout.HeaderTextHorizontalAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.HeaderTextHorizontalAlignment"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.HeaderTextHorizontalAlignment">
            <summary>
            Gets/sets  the <see cref="T:System.Windows.HorizontalAlignment"/> of the content for each <see cref="T:Infragistics.Controls.Grids.Column"/> in this particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.HeaderTextHorizontalAlignmentResolved">
            <summary>
            Gets the actual <see cref="T:System.Windows.HorizontalAlignment"/> of the content for each <see cref="T:Infragistics.Controls.Grids.Column"/> in this particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ColumnLayout.HeaderTextVerticalAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.HeaderTextVerticalAlignment"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.HeaderTextVerticalAlignment">
            <summary>
            Gets/sets  the <see cref="T:System.Windows.VerticalAlignment"/> of the content for each <see cref="T:Infragistics.Controls.Grids.Column"/> in this particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.HeaderTextVerticalAlignmentResolved">
            <summary>
            Gets the actual <see cref="T:System.Windows.VerticalAlignment"/> of the content for each <see cref="T:Infragistics.Controls.Grids.Column"/> in this particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.ConditionalFormattingSettings">
            <summary>
            Gets / sets an object the contains settings that pertain to the Conditional Formatting for a particular <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.ColumnChooserSettings">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.ColumnChooserSettings"/> object that controls all the properties for the Column Chooser on this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.InternalTemplate">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.DataTemplate"/> that, if set, will be displayed instead of the rows that this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> represents.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.DefaultDataObject">
            <summary>
            Gets / sets the object that will be used to compare against an object in the AddNewRow to detect if the AddNewRow is dirty.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.ObjectDataType">
            <summary>
            The Type that the column's data is derived from.  
            </summary>
            <remarks>
            The DataType property gives you the Type of the collection, this give you the type of the object in the collection.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.ObjectDataTypeInfo">
            <summary>
            The Type that the column's data is derived from.  
            </summary>
            <remarks>
            The DataType property gives you the Type of the collection, this give you the type of the object in the collection.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.ColumnLayoutFilteringObject">
            <summary>
            Used by Filtering, this object is used when the FilteringScope evaluates out to ColumnLayout.  It allows for objects
            in template columns to be bound to a common object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayout.ConditionalFormatCollection">
            <summary>
            Gets the Conditional Formats that have been set to sub columns on this ColumnLayout.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.OnChildColumnLayoutAdded(Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Invoked when a <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> is added to the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.Columns"/> collection of this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
            <param propertyName="childColumnLayout"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.OnChildColumnLayoutRemoved(Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Invoked when a <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> is removed from the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.Columns"/> collection of this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
            <param propertyName="childColumnLayout"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.InvalidateSorting">
            <summary>
            This method is to be called when you need the grid to update its visual tree 
            due to a change in the sorting order.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.InvalidateGroupBy">
            <summary>
            This method is to be called when you need the grid to update its visual tree 
            due to a change in the GroupBy.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.InvalidateGroupByReset">
            <summary>
            This method is to be called when you need the grid to update its visual tree 
            due to a change in the GroupBy.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.InvalidateFiltering">
            <summary>
            This method is to be called when you need the grid to update its visual tree 
            due to a change in the Filtering.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.InvalidateConditionalFormatting">
            <summary>
            This method is to be called when you need the grid to update it's visual tree due to a change in ConditionalFormatting
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.InvalidateSummaries">
            <summary>
            This method is to be called when you need to grid to update it's visual tree due to a change in Summaries.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.InvalidateData">
            <summary>
            Triggers all Data operations such as sorting and GroupBy to be invalidated. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.BuildNullableFilter(Infragistics.Controls.Grids.RowFiltersCollection,Infragistics.Controls.Grids.Column,Infragistics.Controls.Grids.FilterOperand,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            This is used by the FilterMenu to build filters for (Null) cases.
            </summary>
            <param name="rowFilters"></param>
            <param name="column"></param>
            <param name="filterOperand"></param>
            <param name="suppressInvalidation"></param>
            <param name="clearExistingFilters"></param>
            <param name="raiseEvents"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.BuildFilters(Infragistics.Controls.Grids.RowFiltersCollection,System.Object,Infragistics.Controls.Grids.Column,Infragistics.Controls.Grids.FilterOperand,System.Boolean,System.Boolean)">
            <summary>
            For a single column, based of the cell, clears any existing filtering conditions and creates a new condition based on current information.
            </summary>
            <param name="column"></param>
            <param name="filterOperand"></param>
            <param name="newValue"></param>
            <param name="rowFilters"></param>
            <param name="suppressInvalidation"></param>
            <param name="fireEvents"></param>
            <returns>True if a filter was added</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.BuildFilters(Infragistics.Controls.Grids.RowFiltersCollection,System.Object,Infragistics.Controls.Grids.Column,Infragistics.Controls.Grids.FilterOperand,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            For a single column, based of the cell, creates a new condition based on current information.
            </summary>
            <param name="column"></param>
            <param name="filterOperand"></param>
            <param name="newValue"></param>
            <param name="rowFilters"></param>
            <param name="suppressInvalidation"></param>
            <param name="clearExistingFilters"></param>
            <param name="fireEvents"></param>
            <returns>True if a filter was added</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.RefreshSummaryRowVisual">
            <summary>
            This method communicates to the RowsManager that the SummaryRow should be redrawn.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.ClearCachedRows">
            <summary>
            Used to notify attached <see cref="T:Infragistics.Controls.Grids.RowsManager"/>s to clear their cached rows.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.InitObject(System.Object)">
            <summary>
            This method is used to setup the object that was just created. 
            </summary>
            <param name="owner">The object that owns the object being initialized. </param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.OnColumnAdded(Infragistics.Controls.Grids.ColumnBase)">
            <summary>
            Invoked when a <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> has been added to this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>
            </summary>
            <param name="columnBase"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.OnColumnRemoved(Infragistics.Controls.Grids.ColumnBase)">
            <summary>
            Invoked when a <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> has been removed from this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
            <param name="columnBase"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.OnPropertyChanged(System.String)">
            <summary>
            Invoked when a property of the object has been changed.
            </summary>
            <param name="propertyName">The name of the property that was changed</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.OnStyleChanged">
            <summary>
            Raised when any of the Style properties of the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> have changed;
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.OnVisibilityChanged">
            <summary>
            Raised when the Visiblity of a <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> has changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> and optionally
            releases the managed resources.
            </summary>
            <param propertyName="disposing">
            true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayout.Dispose">
            <summary>
            Releases the unmanaged and managed resources used by the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnLayoutCollection">
            <summary>
            A Collection of <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayoutCollection.FromType(System.Type)">
            <summary>
            Searches the <see cref="T:Infragistics.Controls.Grids.ColumnLayoutCollection"/> for a <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> with the specified Type.
            And returns the first <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> that represents the specified type. 
            </summary>
            <returns>Null if none of the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects have the specified Type.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayoutCollection.FromKey(System.String)">
            <summary>
            Searches the <see cref="T:Infragistics.Controls.Grids.ColumnLayoutCollection"/> for a <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> with the specified Key. And returns the 
            first <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> with that key.
            </summary>
            <returns>Null if none of the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects have the specified Key.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayoutCollection.AddItemLocally(Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Adds the item to the Collection silently, and sets the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.IsDefinedGlobally"/> property to false.
            </summary>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayoutCollection.GetLookupKeys">
            <summary>
            Gets a list of keys that each object in the collection has. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayoutCollection.CanRehydrate(System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            Looks through the keys, and determines that all the keys are in the collection, and that the same about of objects are in the collection.
            If this isn't the case, false is returned, and the Control Persistence Framework, will not try to reuse the object that are already in the collection.
            </summary>
            <param name="lookupKeys"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayoutCollection.OnItemAdded(System.Int32,Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Invoked when a <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> is added at the specified index.
            </summary>
            <param propertyName="index"></param>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayoutCollection.AddItemSilently(System.Int32,Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Adds the item at the specified index, without triggering any events. 
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayoutCollection.Item(System.String)">
            <summary>
            Looks in the collection for a <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> with the specified key. 
            If no ColumnLayout in the collection has that key, then null is returned. 
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnLayoutTemplateColumn">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.Column"/> object that represents <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateCell"/> objects.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayoutTemplateColumn.WidthResolved">
            <summary>
            The width of a <see cref="T:Infragistics.Controls.Grids.ColumnLayoutTemplateColumn"/> is always *. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayoutTemplateColumn.GenerateCell(Infragistics.Controls.Grids.RowBase)">
            <summary>
            If given a <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateRow"/> a <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateCell"/> will be returned.
            </summary>
            <param propertyName="row"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayoutTemplateColumn.IsResizable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.ColumnLayoutTemplateColumn"/> is not resizable.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayoutTemplateColumn.IsFixable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.ColumnLayoutTemplateColumn"/> can not be locked into place.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnLayoutTemplateColumn.IsSortable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.ColumnLayoutTemplateColumn"/> is always sortable.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnLayoutTemplateColumn.GenerateContentProvider">
            <summary>
            This column does not generate any conent.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnSettings">
            <summary>
            A base class for settings that will be attached to a <see cref="P:Infragistics.Controls.Grids.ColumnSettings.Column"/> object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnSettings.Column">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.ColumnSettings.Column"/> object that this settings object is applying to.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnSettings.PropertiesToIgnore">
            <summary>
            Gets a List of properties that shouldn't be saved when the PersistenceManager goes to save them.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnSettings.PriorityProperties">
            <summary>
            Gets a List of properties that should be applied, before even trying to look at any other property on the object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnSettings.OnLoadedCatchUp">
            <summary>
            Designed to be called during the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> OnLoaded to allow any processing 
            due to objects added in the XAML but not able to be processed until other objects populated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnSettings.FinishedLoadingPersistence">
            <summary>
            Allows an object to perform an operation, after it's been loaded.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnSettings.Reset">
            <summary>
            When overridden in derived classes allows the <see cref="T:Infragistics.Controls.Grids.ColumnSettings"/> object a chance to clean itself.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnTypeMapping">
            <summary>
            An object that defines the mapping between a particular data type and a particular column type in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnTypeMapping.ColumnType">
            <summary>
            Gets/sets the type of column that should be assoicated with the <see cref="P:Infragistics.Controls.Grids.ColumnTypeMapping.DataType"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnTypeMapping.DataType">
            <summary>
            Gets/sets the type of data that should be assoicated with the <see cref="P:Infragistics.Controls.Grids.ColumnTypeMapping.ColumnType"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnTypeMappingsCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Controls.Grids.ColumnTypeMapping"/> objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnTypeMappingsCollection.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Controls.Grids.ColumnTypeMappingsCollection"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnTypeMappingsCollection.OnItemAdded(System.Int32,Infragistics.Controls.Grids.ColumnTypeMapping)">
            <summary>
            Invoked when an Item is added at the specified index.
            </summary>
            <param propertyName="index"></param>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnTypeMappingsCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param propertyName="index"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnTypeMappingsCollection.ResetItems">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ColumnWidth">
            <summary>
            An object that is used to specify the Width of a <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> object.
            </summary>	
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnWidth.SizeToHeader">
            <summary>
            Gets an instance of a SizeToHeader <see cref="T:Infragistics.Controls.Grids.ColumnWidth"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnWidth.SizeToCells">
            <summary>
            Gets an instance of a SizeToCells <see cref="T:Infragistics.Controls.Grids.ColumnWidth"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnWidth.Auto">
            <summary>
            Gets an instance of an Auto <see cref="T:Infragistics.Controls.Grids.ColumnWidth"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnWidth.InitialAuto">
            <summary>
            Gets an instance of an InitialAuto <see cref="T:Infragistics.Controls.Grids.ColumnWidth"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnWidth.Star">
            <summary>
            Gets an instance of a Star <see cref="T:Infragistics.Controls.Grids.ColumnWidth"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ColumnWidth.#ctor(System.Double,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ColumnWidth"/> struct of type ColumnWidthType.Numeric.
            </summary>
            <param propertyName="value">The width of the column.</param>
            <param propertyName="isStar">Whether the ColumnWidth should be of Type Star or Numeric.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnWidth.Value">
            <summary>
            Gets the value of the ColumnWidth property.
            </summary>
            <remarks>
            <see cref="T:Infragistics.Controls.Grids.ColumnWidthType"/>.Auto : 1 is returned.
            <see cref="T:Infragistics.Controls.Grids.ColumnWidthType"/>.SizeToCells : 1 is returned.
            <see cref="T:Infragistics.Controls.Grids.ColumnWidthType"/>.SizeToHeader : 1 is returned.
            <see cref="T:Infragistics.Controls.Grids.ColumnWidthType"/>.Numeric : the width of the column is returned.
            <see cref="T:Infragistics.Controls.Grids.ColumnWidthType"/>.Star : the percent compared to all other Start columns is returned.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.ColumnWidth.WidthType">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.ColumnWidthType"/> of the <see cref="T:Infragistics.Controls.Grids.ColumnWidth"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ComboBoxColumn">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Column"/> that generates a <see cref="T:System.Windows.Controls.ComboBox"/> as the content for a <see cref="T:Infragistics.Controls.Grids.Cell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ComboBoxColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ComboBoxColumn"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ComboBoxColumn.GenerateContentProvider">
            <summary>
            Generates a new <see cref="T:Infragistics.Controls.Grids.ComboBoxColumnContentProvider"/> that will be used to generate conent for <see cref="T:Infragistics.Controls.Grids.Cell"/> objects for this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.ComboBoxColumn.RequiresFullRedrawOnEditorStyleUpdate">
            <summary>
            Gets / sets if whether the <see cref="M:Infragistics.Controls.Grids.XamGrid.ResetPanelRows(System.Boolean)"/> should be called to do a full redraw when the <see cref="T:Infragistics.Controls.Grids.ComboBoxColumn"/>.EditorStyle is changed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ComboBoxColumn.AllowCellEditorValueChangedFiltering">
            <summary>
            Gets a value indicating whether filtering will be immediately applied after the value of the cell editor is changed.
            </summary>
            <value>
            	<c>true</c> if a filter should be applied immediately after the value of the cell editor is changed; otherwise, <c>false</c>.
            </value>
            <remarks>
            See the remarks of <see cref="P:Infragistics.Controls.Grids.Column.AllowCellEditorValueChangedFiltering"/> for more information.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Grids.ComboBoxColumn.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ComboBoxColumn.ItemsSource"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ComboBoxColumn.ItemsSource">
            <summary>
            Gets/sets the <see cref="T:System.Collections.IEnumerable"/> for the <see cref="T:Infragistics.Controls.Grids.ComboBoxColumn"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ComboBoxColumn.DisplayMemberPathProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ComboBoxColumn.DisplayMemberPath"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ComboBoxColumn.DisplayMemberPath">
            <summary>
            Gets / sets the value which will be set on the ComboBox.DisplayMemberPath.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ComboBoxColumn.SelectedValuePathProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ComboBoxColumn.SelectedValuePath"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ComboBoxColumn.SelectedValuePath">
            <summary>
            Gets / sets the value which will be set on the ComboBox.SelectedValuePath.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ComboBoxColumn.ItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ComboBoxColumn.ItemTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ComboBoxColumn.ItemTemplate">
            <summary>
            Gets / sets the value which will be set on the ComboBox.ItemTemplate.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ComboBoxColumnContentProvider">
            <summary>
            An object that provides content to <see cref="T:Infragistics.Controls.Grids.Cell"/> objects that belong to a <see cref="T:Infragistics.Controls.Grids.ComboBoxColumn"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ComboBoxColumnContentProvider.#ctor">
            <summary>
            Instantiates a new instance of the <see cref="T:Infragistics.Controls.Grids.ComboBoxColumnContentProvider"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ComboBoxColumnContentProvider.ResolveDisplayElement(Infragistics.Controls.Grids.Cell,System.Windows.Data.Binding)">
            <summary>
            Sets up the element that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/>, when the cell is not in edit mode. 
            </summary>
            <param propertyName="cell">The cell that the display element will be displayed in.</param>
            <param propertyName="cellBinding">A <see cref="T:System.Windows.Data.Binding"/> object that can be applied to the cell. Note: this binding can be null.</param>
            <returns>The element that should be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ComboBoxColumnContentProvider.ApplyBindingToDisplayElement(Infragistics.Controls.Grids.Cell,System.Windows.Data.Binding)">
            <summary>
            This is where a ColumnContentProvider should apply the Binding to their Display element.
            </summary>
            <param name="cell"></param>
            <param name="binding"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ComboBoxColumnContentProvider.ResolveEditorControl(Infragistics.Controls.Grids.Cell,System.Object,System.Double,System.Double,System.Windows.Data.Binding)">
            <summary>
            Sets up the editor control that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/> when the the cell is in edit mode.
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> entering edit mode.</param>
            <param propertyName="editorValue">The value that should be put in the editor.</param>
            <param propertyName="availableWidth">The amount of horizontal space available.</param>
            <param propertyName="availableHeight">The amound of vertical space available.</param>
            <param propertyName="editorBinding">Provides a <see cref="T:System.Windows.Data.Binding"/> that can be used for setting up the editor.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ComboBoxColumnContentProvider.ResolveValueFromEditor(Infragistics.Controls.Grids.Cell)">
            <summary>
            Resolves the value of the editor control, so that the cell's underlying data can be updated. 
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> that the editor id being displayed in.</param>
            <returns>The value that should be displayed in the cell.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ComboBoxColumnContentProvider.EditorRemoved">
            <summary>
            Raised when the editor is removed from the cell.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ComboBoxColumnContentProvider.AdjustDisplayElement(Infragistics.Controls.Grids.Cell)">
            <summary>
            Called during EnsureContent to allow the provider a chance to modify its display based on the current conditions.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ComboBoxColumnContentProvider.FocusEditor">
            <summary>
            Calls the ContentProvider to Attempt to Focus the underlying editor control
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ComboBoxColumnContentProvider.ResolveBinding(Infragistics.Controls.Grids.Cell)">
            <summary>
            Builds the binding that will be used for a <see cref="T:Infragistics.Controls.Grids.Cell"/>
            </summary>
            <returns>If a binding cannot be created, null will be returned.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ComboBoxColumnContentProvider.ResetContent">
            <summary>
            Raised when the cell is recycling to allow the provider a chance to clear any internal members.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ComboBoxColumnContentProvider.ComboBoxItemsFilter.#ctor(System.Type,Infragistics.CachedTypedInfo,System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ComboBoxColumnContentProvider.ComboBoxItemsFilter"/> class.
            </summary>
            <param name="objectType"></param>
            <param name="typeInfo"></param>
            <param name="fieldName"></param>
            <param name="fieldType"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ComboBoxColumnContentProvider.ComboBoxItemsFilter.GetCurrentExpression">
            <summary>
            Generates the current expression for this <see cref="T:Infragistics.Controls.Grids.ComboBoxColumnContentProvider.ComboBoxItemsFilter"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ComboBoxColumnContentProvider.ComboBoxItemsFilter.FieldName">
            <summary>
            Gets the field name of the property that is being filtered on.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ComboBoxColumnContentProvider.ComboBoxItemsFilter.FieldType">
            <summary>
            Gets the Type of the FieldName property.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.CustomDisplayEditableColumn">
            <summary>
            The base class for all column object of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> templated to the control that will be used for editing and have the ability to change the editor control display.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.CustomDisplayEditableColumn.EditorDisplayBehaviorProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.CustomDisplayEditableColumn.EditorDisplayBehavior"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.CustomDisplayEditableColumn.EditorDisplayBehavior">
            <summary>
            Gets / sets the value which will be set on the <see cref="T:Infragistics.Controls.Grids.EditableColumn"/>.EditorDisplayBehavior.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateColumn">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Column"/> that generates a <see cref="T:System.Windows.Controls.DatePicker"/> as the content for a <see cref="T:Infragistics.Controls.Grids.Cell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.DateColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.DateColumn"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.DateColumn.GenerateContentProvider">
            <summary>
            Generates a new <see cref="T:Infragistics.Controls.Grids.DateColumnContentProvider"/> that will be used to generate conent for <see cref="T:Infragistics.Controls.Grids.Cell"/> objects for this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Infragistics.Controls.Grids.DateColumn.SelectedDateFormatProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.DateColumn.SelectedDateFormat"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateColumn.SelectedDateFormat">
            <summary>
            Gets / sets the <see cref="T:System.Windows.Controls.DatePickerFormat"/> that will be assigned to the <see cref="T:System.Windows.Controls.DatePicker"/> controls of the <see cref="T:Infragistics.Controls.Grids.DateColumn"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateColumnBase">
            <summary>
            A Base Class for Date or DateTime Columns that helps set up filtering.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateColumnBase.FormatStringResolved">
            <summary>
            A format string for formatting data in this column.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.DateColumnBase.FilterMenuCustomFilterString">
            <summary>
            Gets the default string for the FilterMenu for the CustomFilter text
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.DateColumnBase.GenerateFilterSelectionControl">
            <summary>
            Returns a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.SelectionControl"/> which will be used by the FilterMenu.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.DateColumnBase.FillAvailableFilters(Infragistics.Controls.Grids.FilterOperandCollection)">
            <summary>
            Fills the <see cref="T:Infragistics.Controls.Grids.FilterOperandCollection"/> with the operands that the column expects as filter values.
            </summary>
            <param name="availableFilters"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.DateColumnBase.FillFilterMenuOptions(System.Collections.Generic.List{Infragistics.Controls.Grids.FilterMenuTrackingObject})">
            <summary>
            Fills the inputted list with options for the FilterMenu control.
            </summary>
            <param name="list"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.DateColumnContentProvider">
            <summary>
            An object that provides content to <see cref="T:Infragistics.Controls.Grids.Cell"/> objects that belong to a <see cref="T:Infragistics.Controls.Grids.DateColumn"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.DateColumnContentProvider.#ctor">
            <summary>
            Instantiates a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.CheckBoxColumnContentProvider"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.DateColumnContentProvider.ResolveDisplayElement(Infragistics.Controls.Grids.Cell,System.Windows.Data.Binding)">
            <summary>
            Sets up the element that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/>, when the cell is not in edit mode. 
            </summary>
            <param propertyName="cell">The cell that the display element will be displayed in.</param>
            <param propertyName="cellBinding">A <see cref="T:System.Windows.Data.Binding"/> object that can be applied to the cell. Note: this binding can be null.</param>
            <returns>The element that should be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.DateColumnContentProvider.ApplyBindingToDisplayElement(Infragistics.Controls.Grids.Cell,System.Windows.Data.Binding)">
            <summary>
            This is where a ColumnContentProvider should apply the Binding to their Display element.
            </summary>
            <param name="cell"></param>
            <param name="binding"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.DateColumnContentProvider.ResolveEditorControl(Infragistics.Controls.Grids.Cell,System.Object,System.Double,System.Double,System.Windows.Data.Binding)">
            <summary>
            Sets up the edtior control that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/> when the the cell is in edit mode.
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> entering edit mode.</param>
            <param propertyName="editorValue">The value that should be put in the editor.</param>
            <param propertyName="availableWidth">The amount of horizontal space available.</param>
            <param propertyName="availableHeight">The amound of vertical space available.</param>
            <param propertyName="editorBinding">Provides a <see cref="T:System.Windows.Data.Binding"/> that can be used for setting up the editor.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.DateColumnContentProvider.ResolveValueFromEditor(Infragistics.Controls.Grids.Cell)">
            <summary>
            Resolves the value of the editor control, so that the cell's underlying data can be updated. 
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> that the editor id being displayed in.</param>
            <returns>The value that should be displayed in the cell.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.DateColumnContentProvider.AdjustDisplayElement(Infragistics.Controls.Grids.Cell)">
            <summary>
            Called during EnsureContent to allow the provider a chance to modify its display based on the current conditions.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.DateColumnContentProvider.EditorRemoved">
            <summary>
            Raised when the editor is removed from the cell.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.DateColumnContentProvider.EditorLoaded">
            <summary>
            Invoked when the editor's loaded event is raised. 
            </summary>
            <remarks>This method should be used to do such things as selecting the text of a TextBox, or causing a specific element in the editor to focus.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.DateColumnContentProvider.FocusEditor">
            <summary>
            Calls the ContentProvider to Attempt to Focus the underlying editor control
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.EditableColumn">
            <summary>
            The base class for all standard column object of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> templated to the control that will be used for editting.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditableColumn.EditorStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that should be applied to the editor of this <see cref="T:Infragistics.Controls.Grids.Column"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.EditableColumn.IsReadOnlyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.EditableColumn.IsReadOnly"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditableColumn.IsReadOnly">
            <summary>
            Gets / sets if the column should be editable.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.EditableColumn.EditorValueConverterProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.EditableColumn.EditorValueConverter"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditableColumn.EditorValueConverter">
            <summary>
            Gets/sets the <see cref="T:System.Windows.Data.IValueConverter"/> that will be used for the genereated <see cref="T:System.Windows.Data.Binding"/> when a <see cref="T:Infragistics.Controls.Grids.Cell"/> enters edit mode.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.EditableColumn.EditorValueConverterParameterProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.EditableColumn.EditorValueConverterParameter"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditableColumn.EditorValueConverterParameter">
            <summary>
            Gets/sets the parameter that will be used with the <see cref="P:Infragistics.Controls.Grids.EditableColumn.EditorValueConverter"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.EditableColumn.AllowEditingValidationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.EditableColumn.AllowEditingValidation"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditableColumn.AllowEditingValidation">
            <summary>
            Gets/sets whether Validation should be used when editing a cell. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditableColumn.EditorHorizontalContentAlignment">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.HorizontalAlignment"/> of the content of all cells in this <see cref="T:Infragistics.Controls.Grids.Column"/> while they're in edit mode;
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditableColumn.EditorVerticalContentAlignment">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.VerticalAlignment"/> of the content of all cells in this <see cref="T:Infragistics.Controls.Grids.Column"/> while they're in edit mode;
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditableColumn.IsEditable">
            <summary>
            Resolves whether this <see cref="T:Infragistics.Controls.Grids.Column"/> supports editing.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.EditableColumn.RequiresFullRedrawOnEditorStyleUpdate">
            <summary>
            Gets / sets if whether the <see cref="M:Infragistics.Controls.Grids.XamGrid.ResetPanelRows(System.Boolean)"/> should be called to do a full redraw when the <see cref="P:Infragistics.Controls.Grids.EditableColumn.EditorStyle"/> is changed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.GroupColumn">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Column"/> that organizes other Columns under a single header. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.GroupColumn"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupColumn.ResizeColumnResolved">
            <summary>
            Resolves the <see cref="T:Infragistics.Controls.Grids.Column"/> that should be resized when dragging the right edge of this Column.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupColumn.RequiresBoundDataKey">
            <summary>
            This Column type doesn't require a Key that is bound to the underlying Data.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupColumn.IsEditable">
            <summary>
            This Column type is not Editable.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupColumn.IsFilterable">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.GroupColumn"/> is not Filterable.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupColumn.IsSortable">
            <summary>
            This Column is not sortable.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupColumn.IsSummable">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.GroupColumn"/> is not Summable
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupColumn.IsGroupable">
            <summary>
            This column is not Groupable.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupColumn.CanBeGroupedBy">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.GroupColumn"/> can not be Grouped.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupColumn.CanBeSorted">
            <summary>
            Determines if a <see cref="T:Infragistics.Controls.Grids.Column"/> can be Sorted.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupColumn.CanBeFiltered">
            <summary>
            Determines if a <see cref="T:Infragistics.Controls.Grids.Column"/> can be Filtered.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupColumn.OnColumnLayoutChanged">
            <summary>
            Raised when the a <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> is assigned or removed from this <see cref="T:Infragistics.Controls.Grids.GroupColumn"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupColumn.GenerateContentProvider">
            <summary>
            This Column does not need a <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupColumn.GenerateDataCell(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Generates a new <see cref="T:Infragistics.Controls.Grids.Primitives.GroupCell"/> which will be used for all data rows in this <see cref="T:Infragistics.Controls.Grids.GroupColumn"/>
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupColumn.GenerateHeaderCell(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Generates a new <see cref="T:Infragistics.Controls.Grids.Primitives.GroupHeaderCell"/> which will be used for all header rows in this <see cref="T:Infragistics.Controls.Grids.GroupColumn"/>
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupColumn.GenerateFooterCell(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Generates a new <see cref="T:Infragistics.Controls.Grids.Primitives.GroupFooterCell"/> which will be used for all Footer rows in this <see cref="T:Infragistics.Controls.Grids.GroupColumn"/>
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupColumn.ResolveChildColumns">
            <summary>
            Returns a collection of <see cref="T:Infragistics.Controls.Grids.Column"/> objects that belong to this <see cref="T:Infragistics.Controls.Grids.GroupColumn"/>
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupColumn.AllColumns">
            <summary>
            Gets a ReadOnly collection of all <see cref="T:Infragistics.Controls.Grids.Column"/> objects that belong to a particular <see cref="T:Infragistics.Controls.Grids.Column"/>. 
            </summary>
            <remarks>
            This includes Columns that are children of other Columns. 
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupColumn.AllVisibleChildColumns">
            <summary>
            Gets a ReadOnly collection of all visible <see cref="T:Infragistics.Controls.Grids.Column"/> objects that have no children columns.
            </summary>
            <remarks>
            This includes Columns that are children of other Columns. 
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupColumn.SupportsActivationAndSelection">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.GroupColumn"/> can neither be selected or Activated.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupColumn.HeaderStyleResolved">
            <summary>
            Resolves the actual Style that will be applied to the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupHeaderCellControl"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupColumn.Columns">
            <summary>
            Gets the Collection of <see cref="T:Infragistics.Controls.Grids.Column"/> objects that are grouped in to this Column.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupColumn.PriorityProperties">
            <summary>
            Gets a List of properties that should be applied, before even trying to look at any other property on the object.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.GroupColumnsCollection">
            <summary>
            A collection of chilren <see cref="T:Infragistics.Controls.Grids.Column"/> objects that are displayed under a <see cref="T:Infragistics.Controls.Grids.GroupColumn"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupColumnsCollection.ColumnLayout">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.GroupColumnsCollection.ColumnLayout"/> that the <see cref="T:Infragistics.Controls.Grids.GroupColumn"/> that owns this collection belongs to.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupColumnsCollection.PropertiesToIgnore">
            <summary>
            Gets a List of properties that shouldn't be saved when the PersistenceManager goes to save them.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupColumnsCollection.PriorityProperties">
            <summary>
            Gets a List of properties that should be applied, before even trying to look at any other property on the object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupColumnsCollection.AddItem(System.Int32,Infragistics.Controls.Grids.Column)">
            <summary>
            Inserts the <see cref="T:Infragistics.Controls.Grids.Column"/> at the specified index.
            </summary>
            <param propertyName="index">The index that the Column should be inserted.</param>
            <param propertyName="item">The <see cref="T:Infragistics.Controls.Grids.Column"/> that should be inserted.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupColumnsCollection.Insert(System.Int32,Infragistics.Controls.Grids.Column)">
            <summary>
            Inserts the specified <see cref="T:Infragistics.Controls.Grids.Column"/> as the specified index. 
            </summary>
            <param propertyName="index"></param>
            <param propertyName="item"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupColumnsCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the <see cref="T:Infragistics.Controls.Grids.Column"/> a the specified index. 
            </summary>
            <param propertyName="index">The index of the Column that should be removed.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupColumnsCollection.ResetItems">
            <summary>
            Removes all <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> objects from the <see cref="T:Infragistics.Controls.Grids.ColumnBaseCollection"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupColumnsCollection.AllColumns">
            <summary>
            Gets a recursive collection of all <see cref="T:Infragistics.Controls.Grids.Column"/> objects in particular <see cref="T:Infragistics.Controls.Grids.GroupColumn"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupColumnsCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.Column"/> that has the specified key. 
            </summary>
            <param propertyName="key"></param>
            <returns>
            The column with the specified Key. 
            If more than one <see cref="T:Infragistics.Controls.Grids.Column"/> has the same key, the first Column is returned.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupColumnsCollection.GetLookupKeys">
            <summary>
            Gets a list of keys that each object in the collection has. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupColumnsCollection.CanRehydrate(System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            Looks through the keys, and determines that all the keys are in the collection, and that the same about of objects are in the collection.
            If this isn't the case, false is returned, and the Control Persistence Framework, will not try to reuse the object that are already in the collection.
            </summary>
            <param name="lookupKeys"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupColumnsCollection.FinishedLoadingPersistence">
            <summary>
            Allows an object to perform an operation, after it's been loaded.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.GroupDisplayColumn">
            <summary>
            A custom column used by the <see cref="T:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl"/>.
            </summary>
            <remarks>Not for general use.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupDisplayColumn.IsResizable">
            <summary>
            Gets/Sets if a Column can be resized via the UI.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupDisplayColumn.IsEditable">
            <summary>
            Resolves whether this <see cref="T:Infragistics.Controls.Grids.Column"/> supports editing.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupDisplayColumn.IsSortable">
            <summary>
            Gets/Sets whether the <see cref="T:Infragistics.Controls.Grids.UnboundColumn"/> is sortable. 		 
            </summary>
            <remarks>
            In order for a Unbound to be sortable, it must have a <see cref="P:Infragistics.Controls.Grids.Column.SortComparer" /> or <see cref="P:Infragistics.Controls.Grids.Column.ValueConverter"/>.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupDisplayColumn.IsFilterable">
            <summary>
            Gets/sets if a column can be filtered via the UI.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupDisplayColumn.AndColorBrush">
            <summary>
            Gets / sets the <see cref="T:System.Windows.Media.Brush"/> that will be used by the control to denote that the conditions are AND'd together.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.GroupDisplayColumn.OrColorBrush">
            <summary>
            Gets / sets the <see cref="T:System.Windows.Media.Brush"/> that will be used by the control to denote that the conditions are OR'd together.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupDisplayColumn.GenerateContentProvider">
            <summary>
            Generates a new <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase"/> that will be used to generate conent for <see cref="T:Infragistics.Controls.Grids.Cell"/> objects for this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupDisplayColumn.GenerateDataCell(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Returns a new instance of a <see cref="T:Infragistics.Controls.Grids.Cell"/>
            </summary>
            <param propertyName="row"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.GroupDisplayColumnContentProvider">
            <summary>
            A custom <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnContentProviderBase"/> which is used by the <see cref="T:Infragistics.Controls.Grids.GroupDisplayColumn"/> on the <see cref="T:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl"/>.
            </summary>
            <remarks>Not for general use.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupDisplayColumnContentProvider.ResolveDisplayElement(Infragistics.Controls.Grids.Cell,System.Windows.Data.Binding)">
            <summary>
            Sets up the element that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/>, when the cell is not in edit mode. 
            </summary>
            <param propertyName="cell">The cell that the display element will be displayed in.</param>
            <param propertyName="cellBinding">A <see cref="T:System.Windows.Data.Binding"/> object that can be applied to the cell. Note: this binding can be null.</param>
            <returns>The element that should be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupDisplayColumnContentProvider.AdjustDisplayElement(Infragistics.Controls.Grids.Cell)">
            <summary>
            Called during EnsureContent to allow the provider a chance to modify its display based on the current conditions.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupDisplayColumnContentProvider.ResolveValueFromEditor(Infragistics.Controls.Grids.Cell)">
            <summary>
            Resolves the value of the editor control, so that the cell's underlying data can be updated. 
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> that the editor id being displayed in.</param>
            <returns>The value that should be displayed in the cell.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.GroupDisplayColumnContentProvider.ResolveEditorControl(Infragistics.Controls.Grids.Cell,System.Object,System.Double,System.Double,System.Windows.Data.Binding)">
            <summary>
            Sets up the edtior control that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/> when the the cell is in edit mode.
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> entering edit mode.</param>
            <param propertyName="editorValue">The value that should be put in the editor.</param>
            <param propertyName="availableWidth">The amount of horizontal space available.</param>
            <param propertyName="availableHeight">The amound of vertical space available.</param>
            <param propertyName="editorBinding">Provides a <see cref="T:System.Windows.Data.Binding"/> that can be used for setting up the editor.</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.HyperlinkColumn">
            <summary>
            A column that uses a <see cref="T:System.Windows.Documents.Hyperlink"/> as the content for its <see cref="T:Infragistics.Controls.Grids.CellBase"/>s
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.HyperlinkColumn.ContentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.HyperlinkColumn.Content"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.HyperlinkColumn.Content">
            <summary>
            Gets/Sets the content that should be displayed in every cell of the <see cref="T:Infragistics.Controls.Grids.HyperlinkColumn"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.HyperlinkColumn.ContentBinding">
            <summary>
            Gets/Sets a <see cref="T:System.Windows.Data.Binding"/>that should be used for the conent of the <see cref="T:Infragistics.Controls.Grids.HyperlinkColumn"/>. Note: the source of the binding will be the underlying data of the specific row being displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.HyperlinkColumn.TargetNameProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.HyperlinkColumn.TargetName"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.HyperlinkColumn.TargetName">
            <summary>
            Gets/Sets the propertyName of a target window or frame to navigate to within the WebPage.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.HyperlinkColumn.HyperlinkButtonStyle">
            <summary>
            Gets or sets the hyperlink style.
            </summary>
            <remarks>The style will be applied on the <see cref="T:System.Windows.Controls.TextBlock"/> wrapping a <see cref="T:System.Windows.Documents.Hyperlink"/>.</remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.HyperlinkColumn.DataType">
            <summary>
            The DataType that the column's data is derived from.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.HyperlinkColumn.GenerateContentProvider">
            <summary>
            Generates a new <see cref="T:Infragistics.Controls.Grids.Primitives.HyperlinkColumnContentProvider"/> that will be used to generate conent for <see cref="T:Infragistics.Controls.Grids.Cell"/> objects for this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.HyperlinkColumn.FillAvailableSummaries(Infragistics.SummaryOperandCollection)">
            <summary>
            Fills the <see cref="T:Infragistics.SummaryOperandCollection"/> with the operands that the column expects as summary values.
            </summary>
            <param name="availableSummaries"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.UriComparer">
            <summary>
            A IComparer implementation for URI datatypes
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.UriComparer.Compare(System.Uri,System.Uri)">
            <summary>
                Compares two objects and returns a value indicating whether one is less than,
                equal to, or greater than the other.
            </summary>
            <param propertyName="x"> The first object to compare.</param>
            <param propertyName="y">The second object to compare.</param>
            <returns/>
        </member>
        <member name="T:Infragistics.Controls.Grids.ImageColumn">
            <summary>
            A column that uses a <see cref="T:System.Windows.Controls.Image"/> as the content for its <see cref="T:Infragistics.Controls.Grids.CellBase"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ImageColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ImageColumn"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ImageColumn.GenerateContentProvider">
            <summary>
            Generates a new <see cref="T:Infragistics.Controls.Grids.Primitives.ImageColumnContentProvider"/> that will be used to generate conent for <see cref="T:Infragistics.Controls.Grids.Cell"/> objects for this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ImageColumn.FillAvailableSummaries(Infragistics.SummaryOperandCollection)">
            <summary>
            Fills the <see cref="T:Infragistics.SummaryOperandCollection"/> with the operands that the column expects as summary values.
            </summary>
            <param name="availableSummaries"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.ImageColumn.IsFilterable">
            <summary>
            Gets/sets if a column can be filtered via the UI.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ImageColumn.DataType">
            <summary>
            The DataType that the column's data is derived from.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ImageColumn.ImageStyle">
            <summary>
            Gets/sets the Style that will be applied to every <see cref="T:System.Windows.Controls.Image"/> in this <see cref="T:Infragistics.Controls.Grids.ImageColumn"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ImageColumn.ImageHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ImageColumn.ImageHeight"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ImageColumn.ImageHeight">
            <summary>
            Gets / sets a height to all images in an <see cref="T:Infragistics.Controls.Grids.ImageColumn"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ImageColumn.ImageWidthProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ImageColumn.ImageWidth"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ImageColumn.ImageWidth">
            <summary>
            Gets / sets a width to all images in an <see cref="T:Infragistics.Controls.Grids.ImageColumn"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.BitmapImageComparer">
            <summary>
            A IComparer, IEqualityComparer implementation for BitmapImage datatypes
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.BitmapImageComparer.Compare(System.Windows.Media.Imaging.BitmapImage,System.Windows.Media.Imaging.BitmapImage)">
            <summary>
                Compares two objects and returns a value indicating whether one is less than,
                equal to, or greater than the other.
            </summary>
            <param propertyName="x"> The first object to compare.</param>
            <param propertyName="y">The second object to compare.</param>
            <returns/>
        </member>
        <member name="M:Infragistics.Controls.Grids.BitmapImageComparer.Equals(System.Windows.Media.Imaging.BitmapImage,System.Windows.Media.Imaging.BitmapImage)">
            <summary>
                Compares two objects and returns a value indicating whether they equal one another.
                
            </summary>
            <param propertyName="x"> The first object to compare.</param>
            <param propertyName="y">The second object to compare.</param>
            <returns/>
        </member>
        <member name="M:Infragistics.Controls.Grids.BitmapImageComparer.GetHashCode(System.Windows.Media.Imaging.BitmapImage)">
            <summary>
            Returns a hash code for the object.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.ProxyColumn">
            <summary>
            ColumnType used in <see cref="T:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ProxyColumn.GenerateContentProvider">
            <summary>
            Generates a new <see cref="T:Infragistics.Controls.Grids.Primitives.TextColumnContentProvider" /> that will be used to generate conent for <see cref="T:Infragistics.Controls.Grids.Cell" /> objects for this <see cref="T:Infragistics.Controls.Grids.Column" />.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.ProxyColumnContentProvider">
            <summary>
            A custom <see cref="T:Infragistics.Controls.Grids.Primitives.TextColumnContentProvider"/> which is used by the <see cref="T:Infragistics.Controls.Grids.ProxyColumn"/> on the <see cref="T:Infragistics.Controls.Grids.Primitives.CompoundFilterDialogControl"/>.
            </summary>
            <remarks>Not for general use.</remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.ProxyColumnContentProvider.RemovePaddingDuringEditing">
            <summary>
            Gets/Sets whether the padding of a <see cref="T:Infragistics.Controls.Grids.Cell" /> should be removed before putting an editor into edit mode.
            </summary>
            <remarks>
            This property will determine the availableHeight and availableWidth parameters of the ResolveEditorControl method.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.ProxyColumnContentProvider.ResolveDisplayElementInternal(Infragistics.Controls.Grids.Cell,System.Windows.Data.Binding)">
            <summary>
            Sets up the element that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/>, when the cell is not in edit mode. 
            </summary>
            <param propertyName="cell">The cell that the display element will be displayed in.</param>
            <param propertyName="cellBinding">A <see cref="T:System.Windows.Data.Binding"/> object that can be applied to the cell. Note: this binding can be null.</param>
            <returns>The element that should be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ProxyColumnContentProvider.ResolveEditorControlInternal(Infragistics.Controls.Grids.Cell,System.Object,System.Double,System.Double,System.Windows.Data.Binding)">
            <summary>
            Sets up the edtior control that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/> when the the cell is in edit mode.
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> entering edit mode.</param>
            <param propertyName="editorValue">The value that should be put in the editor.</param>
            <param propertyName="availableWidth">The amount of horizontal space available.</param>
            <param propertyName="availableHeight">The amound of vertical space available.</param>
            <param propertyName="editorBinding">Provides a <see cref="T:System.Windows.Data.Binding"/> that can be used for setting up the editor.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ProxyColumnContentProvider.ResolveValueFromEditor(Infragistics.Controls.Grids.Cell)">
            <summary>
            Resolves the value of the editor control, so that the cell's underlying data can be updated. 
            </summary>
            <param propertyName="cell">The <see cref="T:Infragistics.Controls.Grids.Cell"/> that the editor id being displayed in.</param>
            <returns>The value that should be displayed in the cell.</returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.ReadOnlyKeyedColumnBaseCollection`1">
            <summary>
            A ReadOnlyCollection that can be indexed by a string identifier.
            </summary>
            <typeparam propertyName="T"></typeparam>
        </member>
        <member name="M:Infragistics.Controls.Grids.ReadOnlyKeyedColumnBaseCollection`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Controls.Grids.ReadOnlyKeyedColumnBaseCollection`1"/> object.
            </summary>
            <param propertyName="list"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.ReadOnlyKeyedColumnBaseCollection`1.Item(System.String)">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> that has the specified key. 
            </summary>
            <param propertyName="key"></param>
            <returns>
            The column with the specified Key. 
            If more than one <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> has the same key, the first Column is returned.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.TemplateColumn">
            <summary>
            A column that allows the user to specify what content will get displayed via it's <see cref="P:Infragistics.Controls.Grids.TemplateColumn.ItemTemplate"/> property.
            </summary>
            <remarks>Note: the <see cref="T:Infragistics.Controls.Grids.TemplateColumn"/> does not recycle it's content.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.TemplateColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.TemplateColumn"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.TemplateColumn.ItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.TemplateColumn.ItemTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TemplateColumn.ItemTemplate">
            <summary>
            Gets / sets the <see cref="T:System.Windows.DataTemplate"/> that will be used to generate content for each <see cref="T:Infragistics.Controls.Grids.CellBase"/> of the <see cref="T:Infragistics.Controls.Grids.TemplateColumn"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.TemplateColumn.EditorTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.TemplateColumn.EditorTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TemplateColumn.EditorTemplate">
            <summary>
            Gets/sets the Editor that will be displayed when a <see cref="T:Infragistics.Controls.Grids.Cell"/> in this <see cref="T:Infragistics.Controls.Grids.TemplateColumn"/> is in edit mode.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.TemplateColumn.FilterItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.TemplateColumn.FilterItemTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TemplateColumn.FilterItemTemplate">
            <summary>
            Gets / sets the <see cref="T:System.Windows.DataTemplate"/> that will be used to generate content for the <see cref="T:Infragistics.Controls.Grids.CellBase"/> of the <see cref="T:Infragistics.Controls.Grids.TemplateColumn"/> in the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowCell"/>.
            </summary>
            <remarks>
            If this property is null then the <see cref="P:Infragistics.Controls.Grids.TemplateColumn.ItemTemplate"/> is used.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Grids.TemplateColumn.FilterEditorTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.TemplateColumn.FilterEditorTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TemplateColumn.FilterEditorTemplate">
            <summary>
            Gets / sets the Editor that will be displayed when this <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowCell"/> in this <see cref="T:Infragistics.Controls.Grids.TemplateColumn"/> is in edit mode.
            </summary>
            <remarks>
            If this property is null then the <see cref="P:Infragistics.Controls.Grids.TemplateColumn.EditorTemplate"/> is used.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.TemplateColumn.FilterMenuCustomFilterString">
            <summary>
            Gets the default string for the FilterMenu for the CustomFilter text
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TemplateColumn.IsSortable">
            <summary>
            Gets/Sets whether the <see cref="T:Infragistics.Controls.Grids.TemplateColumn"/> is sortable. 		 
            </summary>
            <remarks>
            In order for a TemplateColumn to be sortable, it must have a Key that maps to a property on the underlying datasource.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.TemplateColumn.GenerateContentProvider">
            <summary>
            Generates a new <see cref="T:Infragistics.Controls.Grids.Primitives.TemplateColumnContentProvider"/> that will be used to generate conent for <see cref="T:Infragistics.Controls.Grids.Cell"/> objects for this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.TemplateColumn.IsEditable">
            <summary>
            Resolves whether this <see cref="T:Infragistics.Controls.Grids.Column"/> supports editing.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TemplateColumn.UniqueColumnContent">
            <summary>
            Resolves whether <see cref="T:Infragistics.Controls.Grids.Cell"/> objects can be recycled and shared amongst columns of the same type.
            </summary>
            <remarks>
            Note: If false, then the Cells generated by this Column's ContentProvider will be 
            shared between other column's of this specific type.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.TemplateColumn.EditorValueConverter">
            <summary>
            This property isn't supported on this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TemplateColumn.EditorValueConverterParameter">
            <summary>
            This property isn't supported on this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TemplateColumn.ValueConverter">
            <summary>
            This property isn't supported on this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TemplateColumn.ValueConverterParameter">
            <summary>
            This property isn't supported on this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TemplateColumn.UseReadOnlyFlag">
            <summary>
            Determines if the <see cref="T:Infragistics.Controls.Grids.Column"/> should use the ReadOnly flag on a property, to determine if it can enter edit mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.TemplateColumn.FillAvailableFilters(Infragistics.Controls.Grids.FilterOperandCollection)">
            <summary>
            Fills the <see cref="T:Infragistics.Controls.Grids.FilterOperandCollection"/> with the operands that the column expects as filter values.
            </summary>
            <param name="availableFilters"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.TemplateColumn.FillFilterMenuOptions(System.Collections.Generic.List{Infragistics.Controls.Grids.FilterMenuTrackingObject})">
            <summary>
            Fills the inputted list with options for the FilterMenu control.
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.TemplateColumn.OnDataTypeChanged">
            <summary>
            Raised when the DataType of the <see cref="T:Infragistics.Controls.Grids.ColumnBase" /> is changed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.TemplateColumnLayout">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> object that can be unbound and have alternate content displayed via it's <see cref="P:Infragistics.Controls.Grids.TemplateColumnLayout.Template"/> property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TemplateColumnLayout.Template">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.DataTemplate"/> that displays custom data, rather than a collection of rows. 
            </summary>
            <remarks>The DataContext of this template is the data of the row that owns this <see cref="T:Infragistics.Controls.Grids.TemplateColumnLayout"/></remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.TemplateColumnLayout.RequiresBoundDataKey">
            <summary>
            Gets whether an exception should be thrown if the key associated with the <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> doesn't 
            correspond with a property in the data that this object represents.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ComboBoxColumnBase">
            <summary>
            A base class for ComboBoxColumn and MultiColumnComboColumn classes
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.ComboBoxColumnBase.FilterMenuItemConverterProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.ComboBoxColumnBase.FilterMenuItemConverter"/> dependency property. 
            </summary>  
        </member>
        <member name="P:Infragistics.Controls.Grids.ComboBoxColumnBase.FilterMenuItemConverter">
            <summary>
            Gets/sets the <see cref="T:System.Windows.Data.IValueConverter"/> that will be used for converting the displayed filter menu item text.
            This property is supported only for the <see cref="T:Infragistics.Controls.Grids.ComboBoxColumn"/> and MultiColumnComboColumn.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.TextColumn">
            <summary>
            A column that uses a <see cref="T:System.Windows.Controls.TextBlock"/> as the content for it's <see cref="T:Infragistics.Controls.Grids.CellBase"/>s
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.TextColumn.GenerateContentProvider">
            <summary>
            Generates a new <see cref="T:Infragistics.Controls.Grids.Primitives.TextColumnContentProvider"/> that will be used to generate conent for <see cref="T:Infragistics.Controls.Grids.Cell"/> objects for this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.TextColumn.FillAvailableFilters(Infragistics.Controls.Grids.FilterOperandCollection)">
            <summary>
            Fills the <see cref="T:Infragistics.Controls.Grids.FilterOperandCollection"/> with the operands that the column expects as filter values.
            </summary>
            <param name="availableFilters"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.TextColumn.FillFilterMenuOptions(System.Collections.Generic.List{Infragistics.Controls.Grids.FilterMenuTrackingObject})">
            <summary>
            Fills the inputted list with options for the FilterMenu control.
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.TextColumn.OnDataTypeChanged">
            <summary>
            Raised when the DataType of the <see cref="T:Infragistics.Controls.Grids.ColumnBase" /> is changed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TextColumn.DefaultFilterOperand">
            <summary>
            The default <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> for this column type;
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TextColumn.FormatStringResolved">
            <summary>
            A format string for formatting data in this column.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TextColumn.FilterMenuCustomFilterString">
            <summary>
            Gets the default string for the FilterMenu for the CustomFilter text
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TextColumn.TextBlockStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that will be applied to the <see cref="T:System.Windows.Controls.TextBlock"/> that displays data in a <see cref="T:Infragistics.Controls.Grids.Cell"/>
            when it is not in edit mode.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.TextColumn.TextWrappingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.TextColumn.TextWrapping"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TextColumn.TextWrapping">
            <summary>
            Gets/Sets whether <see cref="P:Infragistics.Controls.Grids.TextColumn.TextWrapping"/> should be applied to the  <see cref="T:System.Windows.Controls.TextBlock"/> and <see cref="T:System.Windows.Controls.TextBox"/> of a <see cref="T:Infragistics.Controls.Grids.TextColumn"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.TextColumn.FormatStringProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.TextColumn.FormatString"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.TextColumn.FormatString">
            <summary>
            Gets/sets the format string that will be applied to all cells in the column, if applicable. 
            </summary>
            <remarks>
            Note: The <see cref="P:Infragistics.Controls.Grids.Column.ValueConverter"/> property has higher precedence. 
            <para>In order to set this property in xaml, the value must begin with {}. For example: FormatString="{}{0:C}"</para>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.UnboundColumn">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Column"/> which can be used to show calculated data.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.UnboundColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.UnboundColumn"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.UnboundColumn.DefaultFilterOperand">
            <summary>
            The default <see cref="T:Infragistics.Controls.Grids.FilterOperand"/> for this column type;
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.UnboundColumn.UseReadOnlyFlag">
            <summary>
            Determines if the <see cref="T:Infragistics.Controls.Grids.Column"/> should use the ReadOnly flag on a property, to determine if it can enter edit mode.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.UnboundColumn.IsEditable">
            <summary>
            Resolves whether this <see cref="T:Infragistics.Controls.Grids.Column"/> supports editing.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.UnboundColumn.ItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.UnboundColumn.ItemTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.UnboundColumn.ItemTemplate">
            <summary>
            Gets the <see cref="T:System.Windows.DataTemplate"/> that will be used to generate content for each <see cref="T:Infragistics.Controls.Grids.CellBase"/> of the <see cref="T:Infragistics.Controls.Grids.UnboundColumn"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.UnboundColumn.EditorTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.UnboundColumn.EditorTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.UnboundColumn.EditorTemplate">
            <summary>
            Gets/sets the Editor that will be displayed when a <see cref="T:Infragistics.Controls.Grids.Cell"/> in this <see cref="T:Infragistics.Controls.Grids.UnboundColumn"/> is in edit mode.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.UnboundColumn.FilterItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.UnboundColumn.FilterItemTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.UnboundColumn.FilterItemTemplate">
            <summary>
            Gets / sets the <see cref="T:System.Windows.DataTemplate"/> that will be used to generate content for the <see cref="T:Infragistics.Controls.Grids.CellBase"/> of the <see cref="T:Infragistics.Controls.Grids.TemplateColumn"/> in the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowCell"/>.
            </summary>
            <remarks>
            If this property is null then the <see cref="P:Infragistics.Controls.Grids.UnboundColumn.ItemTemplate"/> is used.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Grids.UnboundColumn.FilterEditorTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.UnboundColumn.FilterEditorTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.UnboundColumn.FilterEditorTemplate">
            <summary>
            Gets / sets the Editor that will be displayed when this <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowCell"/> in this <see cref="T:Infragistics.Controls.Grids.TemplateColumn"/> is in edit mode.
            </summary>
            <remarks>
            If this property is null then the <see cref="P:Infragistics.Controls.Grids.UnboundColumn.EditorTemplate"/> is used.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.UnboundColumn.ResetCellValueObjectAfterEditing">
            <summary>
            Gets if the <see cref="T:Infragistics.Controls.Grids.Column"/> should reset the CellValueObject when exiting edit mode.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.UnboundColumn.RequiresBoundDataKey">
            <summary>
            Gets whether an exception should be thrown if the key associated with the <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> doesn't 
            correspond with a property in the data that this object represents.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.UnboundColumn.IsSortable">
            <summary>
            Gets/Sets whether the <see cref="T:Infragistics.Controls.Grids.UnboundColumn"/> is sortable. 		 
            </summary>
            <remarks>
            In order for a Unbound to be sortable, it must have a <see cref="P:Infragistics.Controls.Grids.Column.SortComparer" /> or <see cref="P:Infragistics.Controls.Grids.Column.ValueConverter"/>.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.UnboundColumn.GenerateDataCell(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Returns a new instance of a <see cref="T:Infragistics.Controls.Grids.Cell"/>
            </summary>
            <param propertyName="row"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.UnboundColumn.GenerateContentProvider">
            <summary>
            Generates a new <see cref="T:Infragistics.Controls.Grids.Primitives.UnboundColumnContentProvider"/> that will be used to generate conent for <see cref="T:Infragistics.Controls.Grids.Cell"/> objects for this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.UnboundColumn.FillAvailableFilters(Infragistics.Controls.Grids.FilterOperandCollection)">
            <summary>
            Fills the <see cref="T:Infragistics.Controls.Grids.FilterOperandCollection"/> with the operands that the column expects as filter values.
            </summary>
            <param name="availableFilters"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.UnboundColumn.FillAvailableSummaries(Infragistics.SummaryOperandCollection)">
            <summary>
            Fills the <see cref="T:Infragistics.SummaryOperandCollection"/> with the operands that the column expects as summary values.
            </summary>
            <param name="availableSummaries"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.UnboundColumn.ValidateSortComparer">
            <summary>
            Used to validate the <see cref="P:Infragistics.Controls.Grids.Column.SortComparer"/> can be used on this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.UnboundColumn.ValidateGroupByComparer">
            <summary>
            Used to validate the <see cref="P:Infragistics.Controls.Grids.Column.GroupByComparer"/> can be used on this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.UnboundColumn.UniqueColumnContent">
            <summary>
            Resolves whether <see cref="T:Infragistics.Controls.Grids.Cell"/> objects can be recycled and shared amongst columns of the same type.
            </summary>
            <remarks>
            Note: If false, then the Cells generated by this Column's ContentProvider will be 
            shared between other column's of this specific type.
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Grids.UnboundColumnDataContext">
            <summary>
            An object used by the <see cref="T:Infragistics.Controls.Grids.UnboundColumn"/> to hold the DataContext for a <see cref="T:Infragistics.Controls.Grids.Primitives.UnboundCell"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.UnboundColumnDataContext.RowData">
            <summary>
            The data object associated with the row of data.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.UnboundColumnDataContext.Value">
            <summary>
            The value generated by the ValueConverter.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.UnboundColumnDataContext.ColumnKey">
            <summary>
            The column key of the associate <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Grids.UnboundColumnDataContext.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.UnboundColumnDataContext.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.UnboundColumnDataContext.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.ChildBandRowsManager">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/> that manages <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/>s for a particular <see cref="T:Infragistics.Controls.Grids.Row"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ChildBandRowsManager.#ctor(Infragistics.Controls.Grids.Row)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.ChildBandRowsManager"/> class.
            </summary>
            <param propertyName="parentRow">The <see cref="T:Infragistics.Controls.Grids.Row"/> object that owns this <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.ChildBandRowsManager.Column">
            <summary>
            Gets the Column that represents all cells for reach ChildBand in this RowsManager.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ChildBandRowsManager.Rows">
            <summary>
            A collection of <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/> objects that this object manages. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ChildBandRowsManager.CompareTo(Infragistics.Controls.Grids.RowsManagerBase)">
            <summary>
            Compares the index of the parent row of the manager, to the parent row index of the other manager. 
            </summary>
            <param propertyName="other"></param>
            <returns>
            A signed number indicating the relative values of this instance and value. 
            Return FilterActionValue Description: 
            Less than zero This instance is less than value. 
            Zero This instance is equal to value. 
            Greater than zero This instance is greater than value. -or- value is null. 
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ChildBandRowsManager.ResolveIndentation(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Resolves the indentation for a particular <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/>. 
            </summary>
            <param propertyName="row">The ChildBand whose indentation should be calculated.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ChildBandRowsManager.UnregisterRowsManager(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            When a RowsManager is no longer needed, this method should be called, to detach all events that are hooked up to avoid Memory leaks.
            </summary>
            <param name="removeColumnLayout">Whether the ColumnLayout should be removed, or just its events.</param>
            <param name="clearChildRowsManager">Whether the ChildRowsManager should be disposed of on each row.</param>
            <param name="clearSelection">Whether the selected items should be unselected</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ChildBandRowsManager.OnRegisteredAsVisibleChildManager">
            <summary>
            Invoked when a <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/> is now visible, meaning it's Parent row is expanded. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ChildBandRowsManager.OnUnregisteredAsVisibleChildManager">
            <summary>
            Invoked when a <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/> is no longer visible, meaning it's Parent row is collapsed. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.ChildBandRowsManager.FullRowCount">
            <summary>
            Gets the total number of <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/> objects that can be physically displayed. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ChildBandRowsManager.ResolveRowForIndex(System.Int32)">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/> for the given index. 
            </summary>
            <param propertyName="index"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ChildBandRowsManager.ResolveIndexForRow(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Resolves the index of the given <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/>.
            </summary>
            <param propertyName="row"></param>
            <returns>
            If the specified <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/> is not currently visible, then index of the row that comes before it will be returned. 
            If the specified row is the only row in the collection, then -1 will be returned. 
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.ChildBandRowsManager.OnChildColumnLayoutRemoved(Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Raised when a <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> is removed from the owning ColumnLayout's Columns collection.
            </summary>
            <param propertyName="layout">The <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> being removed.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.ChildBandRowsManager.OnChildColumnLayoutAdded(Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Raised when a <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> is added to the owning ColumnLayout's Columns collection.
            </summary>
            <param propertyName="layout">The <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> being added.</param>
        </member>
        <member name="T:Infragistics.Controls.Grids.ChildBandComparer">
            <summary>
            A IComparer implementation for ChildBand datatypes
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.ChildBandComparer.Compare(Infragistics.Controls.Grids.Primitives.ChildBand,Infragistics.Controls.Grids.Primitives.ChildBand)">
            <summary>
                Compares two objects and returns a value indicating whether one is less than,
                equal to, or greater than the other.
            </summary>
            <param propertyName="x"> The first object to compare.</param>
            <param propertyName="y">The second object to compare.</param>
            <returns/>
        </member>
        <member name="T:Infragistics.Controls.Grids.Row">
            <summary>
            An object that represents a standard row in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Row.#ctor(System.Int32,Infragistics.Controls.Grids.RowsManager,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.Row"/> class.
            </summary>
            <param propertyName="index"></param>
            <param propertyName="manager">The <see cref="T:Infragistics.Controls.Grids.RowsManager"/> that owns the <see cref="T:Infragistics.Controls.Grids.Row"/>.</param>		
            <param propertyName="data"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Row.ChildRowsManager">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.ChildBandRowsManager"/> that the <see cref="T:Infragistics.Controls.Grids.Row"/> owns.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Row.HasChildren">
            <summary>
            Gets whether or not <see cref="T:Infragistics.Controls.Grids.Row"/> has any child rows.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Row.IsAlternateRow">
            <summary>
            Determines if the <see cref="T:Infragistics.Controls.Grids.Row"/> is an Alternate row.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Row.ChildBands">
            <summary>
            Gets the ChildBands of this particular Row. 
            </summary>
            <remarks>
            You can use a ChildBand to get a references to the child rows of a particular row. 
            Row.ChildBands[0].Rows[0] or Row.ChildBands["Orders"].Rows[0]
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.Row.IsSelected">
            <summary>
            Gets/Sets whether an item is currently selected. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Row.CellStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that will be used for all <see cref="T:Infragistics.Controls.Grids.CellControl"/> objects on this <see cref="T:Infragistics.Controls.Grids.Row"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Row.ParentRow">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.Row.ParentRow"/> that owns this <see cref="T:Infragistics.Controls.Grids.Row"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Row.RowType">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.Row.RowType"/> of this <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Row.ConditionalCellStyle">
            <summary>
            Gets / sets a style set by conditional formatting which will be used to style the row.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Row.AllowEditing">
            <summary>
            Gets if editing will be enabled on this <see cref="T:Infragistics.Controls.Grids.Row"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Row.AllowKeyboardNavigation">
            <summary>
            Gets whether the <see cref="T:Infragistics.Controls.Grids.RowBase"/> will allow keyboard navigation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Row.AllowSelection">
            <summary>
            Gets whether selection will be allowed on the <see cref="T:Infragistics.Controls.Grids.RowBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Row.ConditionalStyleDirty">
            <summary>
            Gets/Sets wehther thie ConditionalStyle for this row is dirty.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Row.CanBeDeleted">
            <summary>
            Gets whether the <see cref="T:Infragistics.Controls.Grids.Row"/> can actually be deleted. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Row.ControlTemplateForConditionalFormatting">
            <summary>
            This property holds the ControlTemplate that would be ripped out of the Row's CellStyle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Row.ConditionalStyleControlTemplate">
            <summary>
            This property holds the ControlTemplate that would have been ripped out by the generated style in conditional formatting.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Row.Delete">
            <summary>
            Deletes the row from the <see cref="T:Infragistics.Controls.Grids.RowsManager"/> that contains it.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Row.SetSelected(System.Boolean)">
            <summary>
            Sets the selected state of an item. 
            </summary>
            <param propertyName="isSelected"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Row.GetCellValue(Infragistics.Controls.Grids.Column)">
            <summary>
            Performs the cell.Value without forcing the cell to be made.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Row.OnElementReleasing(Infragistics.Controls.Grids.Primitives.CellsPanel)">
            <summary>
            Invoked when a <see cref="T:System.Windows.FrameworkElement"/> is being released from an object.
            </summary>
            <param propertyName="element"></param>
            <returns>False, if the element shouldn't be released.</returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.Row.ResolveRowHover">
            <summary>
            Resolves whether the entire row or just the individual cell should be hovered when the 
            mouse is over a cell. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Row.RecyclingElementType">
            <summary>
            Gets the Type of control that should be created for the <see cref="T:Infragistics.Controls.Grids.Row"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.Row.RecyclingIdentifier">
            <summary>
            If a <see cref="P:Infragistics.Controls.Grids.Row.RecyclingElementType"/> isn't specified, this property can be used to offer another way of identifying 
            a reyclable element.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Row.OnElementAttached(Infragistics.Controls.Grids.Primitives.CellsPanel)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.Primitives.CellsPanel"/> is attached to the <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
            <param propertyName="element">A <see cref="T:Infragistics.Controls.Grids.Primitives.CellsPanel"/></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.Row.OnElementReleased(Infragistics.Controls.Grids.Primitives.CellsPanel)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.Primitives.CellsPanel"/> is removed from the <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
            <param propertyName="element">A <see cref="T:Infragistics.Controls.Grids.Primitives.CellsPanel"/></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.Row.IsDataBound">
            <summary>
            Gets/sets whether the <see cref="T:Infragistics.Controls.Grids.Row"/> was generated via the datasource or was entered manually.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.RowBase">
            <summary>
            The base class for all row objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowBase.#ctor(Infragistics.Controls.Grids.RowsManagerBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.RowBase"/> class.
            </summary>
            <param propertyName="manager">The <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/> that owns the <see cref="T:Infragistics.Controls.Grids.RowBase"/>.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.Data">
            <summary>
            Gets the underlying data associated with the <see cref="T:Infragistics.Controls.Grids.RowBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.ColumnLayout">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.RowBase.ColumnLayout"/> that is associated with the <see cref="T:Infragistics.Controls.Grids.RowBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.Manager">
            <summary>
            The <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/> that owns this particular row. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.Cells">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.Primitives.CellBaseCollection"/> that belongs to the <see cref="T:Infragistics.Controls.Grids.RowBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.Control">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.Primitives.CellsPanel"/> that is attached to the <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
            <remarks>A Control is only assoicated with a Row when it's in the viewport of the <see cref="T:Infragistics.Controls.Grids.Primitives.RowsPanel"/></remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.Columns">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.ColumnBaseCollection"/> that is assocated with the <see cref="T:Infragistics.Controls.Grids.RowBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.IsAlternateRow">
            <summary>
            Determines if the currentIndex <see cref="T:Infragistics.Controls.Grids.RowBase"/> is an Alternate row.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.ActualHeight">
            <summary>
            Gets the physical height of the <see cref="T:Infragistics.Controls.Grids.RowBase"/>.
            Note: this only applies if the <see cref="T:Infragistics.Controls.Grids.RowBase"/> had an attached <see cref="T:Infragistics.Controls.Grids.Primitives.CellsPanel"/> at some point.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.IsMouseOver">
            <summary>
            Gets whether or not the Mouse is currently over the <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.IsActive">
            <summary>
            Gets whether or not a cell is the <see cref="T:Infragistics.Controls.Grids.RowBase"/> is active.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.Tag">
            <summary>
            Allows a user to store additional information about a <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.Index">
            <summary>
            Gets the currentIndex index of the <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.Level">
            <summary>
            Gets the level in the hierarchy of the <see cref="T:Infragistics.Controls.Grids.Row"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.RowType">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.RowBase.RowType"/> of this <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.Height">
            <summary>
            Gets/Sets the Height that will be applied to this particular <see cref="T:Infragistics.Controls.Grids.RowBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.HeightResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.RowBase.Height"/> property for this Row.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.MinimumRowHeight">
            <summary>
            Gets/Sets the Minimum Height of a <see cref="T:Infragistics.Controls.Grids.RowBase"/>. 
            </summary>
            <remarks>
            This value is ignored if RowHeight is of Type Numeric.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.MinimumRowHeightResolved">
            <summary>
            Resolves the <see cref="P:Infragistics.Controls.Grids.RowBase.MinimumRowHeight"/> property for a particular <see cref="P:Infragistics.Controls.Grids.RowBase.ColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.MergeData">
            <summary>
            Gets the <see cref="T:Infragistics.MergedRowInfo"/> for the <see cref="T:Infragistics.Controls.Grids.RowBase"/> if the row contains any Merged Columns, otherwise null.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.ResolveRowHover">
            <summary>
            Resolves whether the entire row or just the individual cell should be hovered when the 
            mouse is over a cell. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.VisibleCells">
            <summary>
            Gets a list of cells that are visible. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.FixedPositionSortOrder">
            <summary>
            Gets / sets the sort position.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.ItemSource">
            <summary>
            Gets/Sets the children data that the row owns. 
            </summary>
            <remarks>
            This property is only used in such cases as <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByRow"/> where it's data 
            does not contain an explicit IEnumerable.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.CanScrollHorizontally">
            <summary>
            Gets whether or not a row will ever need to scroll horizontally. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.AllowEditing">
            <summary>
            Gets whether editing will be allowed on the <see cref="T:Infragistics.Controls.Grids.RowBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.AllowKeyboardNavigation">
            <summary>
            Gets whether the <see cref="T:Infragistics.Controls.Grids.RowBase"/> will allow keyboard navigation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.AllowSelection">
            <summary>
            Gets whether selection will be allowed on the <see cref="T:Infragistics.Controls.Grids.RowBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.IsStandAloneRow">
            <summary>
            Gets whether this <see cref="T:Infragistics.Controls.Grids.Row"/> can stand alone, when there are no other data rows.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.IsStandAloneRowResolved">
            <summary>
            Resolves whether this <see cref="T:Infragistics.Controls.Grids.Row"/> will stand alone, based on the state of the grid.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowBase.RequiresFixedRowSeparator">
            <summary>
            Used to determine if a FixedRow separator is neccessary for this <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowBase.ResolveCell(Infragistics.Controls.Grids.Column)">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Grids.CellBase"/> for the specified <see cref="T:Infragistics.Controls.Grids.ColumnBase"/>
            </summary>
            <param propertyName="column">The Column in which to resolve the cell.</param>
            <returns>The cell at the given column location.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowBase.CellEditorValueChanged(Infragistics.Controls.Grids.CellBase,System.Object)">
            <summary>
            Called while the cell in a row is edited. 		
            </summary>
            <remarks>
            Designed to be used by rows who need to do actions while the editor control is being edited.
            </remarks>
            <param propertyName="cellBase"></param>
            <param propertyName="newValue"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowBase.OnItemSourceChanged">
            <summary>
            Invoked when the ItemSource property changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowBase.GetCellValue(Infragistics.Controls.Grids.Column)">
            <summary>
            Performs the cell.Value without forcing the cell to be made.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowBase.OnElementAttached(Infragistics.Controls.Grids.Primitives.CellsPanel)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.Primitives.CellsPanel"/> is attached to the <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
            <param propertyName="element">A <see cref="T:Infragistics.Controls.Grids.Primitives.CellsPanel"/></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowBase.OnElementReleased(Infragistics.Controls.Grids.Primitives.CellsPanel)">
            <summary>
            Called when the <see cref="T:Infragistics.Controls.Grids.Primitives.CellsPanel"/> is removed from the <see cref="T:Infragistics.Controls.Grids.RowBase"/>
            </summary>
            <param propertyName="element">A <see cref="T:Infragistics.Controls.Grids.Primitives.CellsPanel"/></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowBase.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of the CellsPanel. 
            Note: this method is only meant to be invoked via the RecyclingManager.
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Grids.Primitives.CellsPanel"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowBase.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Infragistics.Controls.Grids.RowBase"/> and optionally
            releases the managed resources.
            </summary>
            <param propertyName="disposing">
            true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowBase.Dispose">
            <summary>
            Releases the unmanaged and managed resources used by the <see cref="T:Infragistics.Controls.Grids.RowBase"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.RowCollection">
            <summary>
            A Collection of <see cref="T:Infragistics.Controls.Grids.Row"/> objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowCollection.#ctor(Infragistics.IProvideDataItems{Infragistics.Controls.Grids.Row},Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.RowCollection"/> class.
            </summary>
            <param propertyName="owner">The object that will generate <see cref="T:Infragistics.Controls.Grids.Row"/> objects as they're requested.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
            <remarks>
            This will not delete the underlying data, only clear the <see cref="T:Infragistics.Controls.Grids.RowCollection"/> and allow the rows to rebind.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowCollection.RemoveRange(System.Collections.Generic.IList{Infragistics.Controls.Grids.Row})">
            <summary>
            Removes the specified list of items.
            </summary>
            <param name="itemsToRemove"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowCollection.SelectAll">
            <summary>
            Selects all the rows in this collection.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGridRowCommand">
            <summary>
            An enumeration of available commands for the <see cref="T:Infragistics.Controls.Grids.Row"/> object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridRowCommand.Delete">
            <summary>
            Deletes the Row that the command is attached to.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridRowCommand.Expand">
            <summary>
            Expands the Row that the command is attached to.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridRowCommand.Collapse">
            <summary>
            Collapses the Row that the command is attached to.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridRowCommand.Edit">
            <summary>
            Puts the Row that the command is attached to, into edit mode.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.RowCommandBase">
            <summary>
            Base class for all commands that deal with a <see cref="T:Infragistics.Controls.Grids.Row"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowCommandBase.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param propertyName="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowCommandBase.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param propertyName="parameter">The <see cref="T:Infragistics.Controls.Grids.Row"/> object that will be executed against.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowCommandBase.ExecuteCommand(Infragistics.Controls.Grids.Row)">
            <summary>
            Executes the specific command on the specified <see cref="T:Infragistics.Controls.Grids.Row"/>
            </summary>
            <param propertyName="row"></param>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGridRowCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Grids.Row"/> object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridRowCommandSource.CommandType">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.XamGridColumnCommand"/> which is to be executed by the command.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridRowCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.RowHeight">
            <summary>
            An object that is used to specify the Height of a <see cref="T:Infragistics.Controls.Grids.RowBase"/> object.
            </summary>	
        </member>
        <member name="P:Infragistics.Controls.Grids.RowHeight.SizeToLargestCell">
            <summary>
            Gets an instance of a SizeToLargestCell <see cref="T:Infragistics.Controls.Grids.RowHeight"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowHeight.Dynamic">
            <summary>
            Gets an instance of a Dynamic <see cref="T:Infragistics.Controls.Grids.RowHeight"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowHeight.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.RowHeight"/> struct of type RowHeightType.Numeric.
            </summary>
            <param propertyName="value">The height of the row.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowHeight.Value">
            <summary>
            Gets the value of the RowHeight property.
            </summary>
            <remarks>
            <see cref="T:Infragistics.Controls.Grids.RowHeightType"/>.Dynamic : 1 is returned.
            <see cref="T:Infragistics.Controls.Grids.RowHeightType"/>.SizeToLargestCell : 1 is returned.
            <see cref="T:Infragistics.Controls.Grids.RowHeightType"/>.Numeric : the width of the column is returned.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowHeight.HeightType">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.RowHeightType"/> of the <see cref="T:Infragistics.Controls.Grids.RowHeight"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.RowsManager">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/> that manages <see cref="T:Infragistics.Controls.Grids.Row"/> objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.#ctor(System.Int32,Infragistics.Controls.Grids.ColumnLayout,Infragistics.Controls.Grids.RowBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.RowsManager"/> class.
            </summary>
            <param propertyName="level">The level that <see cref="T:Infragistics.Controls.Grids.RowsManager"/> is at.</param>
            <param propertyName="columnLayout">A reference to <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> object that corresponds with the <see cref="T:Infragistics.Controls.Grids.RowsManager"/></param>
            <param propertyName="parentLayoutRow">The owning <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/> of the <see cref="T:Infragistics.Controls.Grids.RowsManager"/>. </param>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.ItemsSource">
            <summary>
            Gets the data source for the <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.HeaderRow">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.RowsManager.HeaderRow"/> for this <see cref="T:Infragistics.Controls.Grids.RowsManager"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.FooterRow">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.RowsManager.FooterRow"/> for this <see cref="T:Infragistics.Controls.Grids.RowsManager"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.AddNewRowTop">
            <summary>
            Gets a specialized row representing the AddNewRow of the top of the row island.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.AddNewRowBottom">
            <summary>
            Gets a specialized row representing the AddNewRow of the bottom of the row island.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.PagerRowTop">
            <summary>
            Gets a specialized row representing the pager of the top of the row island.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.PagerRowBottom">
            <summary>
            Gets a specialized row representing the pager of the bottom of the row island.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.FilterRowTop">
            <summary>
            Gets a specialized row representing the FilterRow UI at the top of the row island.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.FilterRowBottom">
            <summary>
            Gets a specialized row representing the FilterRow UI at the bottom of the row island.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.SummaryRowTop">
            <summary>
            Gets a specialized row representing the Summary UI at the top of the row island.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.SummaryRowBottom">
            <summary>
            Gets a specialized row representing the Summary UI at the bottom of the row island.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.CurrentPageIndex">
            <summary>
            Gets / sets the page of data to be shown when the <see cref="P:Infragistics.Controls.Grids.ColumnLayout.PagerSettings"/> allows for paging.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.PageCount">
            <summary>
            Gets the total number of pages available from the DataManager.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.GroupByLevel">
            <summary>
            Gets the level that a <see cref="T:Infragistics.Controls.Grids.RowsManager"/> is grouped at.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.GroupedColumn">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.Column"/> that a <see cref="T:Infragistics.Controls.Grids.RowsManager"/> is grouped by.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.GroupByColumn">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.RowsManager.GroupByColumn"/> that represents all <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByCell"/> objects of this GroupByLevel.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.ColumnLayoutTemplateColumn">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.RowsManager.ColumnLayoutTemplateColumn"/> that represents all <see cref="T:Infragistics.Controls.Grids.Primitives.ColumnLayoutTemplateCell"/> objects that are displayed when a <see cref="T:System.Windows.DataTemplate"/> is specified on a <see cref="T:Infragistics.Controls.Grids.TemplateColumnLayout"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.RowFiltersCollection">
            <summary>
            Gets a <see cref="P:Infragistics.Controls.Grids.RowsManager.RowFiltersCollection"/> object that contains the filters being applied to this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.RowFiltersCollectionResolved">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.RowsManager.RowFiltersCollection"/> that will be used by the <see cref="T:Infragistics.Controls.Grids.RowsManager"/> based on the <see cref="T:Infragistics.Controls.Grids.FilteringScope"/> of the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.SummaryDefinitionCollection">
            <summary>
            Gets a <see cref="P:Infragistics.Controls.Grids.RowsManager.SummaryDefinitionCollection"/> object that contains the filters being applied to this <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.SummaryDefinitionCollectionResolved">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.RowsManager.SummaryDefinitionCollection"/> that will be used by the <see cref="T:Infragistics.Controls.Grids.RowsManager"/> based on the <see cref="T:Infragistics.Controls.Grids.SummaryScope"/> of the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.SummaryResultCollection">
            <summary>
            Gets the collection of <see cref="T:Infragistics.SummaryResult"/> objects that will be displayed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.DataManager">
            <summary>
            Gets a reference to the <see cref="T:Infragistics.DataManagerBase"/> of the <see cref="T:Infragistics.Controls.Grids.RowsManager"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.DataCount">
            <summary>
            Gets the amount of <see cref="T:Infragistics.Controls.Grids.Row"/>s in the <see cref="T:Infragistics.Controls.Grids.RowsManager"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.CachedRows">
            <summary>
            Gets a dictionary of rows that have already been created.
            </summary>
            <remarks>
            This property is used so that when operations such as sorting occur,
            the rows that were previously created aren't lost. 
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.FooterSupported">
            <summary>
            Gets if the <see cref="T:Infragistics.Controls.Grids.RowsManager"/> supports showing the footer in the general rows body.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.HeaderSupported">
            <summary>
            Gets if the <see cref="T:Infragistics.Controls.Grids.RowsManager"/> supports showing the header in the general rows body.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.RegisteredTopRows">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.RowBase"/> object collection of rows that will be considered header rows.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.RegisteredBottomRows">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.RowBase"/> object collection of rows that will be considered footer rows.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.ChildrenShouldBeDisplayedResolved">
            <summary>
            Resolves whether Child rows should be displayed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.SummaryResultCollectionInternal">
            <summary>
            Gets the collection of <see cref="T:Infragistics.SummaryResult"/> objects that will be displayed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.ConditionalFormattingRulesResolved">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.ConditionalFormatCollection"/> which will be applied.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.ConditionalFormattingProxyRulesResolved">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.RowsManager.ConditionalFormatProxyCollection"/> which will be applied.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.ConditionalFormatProxyCollection">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.RowsManager.ConditionalFormatProxyCollection"/> which contains the formats which will applied to the rows/
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.EnsureDataManager">
            <summary>
            This method checks to ensure that a DataManagerBase is created for a given level and if not creates it for that level.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.GetDataItem(System.Int32)">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Grids.Row"/> for the given index.
            </summary>
            <param propertyName="index">The index of the row to retrieve.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.GenerateColumnForField(Infragistics.DataField)">
            <summary>
            Returns a column for the specified <see cref="T:Infragistics.DataField"/>.
            </summary>
            <param propertyName="field">A <see cref="T:Infragistics.DataField"/>.</param>
            <returns>A <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> based off of the type of the <see cref="T:Infragistics.DataField"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.ResetAddNewRows(System.Boolean)">
            <summary>
            Assigns a new data object to the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.ResetFilterRows(System.Boolean)">
            <summary>
            Clears the underlying dataobject for the FilterRow UI.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.GenerateNewObject(Infragistics.Controls.Grids.RowType)">
            <summary>		
            Creates a new object from the <see cref="T:Infragistics.DataManagerBase"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.InitializeData">
            <summary>
            Looks at the data provided for the <see cref="T:Infragistics.Controls.Grids.RowsManager"/> and generates <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> objects 
            if AutoGenerateColumns is true.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.OnItemsSourceChanged(System.Boolean)">
            <summary>
            Invoked when the the underlying ItemsSource property changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.RegisterTopRow(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Registers a <see cref="T:Infragistics.Controls.Grids.RowBase"/> as a row that should be displayed above all other rows, such as the <see cref="P:Infragistics.Controls.Grids.RowsManager.HeaderRow"/>
            </summary>
            <param propertyName="row"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.RegisterBottomRow(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Registers a <see cref="T:Infragistics.Controls.Grids.RowBase"/> as a row that should be displayed below all other rows, such as the <see cref="P:Infragistics.Controls.Grids.RowsManager.FooterRow"/>
            </summary>
            <param propertyName="row"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.UnregisterTopRow(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Unregisters a <see cref="T:Infragistics.Controls.Grids.RowBase"/> that was registered to be displayed above of all other rows..
            </summary>
            <param propertyName="row"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.UnregisterBottomRow(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Unregisters a <see cref="T:Infragistics.Controls.Grids.RowBase"/> that was registered to be displayed below all other rows.
            </summary>
            <param propertyName="row"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.InvalidateHeaderRowVisibility">
            <summary>
            Determines if the <see cref="P:Infragistics.Controls.Grids.RowsManager.HeaderRow"/> should be visible, and registers/unregisters it accordingly.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.InvalidateFooterRowVisibility">
            <summary>
            Determines if the <see cref="P:Infragistics.Controls.Grids.RowsManager.FooterRow"/> should be visible, and registers/unregisters it accordingly.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.InvalidateAddNewRowVisibility(System.Boolean)">
            <summary>
            Determines if the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/> should be visible, and registers/unregisters it accordingly.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.InvalidateSummaryRowVisibility">
            <summary>
            Determines if the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRow"/> should be visible, and registers/unregisters it accordingly.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.InvalidateFilterRowVisibility(System.Boolean)">
            <summary>
            Determines if the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRow"/> should be visible, and registers/unregisters it accordingly.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.InvalidatePagerRowVisibility">
            <summary>
            Determines if the <see cref="T:Infragistics.Controls.Grids.Primitives.PagerRow"/> should be visible, and registers/unregisters it accordingly.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.ValidatePagerInformation">
            <summary>
            Ensures the Pager control's current page index is set correctly after changing the data source.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.InvalidateSort">
            <summary>
            Sorts the rows based on the values provided by the ColumnLayout object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.InvalidateFiltering">
            <summary>
            Filters the data based on it's current settings.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.InvalidateSummaries">
            <summary>
            Sums the data based on it's current settings.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.InvalidateConditionalFormatting">
            <summary>
            Used to invalidate due to conditional formatting.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.ResolveGroupByLevel(Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Walks up the <see cref="T:Infragistics.Controls.Grids.RowsManager"/> chain and checks to see if there are any other RowsManager above this level
            that have a GroupByLevel.
            </summary>
            <param propertyName="layout"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.InvalidateGroupBy(System.Boolean)">
            <summary>
            Validates whether a <see cref="T:Infragistics.Controls.Grids.RowsManager"/> needs to group its rows.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.CreateItem(System.Object,Infragistics.DataManagerBase)">
            <summary>
            Creates a new row object 
            </summary>
            <param propertyName="data"></param>
            <param propertyName="dataManager"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.CreateItem">
            <summary>
            Creates a new row object 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.CreateItem(System.Object)">
            <summary>
            Creates a new row object 
            </summary>
            <param propertyName="data"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.InsertItem(System.Int32,Infragistics.Controls.Grids.Row)">
            <summary>
            Inserts a row at a given index.
            </summary>
            <param propertyName="index"></param>
            <param propertyName="insertedObject"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.AddItem(Infragistics.Controls.Grids.Row)">
            <summary>
            Adds a row to the collection.
            </summary>
            <param propertyName="addedObject"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.RemoveItem(Infragistics.Controls.Grids.Row)">
            <summary>
            Removes a row from the underlying ItemSource
            </summary>
            <param propertyName="removedObject"></param>
            <returns>true if the row is removed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.RemoveItem(Infragistics.Controls.Grids.Row,System.Boolean,Infragistics.DataManagerBase)">
            <summary>
            Removes a row from the underlying ItemSource
            </summary>
            <param name="removedObject">The row to remove</param>
            <param name="invalidate">Whether the rows of the manager should be refreshed</param>
            <param name="manager">The Manager that should be performing the removal.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.RemoveRange(System.Collections.Generic.IList{Infragistics.Controls.Grids.Row})">
            <summary>
            Removes the specified rows from the collection.
            </summary>
            <param propertyName="itemsToRemove"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.InvalidateData">
            <summary>
            Triggers all Data operations such as sorting and GroupBy to be invalidated. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.GetRowScopedConditions">
            <summary>
            Creates a collection of <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRuleProxy"/> objects scoped to <see cref="T:Infragistics.Controls.Grids.StyleScope"/>.Row.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.GetCellScopedConditions(System.String)">
            <summary>
            Creates a collection of <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRuleProxy"/> objects scoped to <see cref="T:Infragistics.Controls.Grids.StyleScope"/>.Cell for a given <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.ResetRows">
            <summary>
            Clears the cached rows and invalidates the rows.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.OnCurrentItemChanged(System.Object)">
            <summary>
            Raised when the underlying data sources current item changes.
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.Rows">
            <summary>
            Gets the collection of child rows that belongs to the <see cref="T:Infragistics.Controls.Grids.RowsManager"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManager.FullRowCount">
            <summary>
            Gets the total amount of rows that can be displayed for the <see cref="T:Infragistics.Controls.Grids.RowsManager"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.ResolveRowForIndex(System.Int32)">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Grids.RowBase"/> for the given index. 
            </summary>
            <param propertyName="index">The index of the row to retrieve.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.ResolveIndexForRow(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Returns the index for a given row.
            </summary>
            <param propertyName="row">The row whose index should be returned.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.CompareTo(Infragistics.Controls.Grids.RowsManagerBase)">
            <summary>
            Compares the index of the parent row's <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> , to the parent row's <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> index of the other manager. 
            </summary>
            <param propertyName="other"></param>
            <returns>
            A signed number indicating the relative values of this instance and value. 
            Return FilterActionValue Description: 
            Less than zero This instance is less than value. 
            Zero This instance is equal to value. 
            Greater than zero This instance is greater than value. -or- value is null. 
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.OnColumnLayoutPropertyChanged(Infragistics.Controls.Grids.ColumnLayout,System.String)">
            <summary>
            Raised when a property has changed on the ColumnLayout that this <see cref="T:Infragistics.Controls.Grids.RowsManager"/> represents.
            </summary>
            <param propertyName="layout"></param>
            <param propertyName="propertyName"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.OnColumnLayoutAssigned(Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Called when a ColumnLayout is assigned to this <see cref="T:Infragistics.Controls.Grids.RowsManager"/>.
            </summary>
            <param propertyName="layout"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.OnChildColumnLayoutRemoved(Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Raised when a <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> is removed from the owning ColumnLayout's Columns collection.
            </summary>
            <param propertyName="layout">The <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> being removed.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.OnChildColumnLayoutVisibilityChanged(Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Raised when a child <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> of the owning ColumnLayout, visibility changes.
            </summary>
            <param propertyName="layout">The <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> that had it's Visibility changed.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.InvalidateRows">
            <summary>
            Clears rows and child rows and lets the grid rerender.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.InvalidateTopAndBottomRows">
            <summary>
            Evaluates all header and footer rows, and determines if they should be hidden or visible.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.UnregisterRowsManager(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            When a RowsManager is no longer needed, this method should be called, to detach all events that are hooked up. 
            To avoid Memory leaks.
            </summary>
            <param name="removeColumnLayout">Whether the ColumnLayout should be removed, or just its events.</param>
            <param name="clearChildRowsManager">Whether the ChildRowsManager should be disposed of on each row.</param>
            <param name="clearSelection">Whether the selected items should be unselected</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.RefreshSummaries">
            <summary>
            Reevaluates the data for the summaries on the rows.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.OnColumnLayoutReset">
            <summary>
            Raised when the ColumnLayout wasn't removed, but it's data has been reset.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManager.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Infragistics.Controls.Grids.RowsManager"/> and optionally
            releases the managed resources.
            </summary>
            <param propertyName="disposing">
            true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="T:Infragistics.Controls.Grids.RowsManagerBase">
            <summary>
            The base class for managament of all <see cref="T:Infragistics.Controls.Grids.RowBase"/> objects of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.#ctor(Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/> class.
            </summary>
            <param propertyName="columnLayout">The <see cref="P:Infragistics.Controls.Grids.RowsManagerBase.ColumnLayout"/> that this <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/> represents.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManagerBase.ParentRow">
            <summary>
            The <see cref="P:Infragistics.Controls.Grids.RowsManagerBase.ParentRow"/> that owns this <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManagerBase.ColumnLayout">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.RowsManagerBase.ColumnLayout"/> object that is associated with the <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManagerBase.Level">
            <summary>
            Gets the level in the hierarchy of the <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManagerBase.Rows">
            <summary>
            Gets the collection of <see cref="T:Infragistics.Controls.Grids.RowBase"/> objects that this <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/> represents.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManagerBase.FullRowCount">
            <summary>
            Gets the total amount of rows that can be displayed for the <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.RowsManagerBase.VisibleChildManagers">
            <summary>
            Gets a list of currently visible child <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/> objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.InvalidateRows">
            <summary>
            Clears rows and child rows and lets the grid rerender.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.RefreshSummaries">
            <summary>
            Reevaluates the data for the summaries on the rows.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.ResolveRowForIndex(System.Int32)">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Grids.RowBase"/> for the given index. 
            </summary>
            <param propertyName="index">The index of the row to retrieve.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.ResolveIndexForRow(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Returns the index for a given row.
            </summary>
            <param propertyName="row">The row whose index should be returned.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.ResolveIndentation(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Returns the amount of indentation that should be allocated for the <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/>.
            </summary>
            <param propertyName="row">The row that is currently being indented.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.RegisterChildRowsManager(Infragistics.Controls.Grids.RowsManagerBase)">
            <summary>
            Adds the specified <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/> as a visible child manager, so that it will be considered
            in the rendering of rows.
            </summary>
            <param propertyName="manager"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.UnregisterChildRowsManager(Infragistics.Controls.Grids.RowsManagerBase)">
            <summary>
            Removes the specified <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/> as a visible child manager, so that it will no longer be considered
            in the rendering of rows.
            </summary>
            <param propertyName="manager"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.UnregisterAllChildRowsManager">
            <summary>
            Removes all visible child managers, so that they will no longer be considered
            in the rendering of rows.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.OnRegisteredAsVisibleChildManager">
            <summary>
            Invoked when a <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/> is now visible, meaning it's Parent row is expanded. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.OnUnregisteredAsVisibleChildManager">
            <summary>
            Invoked when a <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/> is no longer visible, meaning it's Parent row is collapsed. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.OnColumnLayoutAssigned(Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Called when the ColumnLayout assigned to this <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/> changes.
            </summary>
            <param propertyName="layout"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.OnColumnLayoutPropertyChanged(Infragistics.Controls.Grids.ColumnLayout,System.String)">
            <summary>
            Raised when a property has changed on the ColumnLayout that this <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/> represents.
            </summary>
            <param propertyName="layout"></param>
            <param propertyName="propertyName"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.OnChildColumnLayoutRemoved(Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Raised when a <see cref="P:Infragistics.Controls.Grids.RowsManagerBase.ColumnLayout"/> is removed from the owning ColumnLayout's Columns collection.
            </summary>
            <param propertyName="layout">The <see cref="P:Infragistics.Controls.Grids.RowsManagerBase.ColumnLayout"/> being removed.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.OnChildColumnLayoutAdded(Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Raised when a <see cref="P:Infragistics.Controls.Grids.RowsManagerBase.ColumnLayout"/> is added to the owning ColumnLayout's Columns collection.
            </summary>
            <param propertyName="layout">The <see cref="P:Infragistics.Controls.Grids.RowsManagerBase.ColumnLayout"/> being added.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.OnChildColumnLayoutVisibilityChanged(Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Raised when a child <see cref="P:Infragistics.Controls.Grids.RowsManagerBase.ColumnLayout"/> of the owning ColumnLayout, visibility changes.
            </summary>
            <param propertyName="layout">The <see cref="P:Infragistics.Controls.Grids.RowsManagerBase.ColumnLayout"/> that had it's Visibility changed.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.InvalidateData">
            <summary>
            Triggers all Data operations such as sorting and GroupBy to be invalidated. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.UnregisterRowsManager(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            When a RowsManager is no longer needed, this method should be called, to detach all events that are hooked up to avoid Memory leaks.
            </summary>
            <param name="removeColumnLayout">Whether the ColumnLayout should be removed, or just its events.</param>
            <param name="clearChildRowsManager">Whether the ChildRowsManager should be disposed of on each row.</param>
            <param name="clearSelection">Whether the selected items should be unselected</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.GetRowScopedConditions">
            <summary>
            Creates a collection of <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRuleProxy"/> objects scoped to <see cref="T:Infragistics.Controls.Grids.StyleScope"/>.Row.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.GetCellScopedConditions(System.String)">
            <summary>
            Creates a collection of <see cref="T:Infragistics.Controls.Grids.IConditionalFormattingRuleProxy"/> objects scoped to <see cref="T:Infragistics.Controls.Grids.StyleScope"/>.Cell for a given <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.SortVisibleChildManagers">
            <summary>
            Sorts the VisibleChildmanagers
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.OnColumnLayoutReset">
            <summary>
            Raised when the ColumnLayout wasn't removed, but it's data has been reset.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/> and optionally
            releases the managed resources.
            </summary>
            <param propertyName="disposing">
            true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.Dispose">
            <summary>
            Releases the unmanaged and managed resources used by the <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.RowsManagerBase.CompareTo(Infragistics.Controls.Grids.RowsManagerBase)">
            <summary>
            Should be overriden by a base class to determine which RowsManager should be displayed first.
            </summary>
            <param propertyName="other"></param>
            <returns>
            A signed number indicating the relative values of this instance and value. 
            Return FilterActionValue Description: 
            Less than zero This instance is less than value. 
            Zero This instance is equal to value. 
            Greater than zero This instance is greater than value. -or- value is null. 
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGridRowsManager">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.RowsManagerBase"/> that manages <see cref="T:Infragistics.Controls.Grids.Row"/> objects for the root level of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridRowsManager.#ctor(Infragistics.Controls.Grids.XamGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.XamGridRowsManager"/> class.
            </summary>
            <param propertyName="grid">The <see cref="T:Infragistics.Controls.Grids.XamGrid"/> that owns this <see cref="T:Infragistics.Controls.Grids.XamGridRowsManager"/></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridRowsManager.GroupByAreaRow">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.XamGridRowsManager.GroupByAreaRow"/> for this <see cref="T:Infragistics.Controls.Grids.XamGridRowsManager"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridRowsManager.GroupByAreaColumn">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByColumn"/> that represents all <see cref="T:Infragistics.Controls.Grids.Primitives.GroupByAreaCell"/> objects as this GroupByLevel.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridRowsManager.FooterSupported">
            <summary>
            Gets if the <see cref="T:Infragistics.Controls.Grids.RowsManager"/> supports showing the footer in the general rows body.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridRowsManager.HeaderSupported">
            <summary>
            Gets if the <see cref="T:Infragistics.Controls.Grids.RowsManager"/> supports showing the header in the general rows body.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridRowsManager.RegisterTopRow(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Registers a <see cref="T:Infragistics.Controls.Grids.RowBase"/> as a fixed row that should be displayed above all other rows, such as the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderRow"/>
            </summary>
            <param propertyName="row"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridRowsManager.RegisterBottomRow(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Registers a <see cref="T:Infragistics.Controls.Grids.RowBase"/> as a fixed row that should be displayed below all other rows, such as the <see cref="T:Infragistics.Controls.Grids.Primitives.FooterRow"/>
            </summary>
            <param propertyName="row"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridRowsManager.UnregisterTopRow(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Unregisters a <see cref="T:Infragistics.Controls.Grids.RowBase"/> that was registered to be displayed above of all other rows..
            </summary>
            <param propertyName="row"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridRowsManager.UnregisterBottomRow(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Unregisters a <see cref="T:Infragistics.Controls.Grids.RowBase"/> that was registered to be displayed below all other rows.
            </summary>
            <param propertyName="row"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridRowsManager.ResolveRowForIndex(System.Int32)">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Grids.RowBase"/> for the given index. 
            </summary>
            <param propertyName="index">The index of the row to retrieve.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridRowsManager.InvalidateGroupBy(System.Boolean)">
            <summary>
            Validates whether a <see cref="T:Infragistics.Controls.Grids.RowsManager"/> needs to group its rows.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridRowsManager.InvalidateGroupByAreaRowVisibility">
            <summary>
            Determines if the <see cref="P:Infragistics.Controls.Grids.XamGridRowsManager.GroupByAreaRow"/> should be visible, and registers/unregisters it accordingly.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridRowsManager.OnColumnLayoutPropertyChanged(Infragistics.Controls.Grids.ColumnLayout,System.String)">
            <summary>
            Raised when a property has changed on the ColumnLayout that this <see cref="T:Infragistics.Controls.Grids.XamGridRowsManager"/> represents.
            </summary>
            <param propertyName="layout"></param>
            <param propertyName="propertyName"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridRowsManager.InvalidateTopAndBottomRows">
            <summary>
            Evaluates all header and footer rows, and determines if they should be hidden or visible.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridRowsManager.OnCurrentItemChanged(System.Object)">
            <summary>
            Raised when the underlying data sources current item changes.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGridRowsManager.ResetAddNewRows(System.Boolean)">
            <summary>
            Assigns a new data object to the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/> object.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGrid">
            <summary>
            Displays data in a table like structure. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> when a new template is applied. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Silverlight automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "measure" pass of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity can be specified
            as a value to indicate the object will size to whatever content is available.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnInitialized(System.EventArgs)">
            <summary>
            Invoked when the control is first initialized.
            </summary>
            <param name="e">Provides information for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseEnter"/> event occurs.
            </summary>
            <param name="e">The data for the event</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeave"/> event occurs.
            </summary>
            <param name="e">The data for the event</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.GotFocus"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseMove"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Called when the MouseWheel is raised on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the LostMouseCapture event is raised.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.Columns">
            <summary>
            Gets a reference to all of the Columns on the root level of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.Rows">
            <summary>
            Gets the rows on the root level of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.ItemsSource"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.ItemsSource">
            <summary>
            Gets/sets the <see cref="T:System.Collections.IEnumerable"/> for the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
            <remarks>
            This property won't take effect until the Grid has Loaded.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.ColumnLayouts">
            <summary>
            Gets a collection of ColumnLayouts that will be used when setting up the data of 
            the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.MaxDepthProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.MaxDepth"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.MaxDepth">
            <summary>
            Gets/sets the maximum allowed depth of the hierarchy of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            This property is useful for when the data source provided as an infinite recursion.
            </summary>
            <remarks>
            This property is essentially zero based, as the root level would be considered a MaxDepth of 0. 
            For example: setting this property to 1, would mean that you would only have 1 level other than the root level. 
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.HeaderVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.HeaderVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.HeaderVisibility">
            <summary>
            Gets/sets the visibility of the Header for all ColumnLayouts in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.FooterVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.FooterVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.FooterVisibility">
            <summary>
            Gets/sets the visibility of the Footer for all ColumnLayouts in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.AutoGenerateColumnsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.AutoGenerateColumns"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.AutoGenerateColumns">
            <summary>
            Gets/sets whether the columns of all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects of this <see cref="T:Infragistics.Controls.Grids.XamGrid"/> should be generated if otherwise not specified.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.IndentationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.Indentation"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.Indentation">
            <summary>
            Gets/Sets the Indentation of all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in this <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.ColumnLayoutHeaderVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.ColumnLayoutHeaderVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.ColumnLayoutHeaderVisibility">
            <summary>
            Gets/sets when a header should be displayed for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in this <see cref="T:Infragistics.Controls.Grids.XamGrid"/>. 
            The header generally contains the propertyName of the data field that owns the collection that the <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> is displaying.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.IsAlternateRowsEnabledProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.IsAlternateRowsEnabled"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.IsAlternateRowsEnabled">
            <summary>
            Gets/sets whether Alternate Row styling is enabled.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.CellStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.CellStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.CellStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that will be applied to all <see cref="T:Infragistics.Controls.Grids.CellControl"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.HeaderStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.HeaderStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.HeaderStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that will be applied to all <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderCellControl"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.FooterStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.FooterStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.FooterStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that will be applied to all <see cref="T:Infragistics.Controls.Grids.Primitives.FooterCellControl"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.FixedRowSeparatorStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.FixedRowSeparatorStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.FixedRowSeparatorStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that will be applied <see cref="T:Infragistics.Controls.Grids.Primitives.FixedRowSeparator"/> objects that separate fixed rows in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.ChildBandHeaderStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.ChildBandHeaderStyle"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.ChildBandHeaderStyle">
            <summary>
            Gets/Sets the <see cref="T:System.Windows.Style"/> that will be applied to all <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBandCellControl"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.HeaderTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.ColumnsHeaderTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.ColumnsHeaderTemplate">
            <summary>
            Defines the <see cref="T:System.Windows.DataTemplate"/> that should be applied to every header in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.ColumnsFooterTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.ColumnsFooterTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.ColumnsFooterTemplate">
            <summary>
            Defines the <see cref="T:System.Windows.DataTemplate"/> that should be applied to every footer in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.RowSelectorSettings">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.XamGrid.RowSelectorSettings"/> object that controls all the properties of the <see cref="T:Infragistics.Controls.Grids.Primitives.RowSelectorColumn"/> of all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in this <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.ExpansionIndicatorSettings">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.XamGrid.ExpansionIndicatorSettings"/> object that controls all the properties of the <see cref="T:Infragistics.Controls.Grids.Primitives.ExpansionIndicatorColumn"/> of all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in this <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.AddNewRowSettings">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.XamGrid.AddNewRowSettings"/> object that controls all the properties of the <see cref="T:Infragistics.Controls.Grids.Primitives.AddNewRow"/> of all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in this <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.SummaryRowSettings">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.XamGrid.SummaryRowSettings"/> object that controls all the properties of the <see cref="T:Infragistics.Controls.Grids.Primitives.SummaryRow"/> of all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in this <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.FilteringSettings">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.XamGrid.FilteringSettings"/> object that controls all the properties of the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRow"/> of all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in this <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.ColumnMovingSettings">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.XamGrid.ColumnMovingSettings"/> object that controls all the properties concerning column moving of all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in this <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.EditingSettings">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.XamGrid.EditingSettings"/> object that controls all the properties concerning editing of all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in this <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.FixedColumnSettings">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.XamGrid.FixedColumnSettings"/> object that controls all the properties concerning locking <see cref="T:Infragistics.Controls.Grids.Column"/> objects to the left or right side of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.SortingSettings">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.XamGrid.SortingSettings"/> object that controls all the properties concerning sorting of all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in this <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.GroupBySettings">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.XamGrid.GroupBySettings"/> object that controls all the properties concerning organizing data of all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects by grouping their columns in this <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.PagerSettings">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.XamGrid.PagerSettings"/> object that controls all the properties concerning paging of all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in this <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.ActiveCell">
            <summary>
            Gets/sets the cell that is currently active. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.KeyboardNavigationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.KeyboardNavigation"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.KeyboardNavigation">
            <summary>
            Gets/Sets how keyboard navigation will work in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.SelectionSettings">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.XamGrid.SelectionSettings"/> object that controls all the properties of Selection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.DeferredScrollingSettings">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.XamGrid.DeferredScrollingSettings"/> object that controls all the properties of Deferred Scrolling.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.ColumnTypeMappings">
            <summary>
            Gets a collection of <see cref="T:Infragistics.Controls.Grids.ColumnTypeMapping"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
            <remarks>
            This collection should be used to map a specific data type to a certain Column type for the AutoGeneration of columns
            in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.ColumnResizingSettings">
            <summary>
            Gets a reference to the <see cref="P:Infragistics.Controls.Grids.XamGrid.ColumnResizingSettings"/> object that controls all the properties concerning column resizing of all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in this <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.RowHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.RowHeight"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.RowHeight">
            <summary>
            Gets/Sets the Height that will be applied to every row in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.MinimumRowHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.MinimumRowHeight"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.MinimumRowHeight">
            <summary>
            Gets/Sets the Minimum Height for every <see cref="T:Infragistics.Controls.Grids.RowBase"/> for every <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
            <remarks>
            This value is ignored if RowHeight is of Type Numeric.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.DeleteKeyActionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.DeleteKeyAction"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.DeleteKeyAction">
            <summary>
            Gets/Sets the action that should be taken when the Delete Key is pressed for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.HeaderRowHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.HeaderRowHeight"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.HeaderRowHeight">
            <summary>
            Gets/Sets the <see cref="P:Infragistics.Controls.Grids.XamGrid.RowHeight"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.HeaderRow"/> for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.FooterRowHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.FooterRowHeight"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.FooterRowHeight">
            <summary>
            Gets/Sets the <see cref="P:Infragistics.Controls.Grids.XamGrid.RowHeight"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.FooterRow"/> for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.ChildBandHeaderHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.ChildBandHeaderHeight"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.ChildBandHeaderHeight">
            <summary>
            Gets/Sets the <see cref="P:Infragistics.Controls.Grids.XamGrid.RowHeight"/> for the <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBand"/> for all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.ColumnWidthProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.ColumnWidth"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.ColumnWidth">
            <summary>
            Gets/Sets the Width that will be applied to every <see cref="T:Infragistics.Controls.Grids.Column"/> in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.RowHoverProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.RowHover"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.RowHover">
            <summary>
            Gets/Sets what should happen when the mouse is over a <see cref="T:Infragistics.Controls.Grids.Row"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.FillerColumnSettings">
            <summary>
            Gets an object that contains settings that pertain to the <see cref="T:Infragistics.Controls.Grids.Primitives.FillerColumn"/> of all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.HeaderTextHorizontalAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.HeaderTextHorizontalAlignment"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.HeaderTextHorizontalAlignment">
            <summary>
            Gets/sets  the <see cref="T:System.Windows.HorizontalAlignment"/> of the content for each <see cref="T:Infragistics.Controls.Grids.Column"/> in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.HeaderTextVerticalAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.HeaderTextVerticalAlignment"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.HeaderTextVerticalAlignment">
            <summary>
            Gets/sets  the <see cref="T:System.Windows.VerticalAlignment"/> of the content for each <see cref="T:Infragistics.Controls.Grids.Column"/> in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.ConditionalFormattingSettings">
            <summary>
            Gets an object that contains settings that pertain to the Conditional Formatting of all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.ColumnChooserSettings">
            <summary>
            Gets an object that contains settings that pertain to the ColumnChooser of all <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> objects of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.ClipboardSettings">
            <summary>
            Gets an object that contains settings that pertain to Clipboard actions.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.ActiveItemProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.ActiveItem"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.ActiveItem">
            <summary>
            Gets/sets the underlying data object of the <see cref="P:Infragistics.Controls.Grids.XamGrid.ActiveCell"/>.
            </summary>
            <remarks>
            If a <see cref="T:Infragistics.Controls.Grids.Cell"/> in a childband is the ActiveCell, the ActiveItem will be null.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.DataManagerProvider">
            <summary>
            Gets/Sets the <see cref="P:Infragistics.Controls.Grids.XamGrid.DataManagerProvider"/> that should be used when generating a <see cref="T:Infragistics.DataManagerBase"/> that should be
            used to handle the data.
            </summary>
            <remarks>
            This should only be set at design time, or before an ItemsSource has been set. Otherwise, the property will be ignored.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.IsTouchSupportEnabledProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.IsTouchSupportEnabled"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.IsTouchSupportEnabled">
            <summary>
            Returns or sets whether touch support is enabled for this control
            </summary>
            <seealso cref="F:Infragistics.Controls.Grids.XamGrid.IsTouchSupportEnabledProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.CellControlGenerationModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.CellControlGenerationMode"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.CellControlGenerationMode">
            <summary>
            Returns or sets an enumeration used to control how <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> instances are reused within a <see cref="T:Infragistics.Controls.Grids.Primitives.CellsPanel"/>
            </summary>
            <seealso cref="F:Infragistics.Controls.Grids.XamGrid.CellControlGenerationModeProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.MinimumNumberOfColumnsRendered">
            <summary>
            The minimum numbers of columns that will be rendered. The default number is 0, which means that only the columns in view will be rendered.
            </summary>
            <remarks>
            We always render only the columns that are currently in view. However in some cases, where you have columns with vastly different widths, it may help to prerender a certain number of them.
            With this property you can specify how many columns in the very least will be rendered, so that they can be pre-measured instead of virtualized.
            Also note that setting this property to a higher value will cause a performance hit. Use this property only when you have evidence that you actually need it.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGrid.MinimumNumberOfColumnsRenderedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.XamGrid.MinimumNumberOfColumnsRendered"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnMinimumNumberOfColumnsRenderedChanged(System.Int32,System.Int32)">
            <summary>
            Called when the <see cref="P:Infragistics.Controls.Grids.XamGrid.MinimumNumberOfColumnsRendered"/> property has been changed.
            </summary>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.VerticalScrollBar">
            <summary>
            Gets a reference to the vertical scrollbar that is attached to the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            If a vertical scrollbar was not specified, this property will return null.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.HorizontalScrollBar">
            <summary>
            Gets a reference to the horizontal scrollbar that is attached to the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            If a horizontal scrollbar was not specified, this property will return null.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.RowsManager">
            <summary>
            Gets a reference to the RowsManager that is used by the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.CurrentEditCell">
            <summary>
            Gets/sets the <see cref="T:Infragistics.Controls.Grids.Cell"/> that is currently in edit mode.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.CurrentEditRow">
            <summary>
            Gets/sets the <see cref="T:Infragistics.Controls.Grids.Row"/> that is currently in edit mode.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.Panel">
            <summary>
            The visual container that holds the rows.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.DropAreaIndicatorLeft">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.Primitives.DropAreaIndicator"/> that is displayed when pinning a column left by dragging.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.DropAreaIndicatorRight">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.Primitives.DropAreaIndicator"/> that is displayed when pinning a column right by dragging.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.MouseOverCell">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Grids.CellBase"/> that the mouse is currently over.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.DeferredScrollingPopup">
            <summary>
            Gets the <see cref="T:System.Windows.Controls.Primitives.Popup"/> used for DeferredScrolling.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.IsColumnResizing">
            <summary>
            Gets / sets if there is currently a cell being resized.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.FilterIcons">
            <summary>
            Gets the dictionary mapping the Filter ComparisonOperator to DataTemplate which act as Icons.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.SuspendConditionalFormatUpdates">
            <summary>
            Gets / set if the conditional formatting needs to be updated.
            </summary>
            <remarks>
            This is intended to be used during editing, so that the cell can update it's value and notify the grid that the change should be noted 
            by conditional formatting.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.NeedConditionalFormatUpdate">
            <summary>
            True if the NotifyPropertyChanged from the object was raised and we need an update.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.ColumnChooserDialog">
            <summary>
            Gets the <see cref="P:Infragistics.Controls.Grids.XamGrid.ColumnChooserDialog"/> that is used to show/hide Columns at different levels of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.RenderAdorners">
            <summary>
            Gets a list of <see cref="T:Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner"/> that will plug into the RowsPanel and perform custom renderings.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.LastKeyDown">
            <summary>
            Stores the key from the last KeyDown event recieved by a cell.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.InvalidateScrollPanel(System.Boolean)">
            <summary>
            Invalidates the content of the <see cref="T:Infragistics.Controls.Grids.Primitives.RowsPanel"/>.
            </summary>
            <param name="reset">True if the internal scroll information should be invalidated.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.InvalidateScrollPanel(System.Boolean,System.Boolean)">
            <summary>
            Invalidates the content of the <see cref="T:Infragistics.Controls.Grids.Primitives.RowsPanel"/>.
            </summary>
            <param name="reset">True if the internal scroll information should be invalidated.</param>
            <param name="resetVisibleRows">True if the visible rows should be released.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.InvalidateScrollPanel(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Invalidates the content of the <see cref="T:Infragistics.Controls.Grids.Primitives.RowsPanel"/>.
            </summary>
            <param name="reset">True if the internal scroll information should be invalidated.</param>
            <param name="resetScrollPosition">True if the grid should return to a zero horizontal and zero vertical position.</param>
            <param name="resetVisibleRows">True if the visible rows should be released.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.InvalidateScrollPanel(System.Boolean,System.Boolean,System.Boolean,Infragistics.Controls.Grids.EmptyDelegate,System.Boolean)">
            <summary>
            Invalidates the content of the <see cref="T:Infragistics.Controls.Grids.Primitives.RowsPanel"/>.
            </summary>
            <param name="reset">True if the internal scroll information should be invalidated.</param>
            <param name="resetScrollPosition">True if the grid should return to a zero horizontal and zero vertical position.</param>
            <param name="resetVisibleRows">True if the visible rows should be released.</param>
            <param name="callback">Callback invoked after the scroll panel is invalidated.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.ResetPanelRows">
            <summary>
            Tells the panel that it should recycle all of it's rows, so that i can be completely reloaded. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.ResetPanelRows(System.Boolean)">
            <summary>
            Tells the panel that it should recycle all of it's rows, so that it can be completely reloaded. 
            </summary>
            <param name="releaseCellsPanels">True if the CellsPanels should be released by the RecyclingManager.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.SelectRow(Infragistics.Controls.Grids.Row,Infragistics.Controls.Grids.InvokeAction)">
            <summary>
            Selects the specified <see cref="T:Infragistics.Controls.Grids.Row"/>.
            </summary>
            <param name="row">The row that should be selected.</param>
            <param name="action">The action that invoked the selection.</param>
            <returns>Whether something occurred during the selecting of the row that should interrupt the selection.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.UnselectRow(Infragistics.Controls.Grids.Row)">
            <summary>
            Unselects the specified row. 
            </summary>
            <param name="row"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.SelectCell(Infragistics.Controls.Grids.Cell,Infragistics.Controls.Grids.InvokeAction)">
            <summary>
            Selects the specified <see cref="T:Infragistics.Controls.Grids.Cell"/>.
            </summary>
            <param name="cell">The cell that should be selected.</param>
            <param name="action">The action that invoked the selection.</param>
            <returns>Whether something occurred during the selecting of the cell that should interrupt the selection.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.UnselectCell(Infragistics.Controls.Grids.Cell)">
            <summary>
            Unselects the specified cell. 
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.SetActiveCell(Infragistics.Controls.Grids.CellBase,Infragistics.Controls.Grids.CellAlignment,Infragistics.Controls.Grids.InvokeAction)">
            <summary>
            Actually sets the <see cref="P:Infragistics.Controls.Grids.XamGrid.ActiveCell"/> of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
            <remarks> The ActiveCell must be a <see cref="T:Infragistics.Controls.Grids.Cell"/> or <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBandCell"/>
            If both alignedTop and bottom are set, aligned top will win. 
            </remarks>
            <param name="cell">The <see cref="T:Infragistics.Controls.Grids.CellBase"/> that should be marked as Active</param>
            <param name="alignment">If the active cell should be aligned to the top or bottom. </param>
            <param name="action">The action that caused this method to be invoked. </param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.SetActiveCell(Infragistics.Controls.Grids.CellBase,Infragistics.Controls.Grids.CellAlignment,Infragistics.Controls.Grids.InvokeAction,System.Boolean)">
            <summary>
            Actually sets the <see cref="P:Infragistics.Controls.Grids.XamGrid.ActiveCell"/> of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
            <remarks> The ActiveCell must be a <see cref="T:Infragistics.Controls.Grids.Cell"/> or <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBandCell"/>
            If both alignedTop and bottom are set, aligned top will win. 
            </remarks>
            <param name="cell">The <see cref="T:Infragistics.Controls.Grids.CellBase"/> that should be marked as Active</param>
            <param name="alignment">If the active cell should be aligned to the top or bottom. </param>
            <param name="action">The action that caused this method to be invoked. </param>
            <param name="allowSelection">If selection should occur when setting the active cell.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.SetActiveCell(Infragistics.Controls.Grids.CellBase,Infragistics.Controls.Grids.CellAlignment,Infragistics.Controls.Grids.InvokeAction,System.Boolean,System.Boolean)">
            <summary>
            Actually sets the <see cref="P:Infragistics.Controls.Grids.XamGrid.ActiveCell"/> of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
            <remarks> The ActiveCell must be a <see cref="T:Infragistics.Controls.Grids.Cell"/> or <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBandCell"/>
            If both alignedTop and bottom are set, aligned top will win. 
            </remarks>
            <param name="cell">The <see cref="T:Infragistics.Controls.Grids.CellBase"/> that should be marked as Active</param>
            <param name="alignment">If the active cell should be aligned to the top or bottom. </param>
            <param name="action">The action that caused this method to be invoked. </param>
            <param name="allowSelection">If selection should occur when setting the active cell.</param>
            <param name="scrollIntoView">Determines if the cell should be scrolled into view</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.SetActiveCell(Infragistics.Controls.Grids.CellBase,Infragistics.Controls.Grids.CellAlignment,Infragistics.Controls.Grids.InvokeAction,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Actually sets the <see cref="P:Infragistics.Controls.Grids.XamGrid.ActiveCell"/> of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
            <remarks> The ActiveCell must be a <see cref="T:Infragistics.Controls.Grids.Cell"/> or <see cref="T:Infragistics.Controls.Grids.Primitives.ChildBandCell"/>
            If both alignedTop and bottom are set, aligned top will win. 
            </remarks>
            <param name="cell">The <see cref="T:Infragistics.Controls.Grids.CellBase"/> that should be marked as Active</param>
            <param name="alignment">If the active cell should be aligned to the top or bottom. </param>
            <param name="action">The action that caused this method to be invoked. </param>
            <param name="allowSelection">If selection should occur when setting the active cell.</param>
            <param name="setFocus"> Determines if focus should be set to the cell.</param>
            <param name="scrollIntoView">Determines if the cell should be scrolled into view</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.SelectColumn(Infragistics.Controls.Grids.Column,Infragistics.Controls.Grids.InvokeAction)">
            <summary>
            Selects the specified <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
            <param name="column">The Column that should be selected.</param>
            <param name="action">The action that invoked the selection.</param>
            <returns>Whether something occurred during the selecting of the Column that should interrupt the selection.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.UnselectColumn(Infragistics.Controls.Grids.Column)">
            <summary>
            Unselects the specified Column. 
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.EnterEditModeInternal(Infragistics.Controls.Grids.Row,Infragistics.Controls.Grids.Cell)">
            <summary>
            Places the specified <see cref="T:Infragistics.Controls.Grids.Row"/> or <see cref="T:Infragistics.Controls.Grids.Cell"/> into edit mode.
            </summary>
            <param name="row">If not specific the cell will be put into edit mode.</param>
            <param name="cell">If both this and the row are specified, the row will be put into edit mode, starting with this cell.</param>
            <returns>True if the <see cref="T:Infragistics.Controls.Grids.Cell"/> was able to enter edit mode.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.EnterCellToEditModeInternalRow(Infragistics.Controls.Grids.Cell,System.Boolean)">
            <summary>
            For rows in edit mode, this displays the editor in the specified cell.
            </summary>
            <param name="cell"></param>
            <param name="currentEditCell">Whether this cell is actually in edit mode.</param>
            <returns>True if a cell was put into edit mode.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.ExitCellFromEditModeInternalRow(System.Boolean)">
            <summary>
            When rows are in edit mode, this method removes the current cell from edit mode, but leaves the editor inside of it.
            </summary>
            <returns>True if the operation was successful</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.ExitEditModeInternal(System.Boolean)">
            <summary>
            Processes a request to stop editing of a cell.
            </summary>
            <param name="cancel">True if the input value should be discarded and the original value restored.</param>
            <returns>False if the CellExitingEditMode event is cancelled, stopping the exiting of edit mode.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.IsDependancyObjectInsideGrid(System.Windows.DependencyObject)">
            <summary>
            Returns true if a control is inside of the grid
            </summary>
            <param name="control">the control</param>
            <returns>true if a control is inside of the grid; otherwise, false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.RegisterRenderAdorners(System.Collections.Generic.List{Infragistics.Controls.Grids.Primitives.XamGridRenderAdorner})">
            <summary>
            Allows derived classes to insert their own custom XamGridRenderAdorner that plug into the RowsPanel.
            </summary>
            <param name="adorners"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.SupportsCommand(System.Windows.Input.ICommand)">
            <summary>
            Returns if the object will support a given command type.
            </summary>
            <param name="command">The command to be validated.</param>
            <returns>
            True if the object recognizes the command as actionable against it.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.GetParameter(Infragistics.Controls.CommandSource)">
            <summary>
            Returns the object that defines the parameters necessary to execute the command.
            </summary>
            <param name="source">The CommandSource object which defines the command to be executed.</param>
            <returns>
            The object necessary for the command to complete.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.ScrollCellIntoView(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Scrolls the specified cell into view. 
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.EnterEditMode">
            <summary>
            Places the <see cref="T:Infragistics.Controls.Grids.Cell"/> that is currently active, into edit mode.
            </summary>
            <returns>True if the <see cref="T:Infragistics.Controls.Grids.Cell"/> was able to enter edit mode. </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.EnterEditMode(Infragistics.Controls.Grids.CellBase)">
            <summary>
            Places the specified <see cref="T:Infragistics.Controls.Grids.Cell"/> into edit mode.
            </summary>
            <param name="cell"></param>
            <returns>True if the <see cref="T:Infragistics.Controls.Grids.Cell"/> was able to enter edit mode. </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.EnterEditMode(Infragistics.Controls.Grids.Row)">
             <summary>
             Puts the specified <see cref="T:Infragistics.Controls.Grids.Row"/> into edit mode.
             </summary>
             <param name="row"></param>
            <remarks>If there are no editable cells, the row will not enter edit mode.</remarks>
             <returns>True if the <see cref="T:Infragistics.Controls.Grids.Row"/> was able to enter edit mode. </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.EnterEditMode(Infragistics.Controls.Grids.Row,Infragistics.Controls.Grids.CellBase)">
            <summary>
            Puts the specified <see cref="T:Infragistics.Controls.Grids.Cell"/> and <see cref="T:Infragistics.Controls.Grids.Row"/> into edit mode.
            </summary>
            <param name="row"></param>
            <param name="cell"></param>
            <remarks>The <see cref="T:Infragistics.Controls.Grids.Cell"/> must be in the <see cref="T:Infragistics.Controls.Grids.Row"/>'s cells collection.</remarks>
            <returns>True if the <see cref="T:Infragistics.Controls.Grids.Row"/> and <see cref="T:Infragistics.Controls.Grids.Cell"/> were able to enter edit mode. </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.ExitEditMode(System.Boolean)">
            <summary>
            If a <see cref="T:Infragistics.Controls.Grids.Cell"/> is currently in edit mode, it removes it from edit mode.
            </summary>
            <param name="cancel">Whether or not the value that has been entered should be ignored.</param>
            <returns>False if the editor could not exit edit mode, due to the cancelation in the <see cref="E:Infragistics.Controls.Grids.XamGrid.CellExitingEditMode"/> event. </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.InvalidateData(System.Boolean)">
            <summary>
            Triggers all Data operations such as sorting and GroupBy to be invalidated. 
            </summary>
            <param name="allColumnLayouts">True to invalidate data for all <see cref="P:Infragistics.Controls.Grids.XamGrid.ColumnLayouts"/> Flase to invalidate date on the root columnLayout</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.ShowColumnChooser">
            <summary>
            Shows the <see cref="P:Infragistics.Controls.Grids.XamGrid.ColumnChooserDialog"/> for the root level of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.ShowColumnChooser(System.Windows.Point)">
            <summary>
            Shows the <see cref="P:Infragistics.Controls.Grids.XamGrid.ColumnChooserDialog"/> for the root level of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
            <param name="initialLocation">The initial location of the ColumnChoooserDialog. The point is relateive to the <see cref="T:Infragistics.Controls.Grids.XamGrid"/></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.ShowColumnChooser(Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Shows the <see cref="P:Infragistics.Controls.Grids.XamGrid.ColumnChooserDialog"/> for the specified <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
            <param name="layout">The ColumnLayout that should be used to populate the ColumnChooserDialog</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.ShowColumnChooser(Infragistics.Controls.Grids.ColumnLayout,System.Windows.Point)">
            <summary>
            Shows the <see cref="P:Infragistics.Controls.Grids.XamGrid.ColumnChooserDialog"/> for the specified <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/>.
            </summary>
            <param name="layout">The ColumnLayout that should be used to populate the ColumnChooserDialog</param>
            <param name="initialLocation">The initial location of the ColumnChoooserDialog. The point is relateive to the <see cref="T:Infragistics.Controls.Grids.XamGrid"/></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.ShowColumnChooser(Infragistics.Controls.Grids.Column)">
            <summary>
            Shows the <see cref="P:Infragistics.Controls.Grids.XamGrid.ColumnChooserDialog"/> for the specified <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
            <param name="column">The column must have children columns such as a <see cref="T:Infragistics.Controls.Grids.GroupColumn"/> in order to display the dialog.</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.ShowColumnChooser(Infragistics.Controls.Grids.Column,System.Windows.Point)">
            <summary>
            Shows the <see cref="P:Infragistics.Controls.Grids.XamGrid.ColumnChooserDialog"/> for the specified <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
            <param name="column">The column must have children columns such as a <see cref="T:Infragistics.Controls.Grids.GroupColumn"/> in order to display the dialog.</param>
            <param name="initialLocation">The initial location of the ColumnChoooserDialog. The point is relateive to the <see cref="T:Infragistics.Controls.Grids.XamGrid"/></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.HideColumnChooser">
            <summary>
            Hides the <see cref="P:Infragistics.Controls.Grids.XamGrid.ColumnChooserDialog"/> if it's currently being displayed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.PageUpCallback">
            <summary>
            Since we actually need to perform a measure halfway through the calculation of the
            cell that should be set as the ActiveCell in a PageUp operation, we have a  callback
            method that allows us to finish the calculation when the layout operation is complete.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.PageUpActivateCellInRowRange(System.Int32,System.Int32)">
            <summary>
            Activates a cell in given row range.
            </summary>
            <param name="indexOfFirst">The index of first row in the range.</param>
            <param name="indexOfLast">The index of last row in the range.</param>
            <returns>true if a cell was activated; otherwise, false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.PageDownCallback">
            <summary>
            Since we actually need to perform a measure halfway through the calculation of the
            cell that should be set as the ActiveCell in a PageDown operation, we have a  callback
            method that allows us to finish the calculation when the layout operation is complete.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.PageDownActivateCellInRowRange(System.Int32,System.Int32)">
            <summary>
            Activates a cell in given row range.
            </summary>
            <param name="indexOfFirst">The index of first row in the range.</param>
            <param name="indexOfLast">The index of last row in the range.</param>
            <returns>true if a cell was activated; otherwise, false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.GetCellFromSource(System.Windows.DependencyObject)">
            <summary>
             Walks up the parent chain of the specified until an <see cref="T:Infragistics.Controls.Grids.Primitives.CellControlBase"/> is found.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.CopyToClipboard">
            <summary>
            Copies data to the clipboard
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.PasteFromClipboard">
            <summary>
            Pastes data from the clipboard
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.EscapeSpecialSymbols(System.String)">
            <summary>
            Escapes all special characters.
            </summary>
            <param name="s">The string that will be converted.</param>
            <returns>The converted string</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.RaiseCellExitedEditModeRespectingFocus(Infragistics.Controls.Grids.Cell)">
            <summary>
            Raise CellExitedEditMode event while monitoring the keyboard focus. If the event handler steals the focus from the control - set a flag.
            </summary>
            <param name="cell">The cell which exits from edit mode</param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.ShouldAddColumnLayouts(Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Returns a boolean indicating if the RowsManager should add in ColumnLayout instances for any DataField's for a Columnlayout that doesn't support autogenerated columns.
            </summary>
            <param name="columnLayout">The column layout being initialized</param>
            <returns>Returns true to indicate that the DataField's should be enumerated to determine if there are any ColumnLayouts that need to be added into the ColumnLayout being initialized.</returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.RegisterResources(System.String,System.Reflection.Assembly)">
            <summary>
            Adds an additonal Resx file in which the control will pull its resources from.
            </summary>
            <param name="name">The name of the embedded resx file that contains the resources to be used.</param>
            <param name="assembly">The assembly in which the resx file is embedded.</param>
            <remarks>Don't include the extension of the file, but prefix it with the default Namespace of the assembly.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.UnregisterResources(System.String)">
            <summary>
            Removes a previously registered resx file.
            </summary>
            <param name="name">The name of the embedded resx file that was used for registration.</param>
            <remarks>
            Note: this won't have any effect on controls that are already in view and are already displaying strings.
            It will only affect any new controls created.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> and optionally
            releases the managed resources.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.Dispose">
            <summary>
            Releases the unmanaged and managed resources used by the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.PropertyChanged">
            <summary>
            Fired when a property changes on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnPropertyChanged(System.String)">
            <summary>
            Invoked when a property changes on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> object.
            </summary>
            <param name="name">The name of the property that has changed.</param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.PageIndexChanging">
            <summary>
            Event raised prior to a new page index being assigned.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnPageIndexChanging(System.Int32,System.Int32,Infragistics.Controls.Grids.RowCollection,Infragistics.Controls.Grids.ColumnLayout)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.PageIndexChanging"/> event.
            </summary>
            <param name="newPageIndex">the index of the new page to be selected</param>
            <param name="level">The <see cref="P:Infragistics.Controls.Grids.XamGrid.RowsManager"/> level value for the <see cref="T:Infragistics.Controls.Grids.RowCollection"/></param>
            <param name="rows">The <see cref="T:Infragistics.Controls.Grids.RowCollection"/> which is being paged. </param>
            <param name="layout">The <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> of the rows collection.</param>
            <returns></returns>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.PageIndexChanged">
            <summary>
            This event is raised before the PageIndex of a particular data island has changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnPageIndexChanged(System.Int32)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.PageIndexChanged"/> event.
            </summary>
            <param name="oldPageIndex"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.ColumnSorting">
            <summary>
            The ColumnSorting event is raised when the user changes the sort on the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> via the GUI.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnColumnSorting(Infragistics.Controls.Grids.Column,Infragistics.Controls.Grids.SortDirection)">
            <summary>
            Raised when a column is sorted via the user interface.
            </summary>
            <param name="sortDirection">The new <see cref="T:Infragistics.Controls.Grids.SortDirection"/> to be assigned to the column.</param>
            <param name="sortedColumn">The <see cref="T:Infragistics.Controls.Grids.Column"/> being sorted.</param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.ColumnSorted">
            <summary>
            The ColumnSorted event is raised after the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> has completed its sort.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnColumnSorted(Infragistics.Controls.Grids.Column,Infragistics.Controls.Grids.SortDirection)">
            <summary>
            Raised after the sort is applied to the XamGrid.
            </summary>
            <param name="sortDirection">The old <see cref="T:Infragistics.Controls.Grids.SortDirection"/> that was assigned to the column.</param>
            <param name="sortedColumn">The <see cref="T:Infragistics.Controls.Grids.Column"/> that was sorted.</param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.ActiveCellChanging">
            <summary>
            The <see cref="E:Infragistics.Controls.Grids.XamGrid.ActiveCellChanging"/> event is raised before the currently <see cref="P:Infragistics.Controls.Grids.XamGrid.ActiveCell"/> is changed. 
            </summary>
            <remarks>
            This event is Cancellable.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnActiveCellChanging(Infragistics.Controls.Grids.ActiveCellChangingEventArgs)">
            <summary>
            Raised before the currently <see cref="P:Infragistics.Controls.Grids.XamGrid.ActiveCell"/> is changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.ActiveCellChanged">
            <summary>
            The <see cref="E:Infragistics.Controls.Grids.XamGrid.ActiveCellChanged"/> event is raised after the <see cref="P:Infragistics.Controls.Grids.XamGrid.ActiveCell"/> has changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnActiveCellChanged">
            <summary>
            Raised after the <see cref="P:Infragistics.Controls.Grids.XamGrid.ActiveCell"/> has changed.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.SelectedCellsCollectionChanged">
            <summary>
            The <see cref="E:Infragistics.Controls.Grids.XamGrid.SelectedCellsCollectionChanged"/> event is raised after a <see cref="T:Infragistics.Controls.Grids.Cell"/> has been added or removed to the SelectedCells collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnSelectedCellsCollectionChanged(Infragistics.Controls.Grids.SelectedCellsCollection,Infragistics.Controls.Grids.SelectedCellsCollection)">
            <summary>
            Raised after the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>'s <see cref="T:Infragistics.Controls.Grids.SelectedCellsCollection"/> has changed.
            </summary>
            <param name="previouslySelectedCells"></param>
            <param name="newSelectedCells"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.SelectedRowsCollectionChanged">
            <summary>
            The <see cref="E:Infragistics.Controls.Grids.XamGrid.SelectedRowsCollectionChanged"/> event is raised after a <see cref="T:Infragistics.Controls.Grids.Row"/> has been added or removed to the SelectedRows collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnSelectedRowsCollectionChanged(Infragistics.Controls.Grids.SelectedRowsCollection,Infragistics.Controls.Grids.SelectedRowsCollection)">
            <summary>
            Raised after the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>'s <see cref="T:Infragistics.Controls.Grids.SelectedRowsCollection"/> has changed.
            </summary>
            <param name="previouslySelectedRows"></param>
            <param name="newSelectedRows"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.SelectedColumnsCollectionChanged">
            <summary>
            The <see cref="E:Infragistics.Controls.Grids.XamGrid.SelectedColumnsCollectionChanged"/> event is raised after a <see cref="T:Infragistics.Controls.Grids.Column"/> has been added or removed to the SelectedColumns collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnSelectedColumnsCollectionChanged(Infragistics.Controls.Grids.SelectedColumnsCollection,Infragistics.Controls.Grids.SelectedColumnsCollection)">
            <summary>
            Raised after the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>'s <see cref="T:Infragistics.Controls.Grids.SelectedColumnsCollection"/> has changed.
            </summary>
            <param name="previouslySelectedColumns"></param>
            <param name="newSelectedColumns"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.CellControlAttached">
            <summary>
            This event is raised when a <see cref="T:Infragistics.Controls.Grids.Cell"/> comes into the viewport of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
            <remarks>
            This event is useful for updating the style of a cell conditionally. 
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnCellControlAttached(Infragistics.Controls.Grids.Cell)">
            <summary>
            Raised when a Cell comes into the Viewport of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
            <param name="cell">The cell that has come into view.</param>
            <returns>True if the control attached to the cell should be disposed of when it leaves the viewport.</returns>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.InitializeRow">
            <summary>
            This event is raised when a <see cref="T:Infragistics.Controls.Grids.Row"/> is created.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnInitializeRow(Infragistics.Controls.Grids.Row)">
            <summary>
            Raised when a Row is created.
            </summary>
            <param name="row">The row that was just created.</param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.RowSelectorClicked">
            <summary>
            This event is raised when a RowSelector is clicked.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnRowSelectorClicked(Infragistics.Controls.Grids.RowBase)">
            <summary>
            Raised when a RowSelector is clicked.
            </summary>
            <param name="row">The row whose rowselector was just clicked.</param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.CellClicked">
            <summary>
            This event is raised when a <see cref="T:Infragistics.Controls.Grids.Cell"/> is clicked.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnCellClicked(Infragistics.Controls.Grids.Cell)">
            <summary>
            Raised when a <see cref="T:Infragistics.Controls.Grids.Cell"/> is clicked.
            </summary>
            <param name="cell">The cell that was clicked.</param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.CellDoubleClicked">
            <summary>
            This event is raised when a <see cref="T:Infragistics.Controls.Grids.Cell"/> is double clicked.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnCellDoubleClicked(Infragistics.Controls.Grids.Cell)">
            <summary>
            Raised when a <see cref="T:Infragistics.Controls.Grids.Cell"/> is double clicked.
            </summary>
            <param name="cell">The cell that was double clicked.</param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.ColumnResizing">
            <summary>
            Event raised when a user initiated column resizing is begun.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnColumnResizing(System.Collections.ObjectModel.Collection{Infragistics.Controls.Grids.Column},System.Double)">
            <summary>
            Raised when a user driven resizing is begun.
            </summary>
            <param name="columns"></param>
            <param name="newWidth"></param>
            <returns></returns>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.ColumnResized">
            <summary>
            Event raised when a user driven resizing is completed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnColumnResized(System.Collections.ObjectModel.Collection{Infragistics.Controls.Grids.Column})">
            <summary>
            Raised when a resizing is completed.
            </summary>
            <param name="columns"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.ColumnFixedStateChanging">
            <summary>
            This event is raised when a <see cref="T:Infragistics.Controls.Grids.Column"/>'s fixed state is changing.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnColumnFixedStateChanging(Infragistics.Controls.Grids.Column,Infragistics.Controls.Grids.FixedState)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.ColumnFixedStateChanging"/> event.
            </summary>
            <param name="column">The column whose fixed state is changing.</param>
            <param name="newState">The state that the column is changing to.</param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.ColumnFixedStateChanged">
            <summary>
            This event is raised when a <see cref="T:Infragistics.Controls.Grids.Column"/>'s fixed state has changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnColumnFixedStateChanged(Infragistics.Controls.Grids.Column,Infragistics.Controls.Grids.FixedState)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.ColumnFixedStateChanged"/> event.
            </summary>
            <param name="column">The column whose fixed state has changed.</param>
            <param name="previous">The state that the column previously was.</param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.ColumnLayoutAssigned">
            <summary>
            This event is raised when a <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> is assigned to an Island of rows. 
            </summary>
            <remarks>
            A developer can change the ColumnLayout being used by assigning a different ColumnLayout to the <see cref="P:Infragistics.Controls.Grids.ColumnLayoutAssignedEventArgs.ColumnLayout"/> property
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnColumnLayoutAssigned(Infragistics.Controls.Grids.ColumnLayoutAssignedEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.ColumnLayoutAssigned"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.RowExpansionChanging">
            <summary>
            This event is raised when a row is expanding or collapsing.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnRowExpansionChanging(Infragistics.Controls.Grids.Primitives.ExpandableRowBase)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.RowExpansionChanging"/> event.
            </summary>
            <param name="row">The row that is being expanded or collapsed</param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.RowExpansionChanged">
            <summary>
            This event is raised when a row is expanded or collapsed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnRowExpansionChanged(Infragistics.Controls.Grids.Primitives.ExpandableRowBase)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.RowExpansionChanged"/> event.
            </summary>
            <param name="row">The row that was just expanded or collapsed</param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.ColumnDragStart">
            <summary>
            This event is raised when a column drag operation is about to begin.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnColumnDragStart(Infragistics.Controls.Grids.Column)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.ColumnDragStart"/> event.
            </summary>
            <param name="column"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.ColumnMoving">
            <summary>
            This event is raised when the mouse moves while dragging a <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnColumnMoving(Infragistics.Controls.Grids.Column,Infragistics.Controls.Grids.Primitives.HeaderCellControl,System.Windows.Input.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.ColumnMoving"/> event.
            </summary>
            <param name="column"></param>
            <param name="header"></param>
            <param name="args"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.ColumnDropped">
            <summary>
            This event is raised when a successful drag operation occurs while moving a <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnColumnDropped(Infragistics.Controls.Grids.Column,Infragistics.Controls.Grids.DropOperationType,System.Int32,System.Int32)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.ColumnDropped"/> event.
            </summary>
            <param name="column"></param>
            <param name="type"></param>
            <param name="newIndex"></param>
            <param name="previousIndex"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.ColumnDragCanceled">
            <summary>
            This event is raised when a drag operation is canceled.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnColumnDragCanceled(Infragistics.Controls.Grids.Column,Infragistics.Controls.Grids.DragCancelType)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.ColumnDragCanceled"/> event.
            </summary>
            <param name="column"></param>
            <param name="type"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.ColumnDragEnded">
            <summary>
            This event is raised when a drag operation has completed, whether it was successful or canceled.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnColumnDragEnded(Infragistics.Controls.Grids.Column)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.ColumnDragEnded"/> event.
            </summary>
            <param name="column"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.CellEnteringEditMode">
            <summary>
            This event is raised beore a <see cref="T:Infragistics.Controls.Grids.Cell"/> enters edit mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnCellEnteringEditMode(Infragistics.Controls.Grids.Cell)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.CellEnteringEditMode"/> event.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.CellEnteredEditMode">
            <summary>
            This event is raised after a <see cref="T:Infragistics.Controls.Grids.Cell"/> has entered edit mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnCellEnteredEditMode(Infragistics.Controls.Grids.Cell,System.Windows.FrameworkElement)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.CellEnteredEditMode"/> event.
            </summary>
            <param name="cell"></param>
            <param name="editor"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.CellExitingEditMode">
            <summary>
            This event is raised before a cell has exited edit mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnCellExitingEditMode(Infragistics.Controls.Grids.ExitEditingCellEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.CellExitingEditMode"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.PopulatingColumnFilters">
            <summary>
            Event raised when the filter drop down is being populated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnShowAvailableColumnFilterOperands(Infragistics.Controls.Grids.PopulatingFiltersEventArgs)">
            <summary>
            Raises the PopulatingColumnFilters event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.CellExitedEditMode">
            <summary>
            This event is raised after a <see cref="T:Infragistics.Controls.Grids.Cell"/> has exited edit mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnExitedEditMode(Infragistics.Controls.Grids.Cell)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.CellExitedEditMode"/> event.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.RowEnteringEditMode">
            <summary>
            This event is raised beore a <see cref="T:Infragistics.Controls.Grids.Row"/> enters edit mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnRowEnteringEditMode(Infragistics.Controls.Grids.Row)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.RowEnteringEditMode"/> event.
            </summary>
            <param name="row"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.RowEnteredEditMode">
            <summary>
            This event is raised after a <see cref="T:Infragistics.Controls.Grids.Row"/> has entered edit mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnRowEnteredEditMode(Infragistics.Controls.Grids.Row)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.RowEnteredEditMode"/> event.
            </summary>
            <param name="row"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.RowExitingEditMode">
            <summary>
            This event is raised before a cell has exited edit mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnRowExitingEditMode(Infragistics.Controls.Grids.Row,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.RowExitingEditMode"/> event.
            </summary>
            <param name="row"></param>
            <param name="originalCellValues"></param>
            <param name="newCellValues"></param>
            <param name="cancel"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.RowExitedEditMode">
            <summary>
            This event is raised after a <see cref="T:Infragistics.Controls.Grids.Row"/> has exited edit mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnRowExitedEditMode(Infragistics.Controls.Grids.Row)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.RowExitedEditMode"/> event.
            </summary>
            <param name="row"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.RowAdding">
            <summary>
            This event is raised prior to a <see cref="T:Infragistics.Controls.Grids.Row"/> being added or inserted into the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnRowAdding(Infragistics.Controls.Grids.Row,System.Int32)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.RowAdding"/> event.
            </summary>
            <param name="row"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.RowAdded">
            <summary>
            This event is raised after a <see cref="T:Infragistics.Controls.Grids.Row"/> is added or inserted into the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnRowAdded(Infragistics.Controls.Grids.Row)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.RowAdded"/> event.
            </summary>
            <param name="row"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.RowDeleting">
            <summary>
            Event raised when a <see cref="T:Infragistics.Controls.Grids.Row"/> object is being deleted.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnRowDeleting(Infragistics.Controls.Grids.Row)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.RowDeleting"/> event.
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.RowDeleted">
            <summary>
            Event raised after a <see cref="T:Infragistics.Controls.Grids.Row"/> object is deleted.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnRowDeleted(Infragistics.Controls.Grids.Row)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.RowDeleted"/> event.
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.GroupByCollectionChanged">
            <summary>
            The <see cref="E:Infragistics.Controls.Grids.XamGrid.GroupByCollectionChanged"/> event is raised after a <see cref="T:Infragistics.Controls.Grids.Column"/> has been grouped, ungrouped, or rearranged in the GroupByColumnsCollection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnGroupByCollectionChanged(System.Collections.Generic.IList{Infragistics.Controls.Grids.Column},System.Collections.Generic.IList{Infragistics.Controls.Grids.Column})">
            <summary>
            Raised after the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>'s <see cref="T:Infragistics.Controls.Grids.GroupByColumnsCollection"/> has changed.
            </summary>
            <param name="previousGroupedColumns"></param>
            <param name="newGroupedColumns"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.CellEditingValidationFailed">
            <summary>
            This event is raised when validation fails while editing a <see cref="T:Infragistics.Controls.Grids.Cell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnCellEditingValidationFailed(Infragistics.Controls.Grids.Cell,System.Windows.Controls.ValidationErrorEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.CellEditingValidationFailed"/> event.
            </summary>
            <param name="cell"></param>
            <param name="args"></param>
            <remarks>When the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> is exiting edit mode, the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> will attach to the BindingValidationError and forward the error, if raised, through this event.
            However it will not raise this event if secondary errors are raised on the data object via the <see cref="!:INotifyDataErrorInfo"/> interface.
            </remarks>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.DataObjectRequested">
            <summary>
            Event raised when the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> is requesting a new dataobject.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnDataObjectRequested(Infragistics.HandleableObjectGenerationEventArgs,Infragistics.Controls.Grids.ColumnLayout,Infragistics.Controls.Grids.Row,System.Nullable{Infragistics.Controls.Grids.RowType})">
            <summary>
            Raises the DataObjectRequested event.
            </summary>
            <param name="args"></param>
            <param name="columnLayout"></param>
            <param name="parentRow"></param>
            <param name="typeOfRowPopulated"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.Filtering">
            <summary>
            Event raised when the <see cref="T:Infragistics.Controls.Grids.XamGrid"/> is filtering data.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnFiltering(Infragistics.Controls.Grids.Column,Infragistics.Controls.Grids.FilterOperand,Infragistics.Controls.Grids.RowFiltersCollection,System.Object)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.Filtering"/> event.
            </summary>
            <param name="column"></param>
            <param name="operand"></param>
            <param name="filters"></param>
            <param name="newValue"></param>
            <returns></returns>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.Filtered">
            <summary>
            Event raised after the grid is filtered.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnFiltered(Infragistics.Controls.Grids.RowFiltersCollection)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.Filtered"/> event.
            </summary>
            <param name="filters"></param>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnDataResolution(Infragistics.Controls.Grids.DataLimitingEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.DataResolution"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.DataResolution">
            <summary>
            Event raised when the sorting, paging, filtering and groupby is executed.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.ClipboardCopying">
            <summary>
            This event is raised prior to selected cells or rows being copied to the clipboard.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnClipboardCopying(System.Collections.ObjectModel.ReadOnlyCollection{Infragistics.Controls.Grids.CellBase},System.String@)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.ClipboardCopying"/> event.
            </summary>
            <param name="selectedItems"></param>
            <param name="clipboardValue"></param>
            <returns></returns>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.ClipboardCopyingItem">
            <summary>
            This event is raised prior to each selected cell being copied to the clipboard.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnClipboardCopyingItem(Infragistics.Controls.Grids.CellBase,System.String@)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.ClipboardCopyingItem"/> event.
            </summary>
            <param name="cell"></param>
            <param name="clipboardValue"></param>
            <returns></returns>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.ClipboardPasting">
            <summary>
            This event is raised when paste operation is initiated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnClipboardPasting(System.Collections.Generic.List{System.Collections.Generic.List{System.String}},System.String)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.ClipboardPasting"/> event.
            </summary>
            <param name="parsedValues"></param>
            <param name="clipboardValue"></param>  
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.ClipboardPasteError">
            <summary>
            This event is raised when paste operation is initiated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnClipboardPasteError(Infragistics.Controls.Grids.ClipboardPasteErrorType,System.Boolean)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.ClipboardPasteError"/> event.
            </summary>
            <param name="errorType">The type of error that trigger the event</param>
            <param name="isRecoverable">Whether or not the consumer can decided to continue past the error</param>  
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.ColumnAutoGenerated">
            <summary>
            This event is raised when a column has been generated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnColumnAutoGenerated(Infragistics.Controls.Grids.ColumnAutoGeneratedEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.ColumnAutoGenerated"/> event.
            </summary>
            <param name="e">The <see cref="T:Infragistics.Controls.Grids.ColumnAutoGeneratedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Infragistics.Controls.Grids.XamGrid.ColumnVisibilityChanged">
            <summary>
            This event is raised when the <see cref="P:Infragistics.Controls.Grids.ColumnBase.Visibility"/> property of a <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> object is changed.
            </summary>
            <remarks>
            The event will be fired for all objects deriving from <see cref="T:Infragistics.Controls.Grids.ColumnBase"/> (<seealso cref="T:Infragistics.Controls.Grids.Column"/> and <see cref="T:Infragistics.Controls.Grids.ColumnLayout"/> types).
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.OnColumnVisibilityChanged(Infragistics.Controls.Grids.ColumnVisibilityChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Grids.XamGrid.ColumnVisibilityChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:Infragistics.Controls.Grids.ColumnVisibilityChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.PropertiesToIgnore">
            <summary>
            Gets a List of properties that shouldn't be saved when the PersistenceManager goes to save them.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGrid.PriorityProperties">
            <summary>
            Gets a List of properties that should be applied, before even trying to look at any other property on the object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.FinishedLoadingPersistence">
            <summary>
            Allows an object to perform an operation, after it's been loaded.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.Infragistics#ICommandTarget#SupportsCommand(System.Windows.Input.ICommand)">
            <summary>
            Returns if the object will support a given command type.
            </summary>
            <param name="command">The command to be validated.</param>
            <returns>
            True if the object recognizes the command as actionable against it.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.XamGrid.Infragistics#ICommandTarget#GetParameter(Infragistics.Controls.CommandSource)">
            <summary>
            Returns the object that defines the parameters necessary to execute the command.
            </summary>
            <param name="source">The CommandSource object which defines the command to be executed.</param>
            <returns>
            The object necessary for the command to complete.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGridCommand">
            <summary>
            An enumeration of available commands for the <see cref="T:Infragistics.Controls.Grids.XamGrid" /> object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridCommand.Delete">
            <summary>
            Deletes a row based on the <see cref="P:Infragistics.Controls.Grids.XamGrid.DeleteKeyAction"/> setting.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridCommand.SelectAllRows">
            <summary>
            Selects all rows of the main layout of the XamGrid
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridCommand.ShowColumnChooser">
            <summary>
            Shows the ColumnChooser for the main layout of the XamGrid
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.XamGridCommand.HideColumnChooser">
            <summary>
            Hides the ColumnChooser
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGridCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Grids.XamGrid"/> object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.XamGridCommandSource.CommandType">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.XamGridCommand"/> which is to be executed by the command.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.XamGridCommandBase">
            <summary>
            Base class for all commands that deal with a <see cref="T:Infragistics.Controls.Grids.XamGrid"/> instance.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.SelectAllRowsCommand">
            <summary>
            Selects all rows of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.DeleteCommand">
            <summary>
            Invokes the delete action based on <see cref="P:Infragistics.Controls.Grids.XamGrid.DeleteKeyAction"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.ShowColumnChooserCommand">
            <summary>
            Shows the ColumnChooser for the main layout of the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.HideColumnChooserCommand">
            <summary>
            Hides the ColumnChooser.
            </summary>
        </member>
        <member name="T:Infragistics.ScrollTipInfo">
            <summary>
            An object that provides the DataContext for deferred scrolling in the <see cref="T:Infragistics.Controls.Grids.XamGrid"/>
            </summary>
        </member>
        <member name="P:Infragistics.ScrollTipInfo.Row">
            <summary>
            Gets/Sets the <see cref="T:Infragistics.Controls.Grids.RowBase"/> that will be used as the context of the ScrollTip.
            </summary>
        </member>
        <member name="F:Infragistics.ScrollTipInfo.FirstColumnValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.ScrollTipInfo.FirstColumnValue"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.ScrollTipInfo.FirstColumnValue">
            <summary>
            Gets/Sets the underlying data value of the first visible column of the Row property, so that it maybe used in the ScrollTip.
            </summary>
        </member>
        <member name="P:Infragistics.ScrollTipInfo.Column">
            <summary>
            Gets/Sets the <see cref="P:Infragistics.ScrollTipInfo.Column"/> that will be used as the context of the ScrollTip.
            </summary>
        </member>
        <member name="T:Infragistics.FilteringDataContext">
            <summary>
            An object that will be assigned to a <see cref="T:Infragistics.Controls.Grids.TemplateColumn"/>'s editor data context property for filtering.
            </summary>
        </member>
        <member name="M:Infragistics.FilteringDataContext.#ctor(Infragistics.Controls.Grids.Primitives.FilterRowCell)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.FilteringDataContext"/> class.
            </summary>
            <param name="frc"></param>
        </member>
        <member name="P:Infragistics.FilteringDataContext.Cell">
            <summary>
            Gets / sets the <see cref="T:Infragistics.Controls.Grids.Primitives.FilterRowCell"/> that is associated with this context
            </summary>
        </member>
        <member name="P:Infragistics.FilteringDataContext.Value">
            <summary>
            Gets / sets the resolved FilterCellValue for this binding.
            </summary>
        </member>
        <member name="P:Infragistics.FilteringDataContext.ColumnKey">
            <summary>
            Gets the key of the column that that this DataContext is associated with.
            </summary>
        </member>
        <member name="P:Infragistics.FilteringDataContext.RowData">
            <summary>
            Gets the row data that is associated with this object.
            </summary>
        </member>
        <member name="E:Infragistics.FilteringDataContext.PropertyChanged">
            <summary>
            Fired when a property changes on the <see cref="T:Infragistics.FilteringDataContext"/>.
            </summary>
        </member>
        <member name="M:Infragistics.FilteringDataContext.OnPropertyChanged(System.String)">
            <summary>
            Invoked when a property changes on the <see cref="T:Infragistics.FilteringDataContext"/> object.
            </summary>
            <param propertyName="propertyName">The propertyName of the property that has changed.</param>
        </member>
        <member name="M:Infragistics.FilteringDataContext.OnValueChanged">
            <summary>
            Method called when the value is modified so that the underlying object can be updated as well.
            </summary>
        </member>
        <member name="M:Infragistics.FilteringDataContext.SetValueSilent(System.Object)">
            <summary>
            Sets the Value property without raising the ValueChanged.
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:Infragistics.MergeDataContext">
            <summary>
            An object that contains the informaton of data that has been merged.
            </summary>
        </member>
        <member name="P:Infragistics.MergeDataContext.Value">
            <summary>
            Gets the value of the that the data has been merged by.
            </summary>
        </member>
        <member name="P:Infragistics.MergeDataContext.Records">
            <summary>
            Gets a collection of data that belongs to this particular merge.
            </summary>
        </member>
        <member name="P:Infragistics.MergeDataContext.Count">
            <summary>
            Gets the total amount of records in this particular merge.
            </summary>
        </member>
        <member name="T:Infragistics.SummaryOperandCollection">
            <summary>
            A collection of <see cref="T:Infragistics.SummaryOperandBase"/> objects.
            </summary>
        </member>
        <member name="T:Infragistics.DataKeyComparer">
            <summary>
            IEqualityComparer implementation used to compare DataKeys
            </summary>
        </member>
        <member name="T:Infragistics.FixedRowsOrderComparer">
            <summary>
            A comparer for FixedRows.
            </summary>
        </member>
        <member name="T:Infragistics.ISupportDataKeys">
            <summary>
            An interface to return the DataKeys for an object.  The DataKey would be an unique identifier for the object.
            </summary>
        </member>
        <member name="M:Infragistics.ISupportDataKeys.GetDataKeys">
            <summary>
            Returns the DataKey for a given data object.
            </summary>
            <returns>An object array that makes up the unique identifier for an object.</returns>
        </member>
    </members>
</doc>
